@Ecore(
	nsURI="http://andycarpenter.work/metamodel/WebApplicationFramework",
	nsPrefix="waf"
)
@Ecore(
	validationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL",
	settingDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL",
	invocationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL"
)
@GenModel(
	editDirectory="/work.andycarpenter.metamodel.waf.edit/src",
	editPluginID="work.andycarpenter.metamodel.waf.edit",
	childCreationExtenders="true",
	editorDirectory="/work.andycarpenter.metamodel.waf.editor/src",
	testsDirectory="/work.andycarpenter.metamodel.waf.tests/src")
package work.andycarpenter.metamodel.waf

import work.andycarpenter.metamodel.base.Classifier
import work.andycarpenter.metamodel.base.DataType
import work.andycarpenter.metamodel.base.EnumerationType
import work.andycarpenter.metamodel.base.NamedDisplayElement
import work.andycarpenter.metamodel.base.NamedElement
import work.andycarpenter.metamodel.expression.Expression
import work.andycarpenter.metamodel.expression.Predicate
import work.andycarpenter.metamodel.expression.Variable
import work.andycarpenter.metamodel.orm.Association
import work.andycarpenter.metamodel.orm.AssociationReference
import work.andycarpenter.metamodel.orm.Attribute
import work.andycarpenter.metamodel.orm.DateDetails
import work.andycarpenter.metamodel.orm.Entity
import work.andycarpenter.metamodel.orm.Feature
import work.andycarpenter.metamodel.orm.FeatureChildPath
import work.andycarpenter.metamodel.orm.Filter
import work.andycarpenter.metamodel.orm.Label
import work.andycarpenter.metamodel.orm.LocationFeature
import work.andycarpenter.metamodel.orm.ModelLabel
import work.andycarpenter.metamodel.orm.OrmModel
import work.andycarpenter.metamodel.orm.Repository
import work.andycarpenter.metamodel.orm.Selection
import work.andycarpenter.metamodel.api.API
import work.andycarpenter.metamodel.security.SecurityModel
import work.andycarpenter.metamodel.service.BusinessOperation
import work.andycarpenter.metamodel.service.Service
import work.andycarpenter.metamodel.service.ServiceModel

annotation "http://www.eclipse.org/emf/2002/Ecore/OCL" as OCL


enum FrameworkTechnologies {
	JSF
	CakePHP = 1
	CodeIgniter = 2
	Kohana = 3
	Laravel = 4
	Symfony = 5
}

class WafModel {
	contains SiteProperties siteProperties
	refers OrmModel[1] persistence
	refers SecurityModel security
	refers ServiceModel[1] business
	refers API api
	contains ImageManipulation[] imageManipulations
	contains Navigation navigation opposite partOf
	contains Controller[] controllers opposite partOf
	String defaultSaveLabel
	String defaultCancelLabel

	@OCL(derivation="not api.oclIsUndefined()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasAPI

	@OCL(derivation="controllers->collect(c | c.editUnits)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile EditUnit[] editUnits

	@OCL(derivation="editUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasEditUnits

	@OCL(derivation="controllers->collect(c | c.formUnits)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile SingletonUnit[] formUnits

	@OCL(derivation="formUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasFormUnits

	@OCL(derivation="controllers->collect(c | c.imageUnits)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile ImageUnit[] imageUnits

	@OCL(derivation="imageUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasImageUnits

	@OCL(derivation="controllers->collect(c | c.imageCardsUnits)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile ImageCardsUnit[] imageCardsUnits

	@OCL(derivation="imageCardsUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasImageCardsUnits

	@OCL(derivation="controllers->collect(c | c.autocompleteFields)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile UnitAssociation[] autocompleteFields
	@OCL(derivation="autocompleteFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasAutocompleteFields

	@OCL(derivation="controllers->collect(c | c.formFields)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile UnitField[] formFields

	@OCL(derivation="formFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasFormFields

	@OCL(derivation="formFields->select(f | f.oclIsKindOf(UnitAssociation))->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasFormAssociations

	@OCL(derivation="controllers->select(c | c.hasResourceFields)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasResourceFields

	@OCL(derivation="if self.security.oclIsUndefined() then false else security.isAuthenticated endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean isAuthenticated

	Boolean useFormFloatingLabels = 'false'

    @GenModel(propertyCategory="Style")
	String defaultPageClass = ''
    contains DefaultUnitStyles defaultUnitStyles
    contains CardsUnitStyles defaultCardsStyles
    contains ControlUnitStyles defaultControlStyles
    contains DetailsUnitStyles defaultDetailsStyles
    contains FormUnitStyles defaultFormStyles
    contains GalleryUnitStyles defaultGalleryStyles
    contains SliderUnitStyles defaultSliderStyles
    contains StaticUnitStyles defaultStaticStyles
    contains TabularUnitStyles defaultTabularStyles

	@OCL(derivation="self")
     @GenModel(propertyCategory="Debug")
   	refers readonly transient volatile unsettable derived WafModel genModel

	@OCL(derivation="self")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived WafModel uiModel
}

class SiteProperties {
	String[1] siteName
	String[1] siteTitle
	String[1] locale
	String webmasterEmail
	String copyrightText
	String metaDescription
	String logoImage
	refers ImageManipulation logoFilters
	FrameworkTechnologies frameworkTechnology
	boolean useDbSessionStorage
	String textEditorURL
	String siteTemplate
	String securityFromEmail = ''
	String securityFromName = ''
	boolean staticUnitsEditable
}

class Navigation {
	refers WafModel[1] partOf opposite navigation
	contains Menu[] menus opposite definedBy
	
	String navbarClass = "navbar"
	@OCL(derivation="navbarClass.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasNavbarClass

	AuthenticationMenuPlacement authenticationMenuPlacement
	String authenticationBarClass = "nav"
	@OCL(derivation="authenticationBarClass.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasAuthenticationBarClass
}

enum AuthenticationMenuPlacement {
	Above = 0
	Below = 1
	Integrated = 2
}

class Menu extends NamedDisplayElement {
	refers Navigation[1] definedBy opposite menus
	contains MenuEntry[] entries opposite partOf
	boolean omitCaption
	String styleClass
	String captionClass
	String layoutClass
}

abstract class MenuEntry {
	container Menu[1] partOf opposite entries
}

class SubmenuEntry extends Menu, MenuEntry {
    @GenModel(propertyCategory="Security")
	String authorisationRoles = ''
	@OCL(derivation="authorisationRoles.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isAuthorised
	@OCL(derivation="entries
		->select(e | e.oclIsTypeOf(ActionMenuEntry)).oclAsType(ActionMenuEntry)
		->exists(e | e.alwaysVisible = true)")
    @GenModel(propertyCategory="Debug")
	boolean alwaysVisible
}

class ActionMenuEntry extends MenuEntry, NamedDisplayElement {
	refers ContentUnit[1] action
	boolean alwaysVisible = "false"
}

class EditStaticTextMenuEntry extends MenuEntry, NamedDisplayElement {
}


abstract class ContentUnitStyles {
	String sectionClass = ''
	String captionClass = ''
	String contentClass = ''
}

abstract class DynamicUnitStyles extends ContentUnitStyles {
	String fieldListClass = ''
	String definitionFieldListClass = ''
	String fieldLabelClass = ''
	String fieldValueClass = ''
	String controlClass = ''
	String anchorClass = ''
}

class CollectionUnitStyles extends DynamicUnitStyles {
	String instanceControlClass = ''
	String instanceAnchorClass = ''
}

class DefaultUnitStyles extends CollectionUnitStyles {
}

class CardsUnitStyles extends CollectionUnitStyles {
	String rowClass = ''
	String columnClass = ''
	String cardClass = ''
	String cardHeaderClass = ''
	String cardBodyClass = ''
	String cardFooterClass = ''
	String badgeClass = ''
}

class ControlUnitStyles extends DynamicUnitStyles {
}

class DetailsUnitStyles extends DynamicUnitStyles {
}

class FormUnitStyles extends DynamicUnitStyles {
	String inputGroupClass = ''
}

class GalleryUnitStyles extends CollectionUnitStyles {
}

class SliderUnitStyles extends CollectionUnitStyles {
}

class StaticUnitStyles extends ContentUnitStyles {
}

class TabularUnitStyles extends CollectionUnitStyles {
	String headerClass = ''
	String footerClass = ''
}


abstract class DisplayElement {
	String[1] displayLabel = ''
}


class ImageManipulation extends NamedElement {
	int jpegQuality = "-1"
	contains ImageFilter[] filters
}

abstract class ImageFilter {
}

enum BackgroundPositions {
	TopLeft = 0,
	Top = 1,
	TopRight = 2,
	Left = 3,
	Center = 4,
	Right = 5,
	BottomLeft = 6,
	Bottom = 7,
	BottomRight = 8
}

class BackgroundFilter extends ImageFilter {
	String color
	int width
	int height
	BackgroundPositions position
}


enum ThumbnailModes {
	Crop = 0,
	Resize = 1
}

class ThumbnailFilter extends ImageFilter {
	int width
	int height
	ThumbnailModes mode
}


abstract class Controller extends NamedDisplayElement {
	container WafModel partOf opposite controllers

	refers Controller parentController opposite childControllers

	refers Controller[] childControllers opposite parentController

	@OCL(derivation="self.oclIsTypeOf(SinglePageController)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isSinglePage
	

	@OCL(derivation="self.oclIsTypeOf(MultiPageController)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isMultiPage
	
	@OCL(derivation="if units->isEmpty() then
			''
		else if self.hasCommonUnitAuthentication = true then
			units->first().authorisationRoles
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String commonRole

	@OCL(derivation="commonRole.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isAuthorised

	@OCL(derivation="if units->size() < 2 then
			true
		else
			units->subOrderedSet(2, units->size())->forAll(u | u.authorisationRoles.trim() = units->first().authorisationRoles.trim())
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCommonUnitAuthentication

	contains ContentUnit[] units opposite controller

	@OCL(derivation="units->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasUnits

	@OCL(derivation="editUnits->select(u | u.hasChangableCollections)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasChangableCollections

	@OCL(derivation="editUnits->select(u | u.hasCaptcha)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCaptchaUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(CollectionUnit)).oclAsType(CollectionUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived CollectionUnit[] collectionUnits
	@OCL(derivation="collectionUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCollectionUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(DynamicUnit)).oclAsType(DynamicUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived DynamicUnit[] dynamicUnits
	@OCL(derivation="dynamicUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasDynamicUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(EditUnit)).oclAsType(EditUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived EditUnit[] editUnits
	@OCL(derivation="editUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasEditUnits

	@OCL(derivation="units->select(u | u.isFormUnit).oclAsType(SingletonUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived SingletonUnit[] formUnits
	@OCL(derivation="formUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFormUnits

	@OCL(derivation="collectionUnits->select(u | u.hasFilters)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFilters

	@OCL(derivation="units->select(u | u.oclIsKindOf(GalleryUnit)).oclAsType(GalleryUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived GalleryUnit[] galleryUnits
	@OCL(derivation="galleryUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasGalleryUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(TabularUnit)).oclAsType(TabularUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived TabularUnit[] tabularUnits
	@OCL(derivation="tabularUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasTabularUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(ImageUnit)).oclAsType(ImageUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived ImageUnit[] imageUnits
	@OCL(derivation="imageUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasImageUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(ImageCardsUnit)).oclAsType(ImageCardsUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived ImageCardsUnit[] imageCardsUnits
	@OCL(derivation="imageCardsUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasImageCardsUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(MapUnit)).oclAsType(MapUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived MapUnit[] mapUnits
	@OCL(derivation="mapUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasMapUnits

	@OCL(derivation="units->select(u | u.oclIsKindOf(SliderUnit)).oclAsType(SliderUnit)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived SliderUnit[] sliderUnits
	@OCL(derivation="sliderUnits->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasSliderUnits

	@OCL(derivation="dynamicUnits->collect(u | u.repositoriesUsed)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly derived unsettable transient volatile Repository[] repositoriesUsed
	@OCL(derivation="repositoriesUsed->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasRepositoriesUsed

	@OCL(derivation="dynamicUnits->collect(u | u.servicesUsed)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived Service[] servicesUsed
	@OCL(derivation="servicesUsed->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasServicesUsed

	@OCL(derivation="collectionUnits->select(u | u.hasPagination)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasPagination

	@OCL(derivation="dynamicUnits->collect(u | u.associationFields)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile UnitAssociation[] associationFields

	@OCL(derivation="dynamicUnits->collect(u | u.autocompleteFields)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile UnitAssociation[] autocompleteFields
	@OCL(derivation="autocompleteFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasAutocompleteFields

	@OCL(derivation="dynamicUnits->collect(u | u.formFields)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived unsettable readonly transient volatile UnitField[] formFields

	@OCL(derivation="dynamicUnits->select(u | u.hasInterfaceFields)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasInterfaceFields

	@OCL(derivation="dynamicUnits->select(u | u.hasRequiredInterfaceFields)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasRequiredInterfaceFields

	@OCL(derivation="dynamicUnits->select(u | u.hasResourceFields)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasResourceFields

	@OCL(derivation="dynamicUnits->collect(u | u.actionsWithoutTarget)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Action[] actionsWithoutTarget
	
	@OCL(derivation="dynamicUnits->collect(u | u.fileActions)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile OperationAction[] fileActions
	@OCL(derivation="fileActions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasFileActions

	@OCL(derivation="editUnits->select(u | u.hasSuccessMessage)->notEmpty()
		or dynamicUnits.oclAsType(ActionContainer)->select(c | c.hasActionsWithSuccessMessages)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasSuccessMessages

	@OCL(derivation="editUnits->select(u | u.hasMessages)->notEmpty()
		or dynamicUnits.oclAsType(ActionContainer)->select(c | c.hasActionsWithMessages)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasMessages

    @GenModel(propertyCategory="Navigation")
	String uriElement = ''

    @GenModel(propertyCategory="Style")
	String[1] pageClassOverride = ''
	@OCL(derivation="if pageClassOverride.trim() <> '' then
			pageClassOverride.trim()
		else if uiModel.defaultPageClass.trim() <> '' then
			uiModel.defaultPageClass.trim()
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String pageClass
	@OCL(derivation="pageClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasPageClass

	@OCL(derivation="partOf.genModel")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived WafModel genModel

	@OCL(derivation="partOf.uiModel")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived WafModel uiModel

	@OCL(derivation="if parentController = null then
			self
		else
			parentController.rootController
		endif")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived Controller rootController
}

class SinglePageController extends Controller {
}

class MultiPageController extends Controller {
}

abstract class ContentUnit extends NamedDisplayElement {
	container Controller[1] controller opposite units

    @GenModel(propertyCategory="Navigation")
	String uriElement = ''

    @GenModel(propertyCategory="Navigation")
    refers ContentUnit uriParent

    @GenModel(propertyCategory="Security")
	String authorisationRoles = ''
	@OCL(derivation="authorisationRoles.trim() <> ''")
    @GenModel(propertyCategory="Security")
	derived readonly transient volatile boolean isAuthorised

	String purposeSummary
	String alternative
	boolean omitCaption

	@OCL(derivation="self.oclIsKindOf(EditUnit) or self.oclIsKindOf(ControlUnit)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isFormUnit

	String sectionClassOverride = ''
	String captionClassOverride = ''
	String contentClassOverride = ''

	@OCL(derivation="controller.genModel")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived WafModel genModel
	@OCL(derivation="controller.uiModel")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived WafModel uiModel
}

class StaticUnit extends ContentUnit {
	refers Repository repository
	String[1] content

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultStaticStyles.sectionClass.trim() <> '' then
			uiModel.defaultStaticStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultStaticStyles.captionClass.trim() <> '' then
			uiModel.defaultStaticStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultStaticStyles.contentClass.trim() <> '' then
			uiModel.defaultStaticStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasContentClass
}

abstract class DynamicUnit extends ContentUnit, ActionContainer {
	refers Entity[1] contentType

	@OCL(derivation="if not contentType.oclIsUndefined() then
			contentType.repository
		else
			null
		endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Repository contentRepository

	@OCL(derivation="if not contentType.oclIsUndefined() then
			contentType.containingAssociation
		else
			null
		endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Association containingAssociation

	@OCL(derivation="if self.oclIsKindOf(CollectionUnit) then
			if not self.oclAsType(CollectionUnit).findContainerSelection.oclIsUndefined() then
				self.oclAsType(CollectionUnit).findContainerSelection.definedBy.serves
			else if not self.oclAsType(CollectionUnit).selection.oclIsUndefined() then
				if self.oclAsType(CollectionUnit).selection.selectPath->notEmpty() then
					self.oclAsType(CollectionUnit).selection.selectPath->last().targetType
				else
					null
				endif
			else
				null
			endif endif
		else if self.oclIsKindOf(DetailsUnit) then
			if not self.oclAsType(DetailsUnit).selection.oclIsUndefined() then
				if self.oclAsType(DetailsUnit).selection.selectPath->notEmpty() then
					self.oclAsType(DetailsUnit).selection.selectPath->last().targetType
				else
					contentType.containingType
				endif
			else
				contentType.containingType
			endif
		else
			contentType.containingType
		endif endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Entity containingType

	@OCL(derivation="not containingType.oclIsUndefined()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean isContained

	@OCL(derivation="if not containingType.oclIsUndefined() then
			containingType.repository
		else
			null
		endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Repository containerRepository

	@OCL(derivation="if self.oclIsKindOf(EditUnit) and not containingAssociation.oclIsUndefined() then
			featureFields->exists(f | f.persistentFeature = containingAssociation)
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasExplicitlyEditedContainer

	@OCL(derivation="OrderedSet{contentRepository}->union(
			if self.oclIsKindOf(CollectionUnit) and isContained = true then
				OrderedSet{containerRepository}
			else
				OrderedSet{}
			endif)
			->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Repository[] repositoriesUsed

	@OCL(derivation="operationActions->collect(u | u.servicesUsed)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived Service[] servicesUsed
	@OCL(derivation="servicesUsed->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasServicesUsed

    @GenModel(propertyCategory="Business")
	contains RouteActual[] routeActuals

    @GenModel(propertyCategory="Model")
	contains UnitField[] displayFields opposite displayedOn

    @GenModel(propertyCategory="Business")
	contains Predicate hideWhen

	@OCL(derivation="not hideWhen.oclIsUndefined()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile Boolean isConditionallyDisplayed

    @GenModel(propertyCategory="Interface")
	String messageWhenHidden = ''
	@OCL(derivation="self.isConditionallyDisplayed = true and messageWhenHidden.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile Boolean hasHiddenMessage

	String header
	String footer

	@OCL(derivation="displayFields->select(f | f.oclIsKindOf(UnitAssociation)).oclAsType(UnitAssociation)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitAssociation[] associationFields
	@OCL(derivation="associationFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasAssociationFields

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
				associationFields->select(f | f.useAutocomplete)->asOrderedSet()
			else
				OrderedSet{}
			endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly transient volatile UnitAssociation[] autocompleteFields
	@OCL(derivation="autocompleteFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasAutocompleteFields

	int autocompleteThreshold = "0"
	@OCL(derivation="displayFields->select(f | f.isBooleanField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasBooleanFields

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
				self.oclAsType(EditUnit).useCaptcha
			else
				false
			endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasCaptcha

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
				collectionFields
					->select(f | f.oclIsKindOf(UnitFeature)).oclAsType(UnitFeature)
					->select(f | f.collectionUiAllowAdd = true or f.collectionUiAllowRemove = true)
					->notEmpty()
			else
				false
			endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasChangableCollections

	@OCL(derivation="displayFields->select(f | f.isSingleton = false)")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] collectionFields

	@OCL(derivation="collectionFields->select(f | f.oclIsKindOf(UnitFeature)).oclAsType(UnitFeature)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitFeature[] collectionFeatures

	@OCL(derivation="displayFields->select(f | f.isDataTypeField = true)")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] dataTypeFields

	@OCL(derivation="displayFields->select(f | f.isDateField = true)")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] dateFields

	@OCL(derivation="displayFields->select(f | f.hasDefaultValue = true)")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] defaultValueFields

	@OCL(derivation="defaultValueFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasDefaultValueFields

	@OCL(derivation="displayFields->select(f | f.isDisabled = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasDisabledFields

	@OCL(derivation="displayFields->select(f | f.isEmailField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasEmailFields

	@OCL(derivation="displayFields->select(f | f.isEncryptedField = true)")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] encryptedFields

	@OCL(derivation="encryptedFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasEncryptedFields

	@OCL(derivation="displayFields->select(f | f.isEnumerationField = true)")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] enumerationFields
	@OCL(derivation="enumerationFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasEnumerationFields

	@OCL(derivation="displayFields->select(f | f.oclIsKindOf(UnitFeature)).oclAsType(UnitFeature)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitFeature[] featureFields
	@OCL(derivation="featureFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFeatureFields

	@OCL(derivation="displayFields->select(f | f.hasForcedValue = true)")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] forcedValueFields
	@OCL(derivation="forcedValueFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasForcedValueFields

	@OCL(derivation="if self.isFormUnit = true then
				displayFields
			else
				OrderedSet{}
			endif")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived UnitField[] formFields

	@OCL(derivation="displayFields->select(f | f.isIntegerField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasIntegerFields

	@OCL(derivation="displayFields->select(f | f.oclIsKindOf(InterfaceField)).oclAsType(InterfaceField)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived InterfaceField[] interfaceFields
	@OCL(derivation="interfaceFields->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasInterfaceFields

	@OCL(derivation="interfaceFields->select(f | f.isRequired = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasRequiredInterfaceFields

	@OCL(derivation="displayFields->select(f | f.isObfuscatedField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasObfuscatedFields

	@OCL(derivation="displayFields->select(f | f.isRepeated = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasRepeatedFields

	@OCL(derivation="displayFields->select(f | f.isResourceField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	readonly transient volatile unsettable derived boolean hasResourceFields

	@OCL(derivation="displayFields->select(f | f.isStringField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasStringFields

	@OCL(derivation="displayFields->select(f | f.isTextareaField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasTextareaFields

	@OCL(derivation="displayFields->select(f | f.isUrlField = true)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasUrlFields

	String localFieldListClass = ''
	String localDefinitionFieldListClass = ''
	String localFieldLabelClass = ''
	String localFieldValueClass = ''
	String localControlClass = ''
	String localAnchorClass = ''

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
					if self.oclAsType(EditUnit).hasFieldListClass = true then
						self.oclAsType(EditUnit).fieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(DetailsUnit) then
					if self.oclAsType(DetailsUnit).hasFieldListClass = true then
						self.oclAsType(DetailsUnit).fieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(TabularUnit) then
					if self.oclAsType(TabularUnit).hasFieldListClass = true then
						self.oclAsType(TabularUnit).fieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(CardsUnit) then
					if self.oclAsType(CardsUnit).hasFieldListClass = true then
						self.oclAsType(CardsUnit).fieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(SliderUnit) then
					if self.oclAsType(SliderUnit).hasFieldListClass = true then
						self.oclAsType(SliderUnit).fieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(GalleryUnit) then
					if self.oclAsType(GalleryUnit).hasFieldListClass = true then
						self.oclAsType(GalleryUnit).fieldListClass
					else
						''
					endif
				else
					''
				endif endif endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String commonFieldListClass
    @GenModel(propertyCategory="Debug")
	@OCL(derivation="commonFieldListClass <> ''")
	derived readonly transient volatile boolean hasCommonFieldListClass

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
					if self.oclAsType(EditUnit).hasDefinitionFieldListClass = true then
						self.oclAsType(EditUnit).definitionFieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(DetailsUnit) then
					if self.oclAsType(DetailsUnit).hasDefinitionFieldListClass = true then
						self.oclAsType(DetailsUnit).definitionFieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(TabularUnit) then
					if self.oclAsType(TabularUnit).hasDefinitionFieldListClass = true then
						self.oclAsType(TabularUnit).definitionFieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(CardsUnit) then
					if self.oclAsType(CardsUnit).hasDefinitionFieldListClass = true then
						self.oclAsType(CardsUnit).definitionFieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(SliderUnit) then
					if self.oclAsType(SliderUnit).hasDefinitionFieldListClass = true then
						self.oclAsType(SliderUnit).definitionFieldListClass
					else
						''
					endif
				else if self.oclIsKindOf(GalleryUnit) then
					if self.oclAsType(GalleryUnit).hasDefinitionFieldListClass = true then
						self.oclAsType(GalleryUnit).definitionFieldListClass
					else
						''
					endif
				else
					''
				endif endif endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String commonDefinitionFieldListClass
	@OCL(derivation="commonDefinitionFieldListClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCommonDefinitionFieldListClass

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
					if self.oclAsType(EditUnit).hasFieldLabelClass = true then
						self.oclAsType(EditUnit).fieldLabelClass
					else
						''
					endif
				else if self.oclIsKindOf(DetailsUnit) then
					if self.oclAsType(DetailsUnit).hasFieldLabelClass = true then
						self.oclAsType(DetailsUnit).fieldLabelClass
					else
						''
					endif
				else if self.oclIsKindOf(TabularUnit) then
					if self.oclAsType(TabularUnit).hasFieldLabelClass = true then
						self.oclAsType(TabularUnit).fieldLabelClass
					else
						''
					endif
				else if self.oclIsKindOf(CardsUnit) then
					if self.oclAsType(CardsUnit).hasFieldLabelClass = true then
						self.oclAsType(CardsUnit).fieldLabelClass
					else
						''
					endif
				else if self.oclIsKindOf(SliderUnit) then
					if self.oclAsType(SliderUnit).hasFieldLabelClass = true then
						self.oclAsType(SliderUnit).fieldLabelClass
					else
						''
					endif
				else if self.oclIsKindOf(GalleryUnit) then
					if self.oclAsType(GalleryUnit).hasFieldLabelClass = true then
						self.oclAsType(GalleryUnit).fieldLabelClass
					else
						''
					endif
				else
					''
				endif endif endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String commonFieldLabelClass
	@OCL(derivation="commonFieldLabelClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCommonFieldLabelClass

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
					if self.oclAsType(EditUnit).hasFieldValueClass = true then
						self.oclAsType(EditUnit).fieldValueClass
					else
						''
					endif
				else if self.oclIsKindOf(DetailsUnit) then
					if self.oclAsType(DetailsUnit).hasFieldValueClass = true then
						self.oclAsType(DetailsUnit).fieldValueClass
					else
						''
					endif
				else if self.oclIsKindOf(TabularUnit) then
					if self.oclAsType(TabularUnit).hasFieldValueClass = true then
						self.oclAsType(TabularUnit).fieldValueClass
					else
						''
					endif
				else if self.oclIsKindOf(CardsUnit) then
					if self.oclAsType(CardsUnit).hasFieldValueClass = true then
						self.oclAsType(CardsUnit).fieldValueClass
					else
						''
					endif
				else if self.oclIsKindOf(SliderUnit) then
					if self.oclAsType(SliderUnit).hasFieldValueClass = true then
						self.oclAsType(SliderUnit).fieldValueClass
					else
						''
					endif
				else if self.oclIsKindOf(GalleryUnit) then
					if self.oclAsType(GalleryUnit).hasFieldValueClass = true then
						self.oclAsType(GalleryUnit).fieldValueClass
					else
						''
					endif
				else
					''
				endif endif endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String commonFieldValueClass
	@OCL(derivation="commonFieldValueClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCommonFieldValueClass

	@OCL(derivation="if self.oclIsKindOf(EditUnit) then
					if self.oclAsType(EditUnit).hasAnchorClass = true then
						self.oclAsType(EditUnit).anchorClass
					else
						''
					endif
				else if self.oclIsKindOf(DetailsUnit) then
					if self.oclAsType(DetailsUnit).hasAnchorClass = true then
						self.oclAsType(DetailsUnit).anchorClass
					else
						''
					endif
				else if self.oclIsKindOf(TabularUnit) then
					if self.oclAsType(TabularUnit).hasAnchorClass = true then
						self.oclAsType(TabularUnit).anchorClass
					else
						''
					endif
				else if self.oclIsKindOf(CardsUnit) then
					if self.oclAsType(CardsUnit).hasAnchorClass = true then
						self.oclAsType(CardsUnit).anchorClass
					else
						''
					endif
				else if self.oclIsKindOf(SliderUnit) then
					if self.oclAsType(SliderUnit).hasAnchorClass = true then
						self.oclAsType(SliderUnit).anchorClass
					else
						''
					endif
				else if self.oclIsKindOf(GalleryUnit) then
					if self.oclAsType(GalleryUnit).hasAnchorClass = true then
						self.oclAsType(GalleryUnit).anchorClass
					else
						''
					endif
				else
					''
				endif endif endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String commonAnchorClass
	@OCL(derivation="commonAnchorClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCommonAnchorClass
}

class RouteActual {
	refers Attribute[1] routeParameter
	contains Expression[1] value
}

enum CollectionDisplayOptions {
	LineDirection
	PageDirection = 1
}

interface UnitField extends DisplayElement {
	container DynamicUnit[1] displayedOn opposite displayFields

	@OCL(derivation="if self.oclIsKindOf(UnitAttribute) then
			self.oclAsType(UnitAttribute).name
		else if self.oclIsKindOf(UnitAssociation) then
			self.oclAsType(UnitAssociation).name
		else if self.oclIsKindOf(InterfaceField) then
			self.oclAsType(InterfaceField).name
		else if self.oclIsKindOf(UnitLabel) then
			self.oclAsType(UnitLabel).name
		else
			''
		endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldName

	String authorisationRoles = ''
	@OCL(derivation="authorisationRoles.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isAuthorised

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			(displayLabel.trim() <> '')
				and (displayLabel.trim() <> self.oclAsType(UnitFeature).persistentFeature.displayLabel.trim())
		else if self.oclIsKindOf(InterfaceField) then
			true
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasCustomisedDisplayLabel

	@OCL(derivation="if self.oclIsKindOf(InterfaceField) then
			self.oclAsType(InterfaceField).repeatedField
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean isRepeated

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			let feature : UnitFeature = self.oclAsType(UnitFeature)
				in if feature.titleOverride.trim() <> '' then
						feature.titleOverride.trim()
					else if feature.displayLabel.trim() <> '' then
						feature.displayLabel.trim()
					else if feature.persistentFeature.displayLabel.trim() <> '' then
						feature.persistentFeature.displayLabel.trim()
					else
						feature.persistentFeature.name
					endif endif endif
		else if self.oclIsKindOf(InterfaceField) then
			let field : InterfaceField = self.oclAsType(InterfaceField)
				in if field.fieldTitle.trim() <> '' then
						field.fieldTitle.trim()
					else if field.displayLabel.trim() <> '' then
						field.displayLabel.trim()
					else
						field.name
					endif endif
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String title
	@OCL(derivation="title <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasTitle

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			title <> self.oclAsType(UnitFeature).persistentFeature.displayLabel.trim()
		else
			title <> ''
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasCustomisedTitle

	@OCL(derivation="if self.oclIsKindOf(InterfaceField) and self.isRepeated then
			self.oclAsType(InterfaceField).secondTitle.trim() <> ''
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasSecondTitle

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			let feature : UnitFeature = self.oclAsType(UnitFeature)
				in if feature.placeholderOverride.trim() <> '' then
						feature.placeholderOverride.trim()
					else if feature.displayLabel.trim() <> '' then
						feature.displayLabel.trim()
					else if feature.persistentFeature.displayLabel.trim() <> '' then
						feature.persistentFeature.displayLabel.trim()
					else
						feature.persistentFeature.name
					endif endif endif
		else if self.oclIsKindOf(InterfaceField) then
			let field : InterfaceField = self.oclAsType(InterfaceField)
				in if field.fieldPlaceholder.trim() <> '' then
						field.fieldPlaceholder.trim()
					else if field.displayLabel.trim() <> '' then
						field.displayLabel.trim()
					else
						field.name
					endif endif
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String placeholder
	@OCL(derivation="placeholder <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasPlaceholder

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			placeholder <> self.oclAsType(UnitFeature).persistentFeature.displayLabel.trim()
		else
			placeholder <> ''
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasCustomisedPlaceholder

	@OCL(derivation="if self.oclIsKindOf(InterfaceField) and self.isRepeated then
			self.oclAsType(InterfaceField).secondPlaceholder.trim() <> ''
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasSecondPlaceholder

	String localHelp = ''
	@OCL(derivation="if self.oclIsKindOf(UnitLabel) then
			''
		else
			if localHelp.trim() <> '' then
				localHelp.trim()
			else
				''
			endif
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String help
	@OCL(derivation="help <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasHelp

	@OCL(derivation="if self.oclIsKindOf(InterfaceField) and self.isRepeated then
			self.oclAsType(InterfaceField).secondHelp.trim() <> ''
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasSecondHelp

	contains Predicate hideWhen

	@OCL(derivation="if self.oclIsKindOf(UnitAttribute) then
			self.oclAsType(UnitAttribute).attribute
		else if self.oclIsKindOf(UnitAssociation) then
			if self.oclAsType(UnitAssociation).childFeature.oclIsUndefined() then
				self.oclAsType(UnitAssociation).association
			else
				if self.oclAsType(UnitAssociation).childFeature.oclIsKindOf(ChildPathAttribute) then
					self.oclAsType(UnitAssociation).childFeature.oclAsType(ChildPathAttribute).persistentFeature
				else if self.oclAsType(UnitAssociation).childFeature.oclIsKindOf(ChildPathAssociation) then
					self.oclAsType(UnitAssociation).childFeature.oclAsType(ChildPathAssociation).persistentFeature
				else
					self.oclAsType(UnitAssociation).association
				endif endif
			endif
		else
			null
		endif endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly transient volatile Feature persistentFeature

	@OCL(derivation="if self.oclIsKindOf(UnitAssociation) then
			self.oclAsType(UnitAssociation).association.isContains
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isContains

	@OCL(derivation="disabledInput")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isDisabled

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isRequired
		else if self.oclIsKindOf(InterfaceField) then
			self.oclAsType(InterfaceField).fieldRequired
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isRequired

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isSingleton = true
		else if self.oclIsKindOf(InterfaceField) then
			true
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isSingleton

	@OCL(derivation="self.oclIsKindOf(UnitAssociation)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isAssociationField

	@OCL(derivation="self.oclIsKindOf(UnitAttribute)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isAttributeField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isBooleanFeature
		else if self.oclIsKindOf(DataTypeField) then
			self.oclAsType(DataTypeField).dataType.isBooleanClassifier
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isBooleanField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isDataTypeFeature
		else
			self.oclIsKindOf(DataTypeField)
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isDataTypeField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.dataType
		else if self.oclIsKindOf(DataTypeField) then
			self.oclAsType(DataTypeField).fieldDataType
		else
			null
		endif endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly transient volatile Classifier dataType

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isDateFeature
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isDateField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.dateDetails
		else
			null
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile DateDetails dateDetails

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isEmailFeature
		else if self.oclIsKindOf(DataTypeField) then
			self.oclAsType(DataTypeField).dataType.isEmailClassifier
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isEmailField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isEncrypted
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isEncryptedField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isEnumerationFeature
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isEnumerationField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.enumerationType
		else
			null
		endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly transient volatile EnumerationType enumerationType

	@OCL(derivation="self.oclIsKindOf(UnitFeature)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isFeatureField

	@OCL(derivation="self.oclIsKindOf(InterfaceField)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isInterfaceField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isIntegerFeature
		else if self.oclIsKindOf(DataTypeField) then
			self.oclAsType(DataTypeField).dataType.isIntegerClassifier
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isIntegerField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isLocationFeature
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isLocationField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isObfuscatedFeature
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isObfuscatedFeature

	@OCL(derivation="if self.oclIsKindOf(UnitAttribute) then
			self.oclAsType(UnitAttribute).obfuscateFormFields or isObfuscatedFeature
		else if self.oclIsKindOf(DataTypeField) then
			self.oclAsType(DataTypeField).obfuscateFormFields
		else
			isObfuscatedFeature
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isObfuscatedField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isResourceFeature
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isResourceField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isStringFeature
		else if self.oclIsKindOf(DataTypeField) then
			self.oclAsType(DataTypeField).dataType.isStringClassifier
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isStringField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isTextareaFeature
		else if self.oclIsKindOf(DataTypeField) then
			self.oclAsType(DataTypeField).dataType.isTextareaClassifier
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isTextareaField

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			persistentFeature.isUrlFeature
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isUrlField

	@OCL(derivation="if self.oclIsKindOf(UnitAttribute) then
			self.oclAsType(UnitAttribute).attributeDefaultValue
		else if self.oclIsKindOf(InterfaceField) then
			self.oclAsType(InterfaceField).fieldDefaultValue
		else
			null
		endif endif")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile derived Expression defaultValue

	@OCL(derivation="not defaultValue.oclIsUndefined()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasDefaultValue

	@OCL(derivation="if self.oclIsKindOf(UnitFeature) then
			not self.oclAsType(UnitFeature).forcedValue.oclIsUndefined()
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasForcedValue

	boolean escapeHTML = "true"
	CollectionDisplayOptions collectionDisplayOption
	boolean truncate
	String dateFormat
	boolean disabledInput
	String headerClass

	String inputGroupClassOverride = ''
	@OCL(derivation="if inputGroupClassOverride.trim() <> '' then
			inputGroupClassOverride.trim()
		else if displayedOn.oclIsKindOf(EditUnit) then
			if displayedOn.oclAsType(EditUnit).hasInputGroupClass = true then
				displayedOn.oclAsType(EditUnit).inputGroupClass
			else
				''
			endif
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String inputGroupClass
	@OCL(derivation="inputGroupClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasInputGroupClass

	String fieldLabelClassOverride = ''
	@OCL(derivation="if fieldLabelClassOverride.trim() <> '' then
			fieldLabelClassOverride.trim()
		else if displayedOn.hasCommonFieldLabelClass = true then
			displayedOn.commonFieldLabelClass
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldLabelClass

	String fieldValueClassOverride = ''
	@OCL(derivation="if fieldValueClassOverride.trim() <> '' then
			fieldValueClassOverride.trim()
		else if displayedOn.hasCommonFieldValueClass = true then
			displayedOn.commonFieldValueClass
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldValueClass

	String footerClass

	@OCL(derivation="displayedOn.genModel")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived WafModel genModel

	@OCL(derivation="displayedOn.uiModel")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived WafModel uiModel
}

abstract class UnitFeature extends UnitField, ActionContainer {
	String titleOverride = ''
	String placeholderOverride = ''
	contains Expression forcedValue
	boolean collectionUiAllowAdd = "true"
	boolean collectionUiAllowRemove = "true"
	String defaultDisplayValue
	contains Predicate displayDefaultWhen
	String emptyDisplayValue
	boolean autofocus
	String footer
}

class UnitAttribute extends UnitFeature {
	refers Attribute[1] attribute

	@OCL(derivation="if not attribute.oclIsUndefined() then
			attribute.name
		else
			''
		endif")
    @GenModel(propertyCategory="Debug")
	derived String[1] name

	contains Expression attributeDefaultValue
	boolean obfuscateFormFields
	String validationPattern = ''
}

class UnitAssociation extends UnitFeature, AssociationReference {
	refers Selection options
	boolean useAutocomplete = "false"
}

abstract class FeaturePath extends Variable {
	boolean useContainerAsContext

	@OCL(derivation="if self.oclIsKindOf(FeaturePathAssociation) then
			not self.oclAsType(FeaturePathAssociation).childFeature.oclIsUndefined()
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasChild

	@OCL(derivation="if self.oclIsKindOf(FeaturePathAttribute) then
			self.oclAsType(FeaturePathAttribute).attribute.isRequired
		else if self.oclIsKindOf(FeaturePathAssociation) then
			self.oclAsType(FeaturePathAssociation).association.isRequired
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isRequired

	@OCL(derivation="if self.oclIsKindOf(FeaturePathAttribute) then
			self.oclAsType(FeaturePathAttribute).attribute.isSingleton
		else if self.oclIsKindOf(FeaturePathAssociation) then
			self.oclAsType(FeaturePathAssociation).association.isSingleton
		else
			false
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean isSingleton
}

class FeaturePathAttribute extends FeaturePath {
	refers Attribute[1] attribute

	@OCL(derivation="if not attribute.oclIsUndefined() then
			attribute.name
		else
			''
		endif")
    @GenModel(propertyCategory="Debug")
	derived String name
}

class FeaturePathAssociation extends FeaturePath, AssociationReference {
}

class FeaturePathLabel extends FeaturePath {
	refers ModelLabel[1] label

	@OCL(derivation="if not label.oclIsUndefined() then
			label.name
		else
			''
		endif")
    @GenModel(propertyCategory="Debug")
	derived String name
}

class ChildPathAttribute extends FeatureChildPath {
	refers Attribute[1] attribute

	@OCL(derivation="if not attribute.oclIsUndefined() then
			attribute.name
		else
			''
		endif")
    @GenModel(propertyCategory="Debug")
	derived String name

	@OCL(derivation="attribute")
    @GenModel(propertyCategory="Debug")
	refers derived readonly transient volatile Feature persistentFeature
}

class ChildPathAssociation extends FeatureChildPath, AssociationReference {
	@OCL(derivation="not childFeature.oclIsUndefined()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasChild

	@OCL(derivation="if hasChild = false then
			association
		else if childFeature.oclIsKindOf(ChildPathAttribute) then
			childFeature.oclAsType(ChildPathAttribute).persistentFeature
		else if childFeature.oclIsKindOf(ChildPathAssociation) then
			childFeature.oclAsType(ChildPathAssociation).persistentFeature
		else
			null
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly transient volatile Feature persistentFeature
}

class UnitLabel extends UnitField {
	refers ModelLabel[1] label

	@OCL(derivation="if not label.oclIsUndefined() then
			label.name
		else
			''
		endif")
    @GenModel(propertyCategory="Debug")
	derived String[1] name
}

abstract class InterfaceField extends NamedElement, UnitField {
	String fieldTitle = ''
	String fieldPlaceholder = ''
	boolean fieldRequired
	contains Expression fieldDefaultValue
	String interfaceType
	String validationPattern = ''
	boolean repeatedField = 'false'
	String secondDisplayLabel = ''
	String secondTitle = ''
	String secondPlaceholder = ''
	String secondHelp = ''
}

class DataTypeField extends InterfaceField {
	refers DataType[1] fieldDataType
	boolean caseInsensitive
	boolean obfuscateFormFields
	boolean encrypt
}

class DateField extends InterfaceField {
	DateDetails[1] details
	String format
}

interface SelectableUnit {
	refers SelectAction[] selectors opposite target
}

class SingletonUnit extends DynamicUnit {
	refers Label title
}

enum PaginationControlPlacements {
	Below = 0
	Above = 1
	AboveAndBelow = 2
}

abstract class CollectionUnit extends DynamicUnit, SelectableUnit {
	refers Label unitTitle
	contains FeaturePath elementTitle
	boolean truncateElementTitle = "false"
	refers Selection selection
	refers Entity containerType
	refers Selection findContainerSelection
	refers Selection findElementSelection

	refers Filter filter
	refers Filter[] supportedFilters
	@OCL(derivation="supportedFilters->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFilters

	@OCL(derivation="if not selection.oclIsUndefined() then
			selection.grouping->notEmpty()
		else
			false
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasGroupedResults

	@OCL(derivation="defaultPaginationSize > 0
		and if selection.oclIsUndefined() then
				true
			else
				selection.hasPaginationSupport = true
			endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasPagination

	String emptyMessage
	boolean omitFieldLabels
	int defaultPaginationSize
	int maximumPaginationSize
	PaginationControlPlacements paginationControlPlacement = "Below"
	int nextNpages
	int previousNpages
	String nextPageLabel = ">"
	String nextPageIconName = ''
	String previousPageLabel = "<"
	String previousPageIconName = ''
	boolean useDisabledPageLinks
	boolean useFirstLastPageLinks
	String firstPageLabel = "<<"
	String firstPageIconName = ''
	String lastPageLabel = ">>"
	String lastPageIconName = ''
	String paginationClass
	String paginationElementClass
	String paginationAnchorClass

	String localInstanceControlClass = ''
	String localInstanceAnchorClass = ''

	@OCL(derivation="if self.oclIsKindOf(TabularUnit) then
					if self.oclAsType(TabularUnit).hasInstanceControlClass = true then
						self.oclAsType(TabularUnit).instanceControlClass
					else
						''
					endif
				else if self.oclIsKindOf(CardsUnit) then
					if self.oclAsType(CardsUnit).hasInstanceControlClass = true then
						self.oclAsType(CardsUnit).instanceControlClass
					else
						''
					endif
				else if self.oclIsKindOf(SliderUnit) then
					if self.oclAsType(SliderUnit).hasInstanceControlClass = true then
						self.oclAsType(SliderUnit).instanceControlClass
					else
						''
					endif
				else if self.oclIsKindOf(GalleryUnit) then
					if self.oclAsType(GalleryUnit).hasInstanceControlClass = true then
						self.oclAsType(GalleryUnit).instanceControlClass
					else
						''
					endif
				else
					''
				endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String commonInstanceControlClass
	@OCL(derivation="commonInstanceControlClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCommonInstanceControlClass

	@OCL(derivation="if self.oclIsKindOf(TabularUnit) then
					if self.oclAsType(TabularUnit).hasInstanceAnchorClass = true then
						self.oclAsType(TabularUnit).instanceAnchorClass
					else
						''
					endif
				else if self.oclIsKindOf(CardsUnit) then
					if self.oclAsType(CardsUnit).hasInstanceAnchorClass = true then
						self.oclAsType(CardsUnit).instanceAnchorClass
					else
						''
					endif
				else if self.oclIsKindOf(SliderUnit) then
					if self.oclAsType(SliderUnit).hasInstanceAnchorClass = true then
						self.oclAsType(SliderUnit).instanceAnchorClass
					else
						''
					endif
				else if self.oclIsKindOf(GalleryUnit) then
					if self.oclAsType(GalleryUnit).hasInstanceAnchorClass = true then
						self.oclAsType(GalleryUnit).instanceAnchorClass
					else
						''
					endif
				else
					''
				endif endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile String commonInstanceAnchorClass
	@OCL(derivation="commonInstanceAnchorClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCommonInstanceAnchorClass
}

abstract class EditUnit extends SingletonUnit {
	boolean useCaptcha = 'false'
	boolean onSaveContinueEditing = 'false'
	contains Predicate disableWhen
	refers ContentUnit confirmDestination
	String[1] confirmLabel
	boolean hasCustomConfirmLabel

	contains Message confirmMessage
	@OCL(derivation="not confirmMessage.oclIsUndefined()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasConfirmMessage

	contains Message successMessage
	@OCL(derivation="not successMessage.oclIsUndefined()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasSuccessMessage

	@OCL(derivation="hasConfirmMessage or hasSuccessMessage")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasMessages

	refers ContentUnit cancelDestination
	String cancelLabel
	boolean hasCustomCancelLabel

	String[1] localInputGroupClass = ''

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultFormStyles.sectionClass.trim() <> '' then
			uiModel.defaultFormStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultFormStyles.captionClass.trim() <> '' then
			uiModel.defaultFormStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultFormStyles.contentClass.trim() <> '' then
			uiModel.defaultFormStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasContentClass

	@OCL(derivation="if localFieldListClass.trim() <> '' then
			localFieldListClass.trim()
		else if uiModel.defaultFormStyles.fieldListClass.trim() <> '' then
			uiModel.defaultFormStyles.fieldListClass.trim()
		else if uiModel.defaultUnitStyles.fieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldListClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldListClass
	@OCL(derivation="fieldListClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldListClass

	@OCL(derivation="if localDefinitionFieldListClass.trim() <> '' then
			localDefinitionFieldListClass.trim()
		else if uiModel.defaultFormStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultFormStyles.definitionFieldListClass.trim()
		else if uiModel.defaultUnitStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.definitionFieldListClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String definitionFieldListClass
	@OCL(derivation="definitionFieldListClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasDefinitionFieldListClass

	@OCL(derivation="if localFieldLabelClass.trim() <> '' then
			localFieldLabelClass.trim()
		else if uiModel.defaultFormStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultFormStyles.fieldLabelClass.trim()
		else if uiModel.defaultUnitStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldLabelClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldLabelClass

	@OCL(derivation="if localFieldValueClass.trim() <> '' then
			localFieldValueClass.trim()
		else if uiModel.defaultFormStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultFormStyles.fieldValueClass.trim()
		else if uiModel.defaultUnitStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldValueClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldValueClass

	@OCL(derivation="if localControlClass.trim() <> '' then
			localControlClass.trim()
		else if uiModel.defaultFormStyles.controlClass.trim() <> '' then
			uiModel.defaultFormStyles.controlClass.trim()
		else if uiModel.defaultUnitStyles.controlClass.trim() <> '' then
			uiModel.defaultUnitStyles.controlClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String controlClass
	@OCL(derivation="controlClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasControlClass

	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if uiModel.defaultFormStyles.anchorClass.trim() <> '' then
			uiModel.defaultFormStyles.anchorClass.trim()
		else if uiModel.defaultUnitStyles.anchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.anchorClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasAnchorClass

	@OCL(derivation="if localInputGroupClass.trim() <> '' then
			localInputGroupClass.trim()
		else if uiModel.defaultFormStyles.inputGroupClass.trim() <> '' then
			uiModel.defaultFormStyles.inputGroupClass.trim()
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String inputGroupClass
	@OCL(derivation="inputGroupClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasInputGroupClass
}

class CreateUnit extends EditUnit {
}

class UpdateUnit extends EditUnit, SelectableUnit {
	boolean displayEmptyForm = "true"
}

class CreateUpdateUnit extends EditUnit, SelectableUnit {
	String updateUriElement = ''
	String clearLabel
}

class MapUnit extends EditUnit, SelectableUnit {
	boolean readOnly
	int defaultZoomLevel
	refers LocationFeature[1] location
	refers Attribute placeName
}

class DetailsUnit extends SingletonUnit, SelectableUnit {
	refers Selection selection
	boolean omitFieldLabels

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultDetailsStyles.sectionClass.trim() <> '' then
			uiModel.defaultDetailsStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultDetailsStyles.captionClass.trim() <> '' then
			uiModel.defaultDetailsStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultDetailsStyles.contentClass.trim() <> '' then
			uiModel.defaultDetailsStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasContentClass

	@OCL(derivation="if localFieldListClass.trim() <> '' then
			localFieldListClass.trim()
		else if uiModel.defaultDetailsStyles.fieldListClass.trim() <> '' then
			uiModel.defaultDetailsStyles.fieldListClass.trim()
		else if uiModel.defaultUnitStyles.fieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldListClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldListClass
	@OCL(derivation="fieldListClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldListClass

	@OCL(derivation="if localDefinitionFieldListClass.trim() <> '' then
			localDefinitionFieldListClass.trim()
		else if uiModel.defaultDetailsStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultDetailsStyles.definitionFieldListClass.trim()
		else if uiModel.defaultUnitStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.definitionFieldListClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String definitionFieldListClass
	@OCL(derivation="definitionFieldListClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasDefinitionFieldListClass

	@OCL(derivation="if localFieldLabelClass.trim() <> '' then
			localFieldLabelClass.trim()
		else if uiModel.defaultDetailsStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultDetailsStyles.fieldLabelClass.trim()
		else if uiModel.defaultUnitStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldLabelClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldLabelClass

	@OCL(derivation="if localFieldValueClass.trim() <> '' then
			localFieldValueClass.trim()
		else if uiModel.defaultDetailsStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultDetailsStyles.fieldValueClass.trim()
		else if uiModel.defaultUnitStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldValueClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFieldValueClass

	@OCL(derivation="if localControlClass.trim() <> '' then
			localControlClass.trim()
		else if uiModel.defaultDetailsStyles.controlClass.trim() <> '' then
			uiModel.defaultDetailsStyles.controlClass.trim()
		else if uiModel.defaultUnitStyles.controlClass.trim() <> '' then
			uiModel.defaultUnitStyles.controlClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String controlClass
	@OCL(derivation="controlClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasControlClass

	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if uiModel.defaultDetailsStyles.anchorClass.trim() <> '' then
			uiModel.defaultDetailsStyles.anchorClass.trim()
		else if uiModel.defaultUnitStyles.anchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.anchorClass.trim()
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasAnchorClass
}

class TabularUnit extends CollectionUnit {
	refers SearchUnit targettingSearches opposite resultsDestination
	String rowClasses
	String localHeaderClass = ''
	String localFooterClass = ''

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultTabularStyles.sectionClass.trim() <> '' then
			uiModel.defaultTabularStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultTabularStyles.captionClass.trim() <> '' then
			uiModel.defaultTabularStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultTabularStyles.contentClass.trim() <> '' then
			uiModel.defaultTabularStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
	derived readonly transient volatile boolean hasContentClass

	@OCL(derivation="if localHeaderClass.trim() <> '' then
			localHeaderClass.trim()
		else if uiModel.defaultTabularStyles.headerClass.trim() <> '' then
			uiModel.defaultTabularStyles.headerClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String headerClass
	@OCL(derivation="headerClass <> ''")
	derived readonly transient volatile boolean hasHeaderClass

	@OCL(derivation="if localFooterClass.trim() <> '' then
			localFooterClass.trim()
		else if uiModel.defaultTabularStyles.footerClass.trim() <> '' then
			uiModel.defaultTabularStyles.footerClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String footerClass
	@OCL(derivation="footerClass <> ''")
	derived readonly transient volatile boolean hasFooterClass

	@OCL(derivation="if localFieldListClass.trim() <> '' then
			localFieldListClass.trim()
		else if uiModel.defaultTabularStyles.fieldListClass.trim() <> '' then
			uiModel.defaultTabularStyles.fieldListClass.trim()
		else if uiModel.defaultUnitStyles.fieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldListClass
	@OCL(derivation="fieldListClass <> ''")
	derived readonly transient volatile boolean hasFieldListClass

	@OCL(derivation="if localDefinitionFieldListClass.trim() <> '' then
			localDefinitionFieldListClass.trim()
		else if uiModel.defaultTabularStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultTabularStyles.definitionFieldListClass.trim()
		else if uiModel.defaultUnitStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.definitionFieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String definitionFieldListClass
	@OCL(derivation="definitionFieldListClass <> ''")
	derived readonly transient volatile boolean hasDefinitionFieldListClass

	@OCL(derivation="if localFieldLabelClass.trim() <> '' then
			localFieldLabelClass.trim()
		else if uiModel.defaultTabularStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultTabularStyles.fieldLabelClass.trim()
		else if uiModel.defaultUnitStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldLabelClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
	derived readonly transient volatile boolean hasFieldLabelClass

	@OCL(derivation="if localFieldValueClass.trim() <> '' then
			localFieldValueClass.trim()
		else if uiModel.defaultTabularStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultTabularStyles.fieldValueClass.trim()
		else if uiModel.defaultUnitStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldValueClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
	derived readonly transient volatile boolean hasFieldValueClass

	@OCL(derivation="if localControlClass.trim() <> '' then
			localControlClass.trim()
		else if uiModel.defaultTabularStyles.controlClass.trim() <> '' then
			uiModel.defaultTabularStyles.controlClass.trim()
		else if uiModel.defaultUnitStyles.controlClass.trim() <> '' then
			uiModel.defaultUnitStyles.controlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String controlClass
	@OCL(derivation="controlClass <> ''")
	derived readonly transient volatile boolean hasControlClass

	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if uiModel.defaultTabularStyles.anchorClass.trim() <> '' then
			uiModel.defaultTabularStyles.anchorClass.trim()
		else if uiModel.defaultUnitStyles.anchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.anchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass <> ''")
	derived readonly transient volatile boolean hasAnchorClass

	@OCL(derivation="if localInstanceControlClass.trim() <> '' then
			localInstanceControlClass.trim()
		else if uiModel.defaultTabularStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultTabularStyles.instanceControlClass.trim()
		else if uiModel.defaultUnitStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceControlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceControlClass
	@OCL(derivation="instanceControlClass <> ''")
	derived readonly transient volatile boolean hasInstanceControlClass

	@OCL(derivation="if localInstanceAnchorClass.trim() <> '' then
			localInstanceAnchorClass.trim()
		else if uiModel.defaultTabularStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultTabularStyles.instanceAnchorClass.trim()
		else if uiModel.defaultUnitStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceAnchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceAnchorClass
	@OCL(derivation="instanceAnchorClass <> ''")
	derived readonly transient volatile boolean hasInstanceAnchorClass
}

abstract class CardsUnit extends CollectionUnit {
	contains Badge[] badges opposite displayedOn
	boolean overlaySingleSelectAction

	String[1] localRowClass = ''
	String[1] localColumnClass = ''
	String[1] localCardClass = ''
	String[1] localCardHeaderClass = ''
	String[1] localCardBodyClass = ''
	String[1] localCardFooterClass = ''
	String[1] localBadgeClass = ''

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultCardsStyles.sectionClass.trim() <> '' then
			uiModel.defaultCardsStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultCardsStyles.captionClass.trim() <> '' then
			uiModel.defaultCardsStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultCardsStyles.contentClass.trim() <> '' then
			uiModel.defaultCardsStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
	derived readonly transient volatile boolean hasContentClass

	@OCL(derivation="if localFieldListClass.trim() <> '' then
			localFieldListClass.trim()
		else if uiModel.defaultCardsStyles.fieldListClass.trim() <> '' then
			uiModel.defaultCardsStyles.fieldListClass.trim()
		else if uiModel.defaultUnitStyles.fieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldListClass
	@OCL(derivation="fieldListClass <> ''")
	derived readonly transient volatile boolean hasFieldListClass

	@OCL(derivation="if localDefinitionFieldListClass.trim() <> '' then
			localDefinitionFieldListClass.trim()
		else if uiModel.defaultCardsStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultCardsStyles.definitionFieldListClass.trim()
		else if uiModel.defaultUnitStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.definitionFieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String definitionFieldListClass
	@OCL(derivation="definitionFieldListClass <> ''")
	derived readonly transient volatile boolean hasDefinitionFieldListClass

	@OCL(derivation="if localFieldLabelClass.trim() <> '' then
			localFieldLabelClass.trim()
		else if uiModel.defaultCardsStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultCardsStyles.fieldLabelClass.trim()
		else if uiModel.defaultUnitStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldLabelClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
	derived readonly transient volatile boolean hasFieldLabelClass

	@OCL(derivation="if localFieldValueClass.trim() <> '' then
			localFieldValueClass.trim()
		else if uiModel.defaultCardsStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultCardsStyles.fieldValueClass.trim()
		else if uiModel.defaultUnitStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldValueClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
	derived readonly transient volatile boolean hasFieldValueClass

	@OCL(derivation="if localControlClass.trim() <> '' then
			localControlClass.trim()
		else if uiModel.defaultCardsStyles.controlClass.trim() <> '' then
			uiModel.defaultCardsStyles.controlClass.trim()
		else if uiModel.defaultUnitStyles.controlClass.trim() <> '' then
			uiModel.defaultUnitStyles.controlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String controlClass
	@OCL(derivation="controlClass <> ''")
	derived readonly transient volatile boolean hasControlClass

	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if uiModel.defaultCardsStyles.anchorClass.trim() <> '' then
			uiModel.defaultCardsStyles.anchorClass.trim()
		else if uiModel.defaultUnitStyles.anchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.anchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass <> ''")
	derived readonly transient volatile boolean hasAnchorClass


	@OCL(derivation="if localInstanceControlClass.trim() <> '' then
			localInstanceControlClass.trim()
		else if uiModel.defaultCardsStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultCardsStyles.instanceControlClass.trim()
		else if uiModel.defaultUnitStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceControlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceControlClass
	@OCL(derivation="instanceControlClass <> ''")
	derived readonly transient volatile boolean hasInstanceControlClass

	@OCL(derivation="if localInstanceAnchorClass.trim() <> '' then
			localInstanceAnchorClass.trim()
		else if uiModel.defaultCardsStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultCardsStyles.instanceAnchorClass.trim()
		else if uiModel.defaultUnitStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceAnchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceAnchorClass
	@OCL(derivation="instanceAnchorClass <> ''")
	derived readonly transient volatile boolean hasInstanceAnchorClass

	@OCL(derivation="if localRowClass.trim() <> '' then
			localRowClass.trim()
		else if uiModel.defaultCardsStyles.rowClass.trim() <> '' then
			uiModel.defaultCardsStyles.rowClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String rowClass
	@OCL(derivation="rowClass <> ''")
	derived readonly transient volatile boolean hasRowClass

	@OCL(derivation="if localColumnClass.trim() <> '' then
			localColumnClass.trim()
		else if uiModel.defaultCardsStyles.columnClass.trim() <> '' then
			uiModel.defaultCardsStyles.columnClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String columnClass
	@OCL(derivation="columnClass <> ''")
	derived readonly transient volatile boolean hasColumnClass

	@OCL(derivation="if localCardClass.trim() <> '' then
			localCardClass.trim()
		else if uiModel.defaultCardsStyles.cardClass.trim() <> '' then
			uiModel.defaultCardsStyles.cardClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String cardClass
	@OCL(derivation="cardClass <> ''")
	derived readonly transient volatile boolean hasCardClass

	@OCL(derivation="if localCardHeaderClass.trim() <> '' then
			localCardHeaderClass.trim()
		else if uiModel.defaultCardsStyles.cardHeaderClass.trim() <> '' then
			uiModel.defaultCardsStyles.cardHeaderClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String cardHeaderClass
	@OCL(derivation="cardHeaderClass <> ''")
	derived readonly transient volatile boolean hasCardHeaderClass

	@OCL(derivation="if localCardBodyClass.trim() <> '' then
			localCardBodyClass.trim()
		else if uiModel.defaultCardsStyles.cardBodyClass.trim() <> '' then
			uiModel.defaultCardsStyles.cardBodyClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String cardBodyClass
	@OCL(derivation="cardBodyClass <> ''")
	derived readonly transient volatile boolean hasCardBodyClass

	@OCL(derivation="if localCardFooterClass.trim() <> '' then
			localCardFooterClass.trim()
		else if uiModel.defaultCardsStyles.cardFooterClass.trim() <> '' then
			uiModel.defaultCardsStyles.cardFooterClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String cardFooterClass
	@OCL(derivation="cardFooterClass <> ''")
	derived readonly transient volatile boolean hasCardFooterClass

	@OCL(derivation="if localBadgeClass.trim() <> '' then
			localBadgeClass.trim()
		else if uiModel.defaultCardsStyles.badgeClass.trim() <> '' then
			uiModel.defaultCardsStyles.badgeClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String badgeClass
	@OCL(derivation="badgeClass <> ''")
	derived readonly transient volatile boolean hasBadgeClass
}

class Badge {
	refers CardsUnit[1] displayedOn opposite badges
	String iconName
	contains FeaturePath value
	refers Attribute title
	contains Predicate displayWhen

	String localBadgeClass
	@OCL(derivation="if localBadgeClass.trim() <> '' then
			localBadgeClass.trim()
		else if displayedOn.hasBadgeClass = true then
			displayedOn.badgeClass.trim()
		else
			''
		endif endif")
	derived readonly unsettable transient volatile String badgeClass
	@OCL(derivation="badgeClass <> ''")
	derived readonly unsettable transient volatile boolean hasBadgeClass
}

class TextCardsUnit extends CardsUnit {
}

class DateCardsUnit extends CardsUnit {
	contains FeaturePath[1] elementDate
}

interface ImageUnit {
	contains FeaturePath[1] imagePathFeature
	String missingImagePath
	contains Predicate showMissingImageWhen
	refers ImageManipulation imageFilter
	refers ImageManipulation missingImageFilter
}


class ImageCardsUnit extends CardsUnit, ImageUnit {
	boolean enableImageEnlargement
	boolean overlayTitle
	boolean revealUntruncatedContent
}

class SliderUnit extends CollectionUnit, ImageUnit {
	int showTime
	int transitionTime

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultSliderStyles.sectionClass.trim() <> '' then
			uiModel.defaultSliderStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultSliderStyles.captionClass.trim() <> '' then
			uiModel.defaultSliderStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultSliderStyles.contentClass.trim() <> '' then
			uiModel.defaultSliderStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
	derived readonly transient volatile boolean hasContentClass

	@OCL(derivation="if localFieldListClass.trim() <> '' then
			localFieldListClass.trim()
		else if uiModel.defaultSliderStyles.fieldListClass.trim() <> '' then
			uiModel.defaultSliderStyles.fieldListClass.trim()
		else if uiModel.defaultUnitStyles.fieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldListClass
	@OCL(derivation="fieldListClass <> ''")
	derived readonly transient volatile boolean hasFieldListClass

	@OCL(derivation="if localDefinitionFieldListClass.trim() <> '' then
			localDefinitionFieldListClass.trim()
		else if uiModel.defaultSliderStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultSliderStyles.definitionFieldListClass.trim()
		else if uiModel.defaultUnitStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.definitionFieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String definitionFieldListClass
	@OCL(derivation="definitionFieldListClass <> ''")
	derived readonly transient volatile boolean hasDefinitionFieldListClass

	@OCL(derivation="if localFieldLabelClass.trim() <> '' then
			localFieldLabelClass.trim()
		else if uiModel.defaultSliderStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultSliderStyles.fieldLabelClass.trim()
		else if uiModel.defaultUnitStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldLabelClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
	derived readonly transient volatile boolean hasFieldLabelClass

	@OCL(derivation="if localFieldValueClass.trim() <> '' then
			localFieldValueClass.trim()
		else if uiModel.defaultSliderStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultSliderStyles.fieldValueClass.trim()
		else if uiModel.defaultUnitStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldValueClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
	derived readonly transient volatile boolean hasFieldValueClass

	@OCL(derivation="if localControlClass.trim() <> '' then
			localControlClass.trim()
		else if uiModel.defaultSliderStyles.controlClass.trim() <> '' then
			uiModel.defaultSliderStyles.controlClass.trim()
		else if uiModel.defaultUnitStyles.controlClass.trim() <> '' then
			uiModel.defaultUnitStyles.controlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String controlClass
	@OCL(derivation="controlClass <> ''")
	derived readonly transient volatile boolean hasControlClass

	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if uiModel.defaultSliderStyles.anchorClass.trim() <> '' then
			uiModel.defaultSliderStyles.anchorClass.trim()
		else if uiModel.defaultUnitStyles.anchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.anchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass <> ''")
	derived readonly transient volatile boolean hasAnchorClass

	@OCL(derivation="if localInstanceControlClass.trim() <> '' then
			localInstanceControlClass.trim()
		else if uiModel.defaultSliderStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultSliderStyles.instanceControlClass.trim()
		else if uiModel.defaultUnitStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceControlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceControlClass
	@OCL(derivation="instanceControlClass <> ''")
	derived readonly transient volatile boolean hasInstanceControlClass

	@OCL(derivation="if localInstanceAnchorClass.trim() <> '' then
			localInstanceAnchorClass.trim()
		else if uiModel.defaultSliderStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultSliderStyles.instanceAnchorClass.trim()
		else if uiModel.defaultUnitStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceAnchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceAnchorClass
	@OCL(derivation="instanceAnchorClass <> ''")
	derived readonly transient volatile boolean hasInstanceAnchorClass
}

class GalleryUnit extends CollectionUnit, ImageUnit {
	refers ImageManipulation fullSizeFilter
	int showTime
	int transitionTime

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultGalleryStyles.sectionClass.trim() <> '' then
			uiModel.defaultGalleryStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultGalleryStyles.captionClass.trim() <> '' then
			uiModel.defaultGalleryStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultGalleryStyles.contentClass.trim() <> '' then
			uiModel.defaultGalleryStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
	derived readonly transient volatile boolean hasContentClass

	@OCL(derivation="if localFieldListClass.trim() <> '' then
			localFieldListClass.trim()
		else if uiModel.defaultFormStyles.fieldListClass.trim() <> '' then
			uiModel.defaultFormStyles.fieldListClass.trim()
		else if uiModel.defaultUnitStyles.fieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldListClass
	@OCL(derivation="fieldListClass <> ''")
	derived readonly transient volatile boolean hasFieldListClass

	@OCL(derivation="if localDefinitionFieldListClass.trim() <> '' then
			localDefinitionFieldListClass.trim()
		else if uiModel.defaultGalleryStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultGalleryStyles.definitionFieldListClass.trim()
		else if uiModel.defaultUnitStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.definitionFieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String definitionFieldListClass
	@OCL(derivation="definitionFieldListClass <> ''")
	derived readonly transient volatile boolean hasDefinitionFieldListClass

	@OCL(derivation="if localFieldLabelClass.trim() <> '' then
			localFieldLabelClass.trim()
		else if uiModel.defaultGalleryStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultGalleryStyles.fieldLabelClass.trim()
		else if uiModel.defaultUnitStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldLabelClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
	derived readonly transient volatile boolean hasFieldLabelClass

	@OCL(derivation="if localFieldValueClass.trim() <> '' then
			localFieldValueClass.trim()
		else if uiModel.defaultGalleryStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultGalleryStyles.fieldValueClass.trim()
		else if uiModel.defaultUnitStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldValueClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
	derived readonly transient volatile boolean hasFieldValueClass

	@OCL(derivation="if localControlClass.trim() <> '' then
			localControlClass.trim()
		else if uiModel.defaultGalleryStyles.controlClass.trim() <> '' then
			uiModel.defaultGalleryStyles.controlClass.trim()
		else if uiModel.defaultUnitStyles.controlClass.trim() <> '' then
			uiModel.defaultUnitStyles.controlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String controlClass
	@OCL(derivation="controlClass <> ''")
	derived readonly transient volatile boolean hasControlClass

	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if uiModel.defaultGalleryStyles.anchorClass.trim() <> '' then
			uiModel.defaultGalleryStyles.anchorClass.trim()
		else if uiModel.defaultUnitStyles.anchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.anchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass <> ''")
	derived readonly transient volatile boolean hasAnchorClass

	@OCL(derivation="if localInstanceControlClass.trim() <> '' then
			localInstanceControlClass.trim()
		else if uiModel.defaultGalleryStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultGalleryStyles.instanceControlClass.trim()
		else if uiModel.defaultUnitStyles.instanceControlClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceControlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceControlClass
	@OCL(derivation="instanceControlClass <> ''")
	derived readonly transient volatile boolean hasInstanceControlClass

	@OCL(derivation="if localInstanceAnchorClass.trim() <> '' then
			localInstanceAnchorClass.trim()
		else if uiModel.defaultGalleryStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultGalleryStyles.instanceAnchorClass.trim()
		else if uiModel.defaultUnitStyles.instanceAnchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.instanceAnchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String instanceAnchorClass
	@OCL(derivation="instanceAnchorClass <> ''")
	derived readonly transient volatile boolean hasInstanceAnchorClass
}

abstract class ControlUnit extends DynamicUnit {
	String[1] submitLabel
	refers ContentUnit cancelDestination
	String cancelLabel

	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if uiModel.defaultControlStyles.sectionClass.trim() <> '' then
			uiModel.defaultControlStyles.sectionClass.trim()
		else if uiModel.defaultUnitStyles.sectionClass.trim() <> '' then
			uiModel.defaultUnitStyles.sectionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
	derived readonly transient volatile boolean hasSectionClass

	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if uiModel.defaultControlStyles.captionClass.trim() <> '' then
			uiModel.defaultControlStyles.captionClass.trim()
		else if uiModel.defaultUnitStyles.captionClass.trim() <> '' then
			uiModel.defaultUnitStyles.captionClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
	derived readonly transient volatile boolean hasCaptionClass

	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if uiModel.defaultControlStyles.contentClass.trim() <> '' then
			uiModel.defaultControlStyles.contentClass.trim()
		else if uiModel.defaultUnitStyles.contentClass.trim() <> '' then
			uiModel.defaultUnitStyles.contentClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
	derived readonly transient volatile boolean hasContentClass

	@OCL(derivation="if localFieldListClass.trim() <> '' then
			localFieldListClass.trim()
		else if uiModel.defaultControlStyles.fieldListClass.trim() <> '' then
			uiModel.defaultControlStyles.fieldListClass.trim()
		else if uiModel.defaultUnitStyles.fieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldListClass
	@OCL(derivation="fieldListClass <> ''")
	derived readonly transient volatile boolean hasFieldListClass

	@OCL(derivation="if localDefinitionFieldListClass.trim() <> '' then
			localDefinitionFieldListClass.trim()
		else if uiModel.defaultControlStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultControlStyles.definitionFieldListClass.trim()
		else if uiModel.defaultUnitStyles.definitionFieldListClass.trim() <> '' then
			uiModel.defaultUnitStyles.definitionFieldListClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String definitionFieldListClass
	@OCL(derivation="definitionFieldListClass <> ''")
	derived readonly transient volatile boolean hasDefinitionFieldListClass

	@OCL(derivation="if localFieldLabelClass.trim() <> '' then
			localFieldLabelClass.trim()
		else if uiModel.defaultControlStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultControlStyles.fieldLabelClass.trim()
		else if uiModel.defaultUnitStyles.fieldLabelClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldLabelClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldLabelClass
	@OCL(derivation="fieldLabelClass <> ''")
	derived readonly transient volatile boolean hasFieldLabelClass

	@OCL(derivation="if localFieldValueClass.trim() <> '' then
			localFieldValueClass.trim()
		else if uiModel.defaultControlStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultControlStyles.fieldValueClass.trim()
		else if uiModel.defaultUnitStyles.fieldValueClass.trim() <> '' then
			uiModel.defaultUnitStyles.fieldValueClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String fieldValueClass
	@OCL(derivation="fieldValueClass <> ''")
	derived readonly transient volatile boolean hasFieldValueClass

	@OCL(derivation="if localControlClass.trim() <> '' then
			localControlClass.trim()
		else if uiModel.defaultControlStyles.controlClass.trim() <> '' then
			uiModel.defaultControlStyles.controlClass.trim()
		else if uiModel.defaultUnitStyles.controlClass.trim() <> '' then
			uiModel.defaultUnitStyles.controlClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String controlClass
	@OCL(derivation="controlClass <> ''")
	derived readonly transient volatile boolean hasControlClass

	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if uiModel.defaultControlStyles.anchorClass.trim() <> '' then
			uiModel.defaultControlStyles.anchorClass.trim()
		else if uiModel.defaultUnitStyles.anchorClass.trim() <> '' then
			uiModel.defaultUnitStyles.anchorClass.trim()
		else
			''
		endif endif endif")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass <> ''")
	derived readonly transient volatile boolean hasAnchorClass
}

class SearchUnit extends ControlUnit {
	refers TabularUnit[1] resultsDestination opposite targettingSearches
}


enum ContainerActionsPlacement {
	Above = 0
	Below = 1
	Float = 2
}

enum InstanceActionsPlacement {
	Footer = 0
	Float = 1
}

interface ActionContainer {
    @GenModel(propertyCategory="Interface")
	ContainerActionsPlacement containerActionsPlacement

    @GenModel(propertyCategory="Interface")
	InstanceActionsPlacement instanceActionsPlacement

	contains Action[] allActions opposite usedBy

	@OCL(derivation="allActions->select(a | not a.disable)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Action[] actions

	@OCL(derivation="actions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasActions

	@OCL(derivation="actions->select(a | a.hasSuccessMessage)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasActionsWithSuccessMessages

	@OCL(derivation="actions->select(a | a.hasMessages)->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasActionsWithMessages

	@OCL(derivation="actions->select(a | a.oclIsKindOf(DeleteAction) or a.oclIsKindOf(OperationAction))->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Action[] actionsWithoutTarget

	@OCL(derivation="actions->select(a | a.isContainerAction = true)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Action[] containerActions
	@OCL(derivation="containerActions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasContainerActions

// TODO	@OCL(derivation="operationActions->select(a | a.operation.resultType = service::OperationResultTypes::File)->asOrderedSet()")
// TODO	refers derived readonly unsettable transient volatile OperationAction[] fileActions
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile OperationAction[] fileActions get {
		operationActions.filter[it.operation.resultType.literal == 'File'].toEList()
	}
	@OCL(derivation="fileActions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasFileActions

	@OCL(derivation="actions->select(a | a.isGeneralAction)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Action[] generalActions
	@OCL(derivation="generalActions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasGeneralActions

	@OCL(derivation="actions->select(a | a.isTargetAction)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Action[] targetActions
	@OCL(derivation="targetActions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasTargetActions

	@OCL(derivation="actions->select(a | a.isInstanceAction = true)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile Action[] instanceActions
	@OCL(derivation="instanceActions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasInstanceActions

	@OCL(derivation="actions->select(a | a.oclIsKindOf(OperationAction)).oclAsType(OperationAction)->asOrderedSet()")
    @GenModel(propertyCategory="Debug")
	refers derived readonly unsettable transient volatile OperationAction[] operationActions
	@OCL(derivation="operationActions->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasOperationActions

	@OCL(derivation="if self.oclIsKindOf(DynamicUnit) then
			self.oclAsType(DynamicUnit).genModel
		else if self.oclIsKindOf(UnitFeature) then
			self.oclAsType(UnitFeature).genModel
		else
			null
		endif endif")
    @GenModel(propertyCategory="Debug")
	refers readonly unsettable transient volatile derived WafModel genModelRef

	@OCL(derivation="if self.oclIsKindOf(DynamicUnit) then
			self.oclAsType(DynamicUnit).uiModel
		else if self.oclIsKindOf(UnitFeature) then
			self.oclAsType(UnitFeature).uiModel
		else
			null
		endif endif")
    @GenModel(propertyCategory="Debug")
	refers readonly unsettable transient volatile derived WafModel uiModelRef
}

abstract class Action extends NamedDisplayElement {
	refers ActionContainer[1]usedBy opposite allActions

	@OCL(derivation="if usedBy.oclIsKindOf(DynamicUnit) then
			usedBy.oclAsType(DynamicUnit)
		else if usedBy.oclIsKindOf(UnitFeature) then
			usedBy.oclAsType(UnitFeature).displayedOn
		else
			null
		endif endif")
    @GenModel(propertyCategory="Debug")
	refers readonly transient volatile unsettable derived DynamicUnit parentUnit

	@OCL(derivation="if self.oclIsKindOf(SelectAction) then
			self.oclAsType(SelectAction).selectAuthorisationRoles
		else if self.oclIsKindOf(DeleteAction) then
			self.oclAsType(DeleteAction).deleteAuthorisationRoles
		else if self.oclIsKindOf(OperationAction) then
			self.oclAsType(OperationAction).operationAuthorisationRoles
		else
			''
		endif endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String authorisationRoles

	@OCL(derivation="authorisationRoles <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean isAuthorised

	@OCL(derivation="authorisationRoles <> parentUnit.authorisationRoles.trim()")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean hasCustomisedAuthorisation

	@OCL(derivation="self.oclIsTypeOf(ContainerOperationAction)
		or self.oclIsTypeOf(ContainerSelectAction)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean isContainerAction

	@OCL(derivation="self.oclIsTypeOf(GeneralOperationAction)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean isGeneralAction

 	@OCL(derivation="self.oclIsTypeOf(DeleteAction)
		or self.oclIsTypeOf(InstanceOperationAction)
		or self.oclIsTypeOf(InstanceSelectAction)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean isInstanceAction

	@OCL(derivation="self.oclIsTypeOf(TargetAction)")
    @GenModel(propertyCategory="Debug")
	derived readonly transient unsettable volatile boolean isTargetAction

    @GenModel(propertyCategory="Interface")
	String iconName = ''
    @GenModel(propertyCategory="Business")
	boolean disable
	contains Predicate displayWhen
	contains Predicate enableWhen

    @GenModel(propertyCategory="Interface")
	String confirmMessage = ''
	@OCL(derivation="confirmMessage.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasConfirmMessage

    @GenModel(propertyCategory="Interface")
	String successMessage = ''
	@OCL(derivation="successMessage.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasSuccessMessage

    @GenModel(propertyCategory="Interface")
	String failureMessage = ''
	@OCL(derivation="failureMessage.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasFailureMessage

	@OCL(derivation="hasConfirmMessage = true or hasSuccessMessage = true or hasFailureMessage = true")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasMessages

    @GenModel(propertyCategory="Style")
	String localAnchorClass = ''
	@OCL(derivation="if localAnchorClass.trim() <> '' then
			localAnchorClass.trim()
		else if usedBy.oclIsKindOf(DynamicUnit) then
			if self.isInstanceAction = true then
				if parentUnit.oclIsKindOf(CollectionUnit) then
					if parentUnit.oclAsType(CollectionUnit).hasCommonInstanceAnchorClass = true then
						parentUnit.oclAsType(CollectionUnit).commonInstanceAnchorClass
					else
						''
					endif
				else
					''
				endif
			else
				if parentUnit.hasCommonAnchorClass= true then
					parentUnit.commonAnchorClass
				else
					''
				endif
			endif
		else
			''
		endif endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String anchorClass
	@OCL(derivation="anchorClass.trim() <> ''")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile boolean hasAnchorClass

    @GenModel(propertyCategory="Style")
	String headerClass
    @GenModel(propertyCategory="Style")
	String footerClass
}

class DeleteAction extends Action {
    @GenModel(propertyCategory="Navigation")
	String[1] uriElement

    @GenModel(propertyCategory="Security")
	String localAuthorisationRoles = ''
	@OCL(derivation="if localAuthorisationRoles.trim() <> '' then
			localAuthorisationRoles
		else
			if usedBy.oclIsKindOf(DynamicUnit) then
				usedBy.oclAsType(DynamicUnit).authorisationRoles
			else if usedBy.oclIsKindOf(UnitFeature) then
				usedBy.oclAsType(UnitFeature).displayedOn.authorisationRoles
			else
				''
			endif endif
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String deleteAuthorisationRoles
}

abstract class SelectAction extends Action {
    @GenModel(propertyCategory="Navigation")
	refers SelectableUnit[1] target opposite selectors
	contains FeaturePath valuePath

	@OCL(derivation="if not target.oclIsUndefined() then
			target.oclAsType(DynamicUnit).authorisationRoles
		else
			''
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String selectAuthorisationRoles
}

class ContainerSelectAction extends SelectAction {
}

class InstanceSelectAction extends SelectAction {
}

class TargetAction extends SelectAction {
}

abstract class OperationAction extends Action {
	@OCL(derivation="if operation.oclIsUndefined() then
			OrderedSet(service::Service){}
		else
			OrderedSet(service::Service){ operation.partOf }
		endif")
    @GenModel(propertyCategory="Debug")
	refers derived readonly transient volatile Service[] servicesUsed
	@OCL(derivation="servicesUsed->notEmpty()")
    @GenModel(propertyCategory="Debug")
	derived readonly unsettable transient volatile boolean hasServicesUsed

    @GenModel(propertyCategory="Business")
	refers BusinessOperation[1] operation

    @GenModel(propertyCategory="Navigation")
	String[1] uriElement

    @GenModel(propertyCategory="Security")
	String localAuthorisationRoles = ''

	@OCL(derivation="if localAuthorisationRoles.trim() <> '' then
			localAuthorisationRoles
		else
			if usedBy.oclIsKindOf(DynamicUnit) then
				usedBy.oclAsType(DynamicUnit).authorisationRoles
			else if usedBy.oclIsKindOf(UnitFeature) then
				usedBy.oclAsType(UnitFeature).displayedOn.authorisationRoles
			else
				''
			endif endif
		endif")
    @GenModel(propertyCategory="Debug")
	derived readonly transient volatile String operationAuthorisationRoles
}

class InstanceOperationAction extends OperationAction {
}

class ContainerOperationAction extends OperationAction {
}

class GeneralOperationAction extends OperationAction {
}


class Message {
	String[1] text
	contains FeaturePath[] features
}