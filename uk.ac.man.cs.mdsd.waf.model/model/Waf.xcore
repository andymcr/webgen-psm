@Ecore(
	nsURI="http://www.cs.man.ac.uk/mdsd/2015/WebApplicationFramework",
	nsPrefix="waf"
)
@GenModel(
	editDirectory="/uk.ac.man.cs.mdsd.waf.edit/src",
	editPluginID="uk.ac.man.cs.mdsd.waf.edit",
	childCreationExtenders="true",
	complianceLevel="6.0")
package uk.ac.man.cs.mdsd.waf

import uk.ac.man.cs.mdsd.criteria.Expression
import uk.ac.man.cs.mdsd.criteria.Order
import uk.ac.man.cs.mdsd.criteria.Path
import uk.ac.man.cs.mdsd.criteria.Predicate
import uk.ac.man.cs.mdsd.orm.Association
import uk.ac.man.cs.mdsd.orm.Attribute
import uk.ac.man.cs.mdsd.orm.Cardinality
import uk.ac.man.cs.mdsd.orm.DataType
import uk.ac.man.cs.mdsd.orm.DateDetails
import uk.ac.man.cs.mdsd.orm.EntityOrView
import uk.ac.man.cs.mdsd.orm.Label
import uk.ac.man.cs.mdsd.orm.NamedDisplayElement
import uk.ac.man.cs.mdsd.orm.NamedElement
import uk.ac.man.cs.mdsd.orm.OrmModel


enum FrameworkTechnologies {
	JSF
	CakePHP = 1
	CodeIgniter = 2
	Kohana = 3
	Laravel = 4
	Symfony = 5
}

enum AjaxTechnologies {
	None
	jQuery = 1
	AngularJS = 2
}

class WafModel {
	refers OrmModel[1] persistence
	contains Service[] services opposite partOf
	contains Page[] pages opposite partOf
	contains Menu[] menus
	String[1] siteName
	String[1] siteTitle
	boolean developmentVersion
	String baseURL
	boolean rewriteURLs
	String webmasterEmail
	String copyrightText
	String metaDescription
	FrameworkTechnologies frameworkTechnology
	AjaxTechnologies ajaxTechnology
	contains Authentication authentication
	String captchaSiteKey
	String captchaSecretKey
	String textEditorURL
	String topNavigationId
	refers Menu sideMenu
	boolean staticUnitsEditable
	
}


abstract class Authentication {
	String[1] loginLabel = ""
	String logoutLabel = ""
}

class LocalAuthenticationSystem extends Authentication {
	refers Service[1] userService
	refers ServiceAttribute[1] userAuthenticationKey
	refers Service authenticationService
	refers Service loginAttemptService
	refers Service autoLoginService
	boolean allowSelfRegistration
	boolean useEmailActivation = "true"
	boolean sendWelcomeEmail = "true"
	refers RegistrationUnit registrationUnit opposite authenticationSystem
	refers LoginUnit[1] loginUnit opposite authenticationSystem
	refers ForgottenPasswordUnit forgottenPasswordUnit opposite authenticationSystem
}

class CasAuthentication extends Authentication {
}


interface IncludedFeature {
	contains Expression forcedValue
	String footer
	// style classes in service features are used when creating implicit unit fields
	String headerClass
	String inputClass
	String displayClass
	String footerClass
}

interface IncludedAttribute extends IncludedFeature {
	refers Attribute[1] attribute
	boolean obfuscateFormFields
	contains Expression defaultValue
}

interface IncludedAssociation extends IncludedFeature {
	refers Association[1] association
}


class Service extends NamedElement {
	refers WafModel[1] partOf opposite services
	refers EntityOrView[1..*] encapsulates
	contains ServiceFeature[] features opposite partOf
	contains ServiceFeatureReference[1..*] ^keys
	contains Selection[] selections
	refers DynamicUnit[] accessedBy opposite service
}

abstract class ServiceFeatureReference {
}

class ServiceAttributeReference extends ServiceFeatureReference {
	refers ServiceAttribute[1] attribute
}

class ServiceAssociationReference extends ServiceFeatureReference {
	// ServiceEntityAssociation ???
	refers ServiceAssociation[1] association
	contains ServiceFeatureReference childFeature
}


class Selection extends NamedElement {
	contains SelectionParameter[] parameters
	refers ServiceAssociation[] joins
	contains Predicate filter
	contains Order[] ordering
	int limit = "0"
}

class SelectionParameter extends NamedElement {
	String defaultValue
}

class ServiceFeature extends NamedDisplayElement, IncludedFeature {
	container Service[1] partOf opposite features
	Cardinality cardinality
}

class ServiceAttribute extends ServiceFeature, IncludedAttribute {
	String interfaceType
	String placeholder
	String validationPattern
	String dateFormat
}

class ServiceAssociation extends ServiceFeature, IncludedAssociation {
}


abstract class Menu extends NamedDisplayElement {
	contains MenuEntry[] entries opposite partOf
	boolean omitCaption
	String captionClass
	String styleClass
	String layoutClass
}

class StaticMenu extends Menu {
}

class DynamicMenu extends Menu {
	refers Service[1] service
	refers Selection[1] selection
	refers ServiceAttribute dynamicTitle
}

abstract class MenuEntry {
	container Menu[1] partOf opposite entries
}

class ActionMenuEntry extends MenuEntry, NamedDisplayElement {
	refers DynamicUnit[1] action
	contains Query query
}

class EditStaticTextMenuEntry extends MenuEntry, NamedDisplayElement {
}

enum PageTopMenuOptions {
	NeverInclude
	AlwaysInclude = 1
	IncludeWhenAuthenticated = 2
}

class Page extends NamedDisplayElement, UnitContainer {
	container WafModel partOf opposite pages
	refers Page parentPage opposite childPages
	refers Page[] childPages opposite parentPage
	boolean authenticated
	String[1] uriElement
	PageTopMenuOptions topMenuOption
	int topMenuRank = "65535"
	String navigationLabel
	refers Menu sideMenu
	String styleClass
}

class Filter extends NamedElement {
	contains FilterParameter[] parameters
	refers Selection selection
}

class FilterParameter extends NamedElement {
	refers SelectionParameter formal
	refers DataType dataType
	String defaultValue = ''
}

class Query extends NamedElement {
	refers Filter[1] filter
	contains QueryParameter[] parameters
}

class QueryParameter extends NamedElement {
	refers FilterParameter[1] formal
	String value
}

interface Selectable {
}

interface UnitContainer {
	contains ContentUnit[] units opposite displayedOn
}

abstract class ContentUnit extends NamedDisplayElement {
	container UnitContainer[1] displayedOn opposite units
	String[1] uriElement
	String purposeSummary
	boolean omitCaption
	String captionClass
	String styleClass
	String layoutClass
}

class StaticUnit extends ContentUnit {
	refers Service service
	String[1] content
}

abstract class DynamicUnit extends ContentUnit {
	refers Service[1] service opposite accessedBy
	contains UnitField[] displayFields opposite displayedOn
	refers DynamicUnit uriParent
	contains UnitSupportAction[] supportActions
	String header
	String footer
	String headerClass
	String controlClass
	String footerClass
	String errorClass
}

class UnitSupportAction extends NamedDisplayElement {
	String confirmMessage
}

interface UnitField {
	container DynamicUnit[1] displayedOn opposite displayFields
	Cardinality cardinality
	int maximumDisplaySize = "-1"
	String dateFormat
}

enum CollectionDisplayOptions {
	LineDirection
	PageDirection = 1
}

abstract class UnitFeature extends NamedDisplayElement, IncludedFeature, UnitField, InlineActionContainer {
	boolean onlyDisplayWhenNotEmpty
	CollectionDisplayOptions displayOption
	boolean autofocus
}

class UnitElement extends UnitFeature, IncludedAttribute {
	refers ServiceAttribute[1] serviceFeature
	String placeholder
	String validationPattern
}

class UnitAssociation extends UnitFeature, IncludedAssociation, UnitContainer {
	refers ServiceAssociation[1] serviceFeature
	contains ServiceFeatureReference childFeature
	refers Selection selection
	refers Label label
	// for selecting inputs
	refers Label[] filters
}

abstract class InterfaceField extends NamedDisplayElement, UnitField {
	contains Expression defaultValue
	String inputClass
	refers UnitField mustMatch
}

class DataTypeField extends InterfaceField {
	refers DataType[1] dataType
	boolean caseInsensitive
	boolean obfuscateFormFields
	boolean encrypt
}

class DateField extends InterfaceField {
	DateDetails[1] details
	String format
}

class CaptchaField extends NamedDisplayElement, UnitField {
}

abstract class EditUnit extends DynamicUnit {
	refers Page confirmDestination
	String[1] confirmLabel
	refers Page cancelDestination
	String cancelLabel
	boolean customiseValues
}

class CreateUnit extends EditUnit {
}

class CreateUpdateUnit extends EditUnit, Selectable {
	String clearLabel
}

class MapUnit extends EditUnit, Selectable {
	boolean readOnly
	int defaultZoomLevel
	refers ServiceAttribute location
	refers ServiceAttribute placeName
}

class UpdateUnit extends EditUnit, Selectable {
}

abstract class DataUnit extends DynamicUnit {
	refers Selection defaultSelection
	refers Label title
}

class DetailsUnit extends DataUnit, Selectable {
	boolean onlyDisplayWhenNotEmpty
	boolean omitFieldLabels
}

abstract class IndexUnit extends DataUnit, InlineActionContainer {
	boolean omitColumnLabels
	contains Filter[] filters
	refers Filter pagination
	int defaultPaginationSize
	String nextPageLabel = ">"
	String previousPageLabel = "<"
	boolean useFirstLastPageLinks
	String firstPageLabel = "<<"
	String lastPageLabel = ">>"
	refers SearchUnit targettingSearches opposite resultsDestination
	String rowClasses
}

class IndexGridUnit extends IndexUnit {
}

class IndexPageDirectionUnit extends IndexUnit {	
}

class IndexLineDirectionUnit extends IndexUnit {
}

abstract class ControlUnit extends DynamicUnit {
	String[1] submitLabel
	refers Page cancelDestination
	String cancelLabel
}

class SearchUnit extends ControlUnit {
	refers IndexUnit[1] resultsDestination opposite targettingSearches
}

interface AuthenticationUnit {
}

class RegistrationUnit extends EditUnit, AuthenticationUnit {
	refers LocalAuthenticationSystem authenticationSystem opposite registrationUnit
}

class LoginUnit extends ControlUnit, AuthenticationUnit {
	refers LocalAuthenticationSystem authenticationSystem opposite loginUnit
	refers UnitField[1] loginIdField
	refers UnitField[1] passwordField
	refers UnitField rememberMeField
}

class ForgottenPasswordUnit extends ControlUnit, AuthenticationUnit {
	refers LocalAuthenticationSystem authenticationSystem opposite forgottenPasswordUnit
	refers UnitField[1] loginIdField
}


interface InlineActionContainer {
	contains InlineAction[] actions opposite usedBy
}

abstract class InlineAction extends NamedDisplayElement {
	container InlineActionContainer[1] usedBy opposite actions
	String header
	String footer
	String headerClass
	String footerClass
}

class SelectAction extends InlineAction {
	refers Selectable[1] target
}

class DeleteAction extends InlineAction {
	refers Page destination
	String[1] confirmMessage
}

class FeatureSupportAction extends InlineAction {
	String[1] confirmMessage
}


class ModelReference extends Path {
	refers DynamicUnit[1] unit
}

class FeatureReference extends Path {
	refers ServiceFeature[1] feature
}

class ParameterReference extends Path {
	refers SelectionParameter[1] parameter
}

class CurrentUserReference extends Path {
}