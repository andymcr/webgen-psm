[comment encoding = UTF-8 /]
[module formUnit(
	'http://www.cs.man.ac.uk/mdsd/2010/GenJsf',
	'http://www.cs.man.ac.uk/mdsd/2010/GenOrm',
	'http://www.cs.man.ac.uk/mdsd/2010/Jsf',
	'http://www.cs.man.ac.uk/mdsd/2010/ObjectRelationalMapping')]
[import uk::ac::man::cs::mdsd::jsf::m2t::core::common::featureProperties/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::common::fileInformation/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::common::names/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::files::views::templates::dataUnit/]


[template public generateUnitView(genUnit : GenContentUnit)
	? (genUnit.oclIsKindOf(GenEditUnit) or genUnit.oclIsKindOf(GenControlUnit) and not genUnit.oclIsTypeOf(GenSearchUnit)) post(trim())]
[let genDynamicUnit : GenDynamicUnit = genUnit.oclAsType(GenDynamicUnit)]
[file(genDynamicUnit.viewFilename(), false)]
<section class="[genDynamicUnit.styleClass()/]<?php
	if (isset($[genDynamicUnit.instanceName()/]_field_errors)) {
		echo ' [genDynamicUnit.errorClass()/]';
	}
?>" id="[genDynamicUnit.instanceName()/]">
 <h1 class="[genDynamicUnit.captionClass()/][if (genDynamicUnit.omitCaption())] hidden[/if]"><?php echo __('[genDynamicUnit.displayLabel()/]'); ?></h1>
 <div class="unit_padding">
  <section class="[genDynamicUnit.errorClass()/]<?php if (empty($[genDynamicUnit.instanceName()/]_error)[if (genDynamicUnit.hasMessagesOnFormHead())] && empty($field_errors)[/if]) echo ' hidden'; ?>">
<?php if (!empty($[genDynamicUnit.instanceName()/]_error)) { ?>
   <p class="[genDynamicUnit.errorClass()/]"><?php echo html::chars(__($[genDynamicUnit.instanceName()/]_error)); ?></p>
<?php } ?>
[if (genDynamicUnit.hasMessagesOnFormHead())]
   [genDynamicUnit.generateFormErrors()/]
[/if]
  </section>
[if (genDynamicUnit.hasInterfaceFields())]
  <?php
	$unit_fields = $[genDynamicUnit.instanceName()/]->unit_fields();
?>
[/if]
  [genDynamicUnit.generateUnitBody()/]
 </div>
</section>
[/file]
[/let]
[/template]

[template public generateUnitBody(genUnit : GenDynamicUnit)
	? (not genUnit.oclIsTypeOf(GenMapUnit))]
  <?php
	echo Form::open(
		Route::get('[genUnit.genDisplayedOn.oclAsType(GenPage).controllerName()/]')->uri(array(
			'action' => '[genUnit.actionName()/]',
			'param' => 'submit'
[if (genUnit.pageDisplayedOn().hasParameterisedUnits())]
		)) . URL::query($query_parameters, FALSE),
[else]
		)),
[/if]
		array(
			'id' => '[genUnit.instanceName()/]',
			'class' => '[genUnit.layoutClass()/]' . (isset($[genUnit.instanceName()/]_error) ? ' [genUnit.errorClass()/]' : ''),
			'enctype' => 'multipart/form-data'
		)) . PHP_EOL;
?>
   <ul>
[for (genDisplayField : GenUnitField | genUnit.inputOrEmbeddedFields())]
    <li[if (genUnit.hasMessagesOnFeature())]<?php
		unset($field_error);
		if (!empty($[genUnit.instanceName()/]_field_errors))
		[if (genDisplayField.oclIsKindOf(GenInterfaceField))]
			if (array_key_exists('_external', $[genUnit.instanceName()/]_field_errors))
				if (array_key_exists('[genDisplayField.modelPropertyName()/]', $[genUnit.instanceName()/]_field_errors['['/]'_external'[']'/]))
					$field_error = $[genUnit.instanceName()/]_field_errors['['/]'_external'[']'/]['['/]'[genDisplayField.modelPropertyName()/]'[']'/];
		[else]
			if (array_key_exists('[genDisplayField.modelPropertyName()/]', $[genUnit.instanceName()/]_field_errors))
				$field_error = $[genUnit.instanceName()/]_field_errors['['/]'[genDisplayField.modelPropertyName()/]'[']'/];
		[/if]
		if (isset($field_error))
			echo ' class="[genUnit.errorClass()/]"'; 
?>[/if]>
	[if (if not genDisplayField.oclIsKindOf(GenUnitAssociation) then true else genDisplayField.oclAsType(GenUnitAssociation).genUnits->isEmpty() endif)]
     <?php
		echo Form::label('[genDisplayField.uniqueName()/]', '[genDisplayField.displayLabel()/]',
			array(
				'class' => '[genDisplayField.styleClass()/][if (genDisplayField.isRequired() and not genUnit.oclIsTypeOf(GenSearchUnit))] required[/if]'
		)) . PHP_EOL;
	?>
     [genDisplayField.generateInput(genUnit.instanceName())/]
	[else]
	[let embeddedUnit : GenContentUnit = genDisplayField.oclAsType(GenUnitAssociation).genUnits->first()]
     <p class="[genDisplayField.modelPropertyName()/]">[genDisplayField.displayLabel()/]</p>
<?php $[genDisplayField.uniqueName()/] = $[genUnit.instanceName()/]->[genDisplayField.modelPropertyName()/]->[if (not embeddedUnit.oclIsKindOf(GenIndexUnit))]
find()[else][let embeddedIndexUnit : GenIndexUnit = embeddedUnit.oclAsType(GenIndexUnit)]
[if (embeddedIndexUnit.genSelection.oclIsUndefined())]
find_all()[else]
[embeddedIndexUnit.genSelection.instanceName()/](FALSE)[/if][/let][/if];
?>
     <div class="framed [genDisplayField.modelPropertyName()/]">
      [genDisplayField.oclAsType(GenUnitAssociation).genUnits.generateViewContent(genDisplayField.uniqueName())/]
     </div>
	[/let]
	[/if]
	[if (genUnit.hasMessagesOnFeature())]
<?php if (isset($field_error)) { ?>
     <p class="[genUnit.errorClass()/]"><?php echo __($field_error); ?></p>
<?php } ?>
	[/if]
    </li>
[/for]
   </ul>
[if (genUnit.hasMessagesOnFormFoot())]
<?php if (isset($[genUnit.instanceName()/]->error->all)) { ?>
   <div class="[genUnit.errorClass()/]">
[genUnit.generateFormErrors()/]
   </div>
<?php } ?>
[/if]
   <div class="[genUnit.controlClass()/]">
[if (not genUnit.oclIsTypeOf(GenActionUnit))]
   <?php
		echo Form::button('[genUnit.instanceName()/]', '[genUnit.submitLabel()/]', array(
			'type' => 'submit'
		)) . PHP_EOL;
?>
[else]
			[for (genAction : GenUnitSupportAction | genUnit.oclAsType(GenActionUnit).genSupportActions)]
  <?php
		echo Form::button('[genAction.name/]', '[genAction.displayLabel()/]', array(
			'type' => 'submit',
[if (not genAction.jsfAction.confirmMessage.oclIsUndefined())]
			'onclick' => 'return confirm(\'' . __('[genAction.jsfAction.confirmMessage/]') . '\');'
[/if]
		)) . PHP_EOL;
?>
			[/for]
[/if]
[if (genUnit.oclIsKindOf(GenEditUnit))]
[let genEditUnit : GenEditUnit = genUnit.oclAsType(GenEditUnit)]
	[if (genEditUnit.oclIsTypeOf(GenCreateUpdateUnit))]
	[let genCreateUpdateUnit : GenCreateUpdateUnit = genEditUnit.oclAsType(GenCreateUpdateUnit)]
		[if (not genCreateUpdateUnit.jsfUnit.clearLabel.oclIsUndefined())]
   <?php
		echo Form::button('clear', '[genCreateUpdateUnit.jsfUnit.clearLabel/]', array(
			'type' => 'submit'
		)) . PHP_EOL;
?>
		[/if]
	[/let]
	[/if]
	[if (not genEditUnit.genCancelDestination.oclIsUndefined())]
   <?php
		echo Form::button('cancel', '[genUnit.cancelLabel()/]', array(
			'type' => 'submit'
		)) . PHP_EOL;
?>
	[/if]
[/let]
[/if]
   </div>
  <?php
	echo Form::close() . PHP_EOL;
?>
[/template]

[template public generateUnitBody(genUnit : GenDynamicUnit)
	? (genUnit.oclIsTypeOf(GenMapUnit))]
[let genMapUnit : GenMapUnit = genUnit.oclAsType(GenMapUnit)]
<div id="[genUnit.uniqueName()/]">
 <?php
	echo Form::input('[genUnit.uniqueName()/]_autocomplete', NULL,
		array(
			'id' => '[genUnit.uniqueName()/]_autocomplete',
//			'class' => 'genField.styleClass()/] genField.inputClass()/]',
	)) . PHP_EOL;
?>
 <div id="[genUnit.uniqueName()/]_map" class="map-canvas"></div>
 <script src="//code.jquery.com/jquery-2.1.1.min.js"></script>
 <script>
var map;
[if (not genMapUnit.jsfUnit.readOnly)]
var marker;
var infoWindow;
var autocomplete;
var geocoder;
[/if]

function initialize() {
	var mapOptions = {
		zoom: 12
	};
	map = new google.maps.Map(document.getElementById('[genUnit.uniqueName()/]_map'), mapOptions);
[if (genMapUnit.jsfUnit.readOnly)]
[else]
	input = document.getElementById('[genUnit.uniqueName()/]_autocomplete');
	map.controls['['/]google.maps.ControlPosition.TOP_LEFT[']'/].push(input);
	marker = new google.maps.Marker();
	infoWindow = new google.maps.InfoWindow();
	autocomplete = new google.maps.places.Autocomplete(input);
	autocomplete.bindTo('bounds', map);
	geocoder = new google.maps.Geocoder();

	if(navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(
			function(position) {
				map.setCenter(new google.maps.LatLng(
					position.coords.latitude, position.coords.longitude));
			},
			function() {
				handleNoGeolocation(true);
		});
	} else {
		handleNoGeolocation(false);
	}

	google.maps.event.addListener(map, 'click', function(event) {
		geocoder.geocode({'latLng': event.latLng}, function(results, status) {
			if (status == google.maps.GeocoderStatus.OK) {
				if (results['['/]1[']'/]) {
					var contentString = $('<div class="marker-info-win">' +
						'<p class="place-address">' + results['['/]1[']'/].formatted_address + '</p>' +
						'<?php
							echo Form::button('[genMapUnit.instanceName()/]', '[genMapUnit.submitLabel()/]', array(
								'type' => 'submit',
								'class' => 'save-marker'
							));
						?></div>');    
					showPlace(results['['/]1[']'/].formatted_address, event.latLng, contentString);
 				} else {
					setMarker(event.latLng);
				}
			} else {
				setMarker(event.latLng);
			}
		});
	});

	google.maps.event.addListener(autocomplete, 'place_changed', function() {
		var place = autocomplete.getPlace();
		if (place.geometry) {
			var contentString = $('<div class="marker-info-win">' +
				'<h1 class="place-name">' + place.name + '</h1>' +
				'<p class="place-address">' + place.formatted_address + '</p>' +
				'<?php
					echo Form::button('[genMapUnit.instanceName()/]', '[genMapUnit.submitLabel()/]', array(
						'type' => 'submit',
						'class' => 'save-marker'
					));
				?></div>');    
			showPlace(place.name, place.geometry.location, contentString);
		} else {
			document.getElementById('[genUnit.uniqueName()/]_input').placeholder = 'Enter a location';
		}
	});
}

function setMarker(latLng) {
	marker.setMap(map);
	marker.setPosition(latLng);
}

function showPlace(name, latLng, contentString) {
	infoWindow.setContent(contentString['['/]0[']'/]);
	infoWindow.setPosition(latLng);
	infoWindow.set('name', name);
	infoWindow.open(map);
  
  	var saveBtn = contentString.find('button.save-marker')['['/]0[']'/];
		
	if(typeof saveBtn !== 'undefined') {
		google.maps.event.addDomListener(saveBtn, 'click', function(event) {
			saveMarker();
		});
	}
}

function saveMarker() {
	var myData = {
[if (not genMapUnit.genPlaceName.oclIsUndefined())]
		[genMapUnit.genPlaceName.modelPropertyName()/]: infoWindow.get('name'),
[/if]
		[genMapUnit.genLocation.modelPropertyName()/]_latitude: infoWindow.getPosition().lat(),
		[genMapUnit.genLocation.modelPropertyName()/]_longitude: infoWindow.getPosition().lng()
	};
	$.ajax({
		type: "POST",
		url: "<?php
			echo Route::get('[genMapUnit.genDisplayedOn.oclAsType(GenPage).controllerName()/]')->uri(array(
				'action' => '[genMapUnit.actionName()/]',
				'param' => 'submit'
			));
?>",
		data: myData,
		success: function(data) {
			marker.setMap(map);
			marker.setPosition(infoWindow.getPosition());
			infoWindow.close();
		},
		error: function(xhr, ajaxOptions, thrownError) {
			alert(thrownError);
		}
	});
}

function handleNoGeolocation(errorFlag) {
  if (errorFlag) {
    var content = 'Error: The Geolocation service failed.';
  } else {
    var content = 'Error: Your browser doesn\'t support geolocation.';
  }

  var options = {
    map: map,
    position: new google.maps.LatLng(60, 105),
    content: content
  };

  var infowindow = new google.maps.InfoWindow(options);
  map.setCenter(options.position);
[/if]
}

google.maps.event.addDomListener(window, 'load', initialize);
 </script>
</div>
[/let]
[/template]


[template public generateUnitView(genUnit : GenContentUnit)
	? (genUnit.oclIsTypeOf(GenSearchUnit)) post(trim())]
[let genDynamicUnit : GenDynamicUnit = genUnit.oclAsType(GenDynamicUnit)]
[file(genDynamicUnit.viewFilename(), false)]
<section class="[genDynamicUnit.styleClass()/]<?php
	if (isset($[genDynamicUnit.instanceName()/]_field_errors)) {
		echo ' [genDynamicUnit.errorClass()/]';
	}
?>" id="[genDynamicUnit.instanceName()/]">
 <h1 class="[genDynamicUnit.captionClass()/][if (genDynamicUnit.omitCaption())] hidden[/if]"><?php echo __('[genDynamicUnit.displayLabel()/]'); ?></h1>
 <div class="unit_padding">
  <section class="[genDynamicUnit.errorClass()/]<?php if (empty($[genDynamicUnit.instanceName()/]_error)[if (genDynamicUnit.hasMessagesOnFormHead())] && empty($field_errors)[/if]) echo ' hidden'; ?>">
<?php if (!empty($[genDynamicUnit.instanceName()/]_error)) { ?>
   <p class="[genDynamicUnit.errorClass()/]"><?php echo html::chars(__($[genDynamicUnit.instanceName()/]_error)); ?></p>
<?php } ?>
[if (genDynamicUnit.hasMessagesOnFormHead())]
   [genDynamicUnit.generateFormErrors()/]
[/if]
  </section>
  <?php
[if (genDynamicUnit.hasInterfaceFields())]
	$unit_fields = $[genDynamicUnit.instanceName()/]->unit_fields();
[/if]
	echo Form::open(
		Route::get('[genDynamicUnit.genDisplayedOn.oclAsType(GenPage).controllerName()/]')->uri(array(
			'action' => '[genDynamicUnit.actionName()/]',
			'param' => 'submit'
[if (genUnit.pageDisplayedOn().hasParameterisedUnits())]
		)) . URL::query($query_parameters, FALSE),
[else]
		)),
[/if]
		array(
			'id' => '[genDynamicUnit.instanceName()/]',
			'class' => '[genDynamicUnit.layoutClass()/]' . (isset($[genDynamicUnit.instanceName()/]_error) ? ' [genDynamicUnit.errorClass()/]' : ''),
			'enctype' => 'multipart/form-data'
		)) . PHP_EOL;
?>
   <ul>
[for (genDisplayField : GenUnitField | genDynamicUnit.inputOrEmbeddedFields())]
    <li[if (genDynamicUnit.hasMessagesOnFeature() and not genDisplayField.oclIsTypeOf(GenCaptchaField))]<?php
		unset($field_error);
		if (!empty($[genDynamicUnit.instanceName()/]_field_errors))
		[if (genDisplayField.oclIsKindOf(GenInterfaceField))]
			if (array_key_exists('_external', $[genDynamicUnit.instanceName()/]_field_errors))
				if (array_key_exists('[genDisplayField.modelPropertyName()/]', $[genDynamicUnit.instanceName()/]_field_errors['['/]'_external'[']'/]))
					$field_error = $[genDynamicUnit.instanceName()/]_field_errors['['/]'_external'[']'/]['['/]'[genDisplayField.modelPropertyName()/]'[']'/];
		[else]
			if (array_key_exists('[genDisplayField.modelPropertyName()/]', $[genDynamicUnit.instanceName()/]_field_errors))
				$field_error = $[genDynamicUnit.instanceName()/]_field_errors['['/]'[genDisplayField.modelPropertyName()/]'[']'/];
		[/if]
		if (isset($field_error))
			echo ' class="[genDynamicUnit.errorClass()/]"'; 
?>[/if]>
	[if (if not genDisplayField.oclIsKindOf(GenUnitAssociation) then true else genDisplayField.oclAsType(GenUnitAssociation).genUnits->isEmpty() endif)]
     <?php
		echo Form::label('[genDisplayField.uniqueName()/]', '[genDisplayField.displayLabel()/]',
			array(
				'class' => '[genDisplayField.styleClass()/][if (genDisplayField.isRequired() and not genUnit.oclIsTypeOf(GenSearchUnit))] required[/if]'
		)) . PHP_EOL;
	?>
     [genDisplayField.generateInput(genDynamicUnit.instanceName())/]
	[else]
	[let embeddedUnit : GenContentUnit = genDisplayField.oclAsType(GenUnitAssociation).genUnits->first()]
     <p class="[genDisplayField.modelPropertyName()/]">[genDisplayField.displayLabel()/]</p>
<?php $[genDisplayField.uniqueName()/] = $[genDynamicUnit.instanceName()/]->[genDisplayField.modelPropertyName()/]->[if (not embeddedUnit.oclIsKindOf(GenIndexUnit))]
find()[else][let embeddedIndexUnit : GenIndexUnit = embeddedUnit.oclAsType(GenIndexUnit)]
[if (embeddedIndexUnit.genSelection.oclIsUndefined())]
find_all()[else]
[embeddedIndexUnit.genSelection.instanceName()/](FALSE)[/if][/let][/if];
?>
     <div class="framed [genDisplayField.modelPropertyName()/]">
      [genDisplayField.oclAsType(GenUnitAssociation).genUnits.generateViewContent(genDisplayField.uniqueName())/]
     </div>
	[/let]
	[/if]
	[if (genDynamicUnit.hasMessagesOnFeature() and not genDisplayField.oclIsTypeOf(GenCaptchaField))]
<?php if (isset($field_error)) { ?>
     <p class="[genDynamicUnit.errorClass()/]"><?php echo __($field_error); ?></p>
<?php } ?>
	[/if]
    </li>
[/for]
   </ul>
[if (genDynamicUnit.hasMessagesOnFormFoot())]
<?php if (isset($[genDynamicUnit.instanceName()/]->error->all)) { ?>
   <div class="[genDynamicUnit.errorClass()/]">
[genDynamicUnit.generateFormErrors()/]
   </div>
<?php } ?>
[/if]
   <div class="[genDynamicUnit.controlClass()/]">
[if (not genDynamicUnit.oclIsTypeOf(GenActionUnit))]
   <?php
		echo Form::button('[genDynamicUnit.instanceName()/]', '[genDynamicUnit.submitLabel()/]', array(
			'type' => 'submit'
		)) . PHP_EOL;
?>
[else]
			[for (genAction : GenUnitSupportAction | genDynamicUnit.oclAsType(GenActionUnit).genSupportActions)]
  <?php
		echo Form::button('[genAction.name/]', '[genAction.displayLabel()/]', array(
			'type' => 'submit',
[if (not genAction.jsfAction.confirmMessage.oclIsUndefined())]
			'onclick' => 'return confirm(\'' . __('[genAction.jsfAction.confirmMessage/]') . '\');'
[/if]
		)) . PHP_EOL;
?>
			[/for]
[/if]
[if (genDynamicUnit.oclIsKindOf(GenEditUnit))]
[let genEditUnit : GenEditUnit = genDynamicUnit.oclAsType(GenEditUnit)]
	[if (genEditUnit.oclIsTypeOf(GenCreateUpdateUnit))]
	[let genCreateUpdateUnit : GenCreateUpdateUnit = genEditUnit.oclAsType(GenCreateUpdateUnit)]
		[if (not genCreateUpdateUnit.jsfUnit.clearLabel.oclIsUndefined())]
   <?php
		echo Form::button('clear', '[genCreateUpdateUnit.jsfUnit.clearLabel/]', array(
			'type' => 'submit'
		)) . PHP_EOL;
?>
		[/if]
	[/let]
	[/if]
	[if (not genEditUnit.genCancelDestination.oclIsUndefined())]
   <?php
		echo Form::button('cancel', '[genDynamicUnit.cancelLabel()/]', array(
			'type' => 'submit'
		)) . PHP_EOL;
?>
	[/if]
[/let]
[/if]
   </div>
  <?php
	echo Form::close() . PHP_EOL;
?>
 </div>
</section>
[/file]
[/let]
[/template]


[template protected generateInput(genField : GenUnitField, instanceVariable : String)
	? (genField.isDataTypeSingleton() or genField.oclIsTypeOf(GenDataTypeField)) post(trim())]
[let genDataType : GenDataType = 
	if genField.oclIsTypeOf(GenUnitElement) then
		genField.oclAsType(GenUnitElement).genServiceFeature.genFeature.oclAsType(GenSingletonElement).genDataType
	else
		genField.oclAsType(GenDataTypeField).genDataType
	endif]
[if (genDataType.ormDataType.name = 'Boolean')]
<?php
	echo Form::hidden('[genField.modelPropertyName()/]', '0') .PHP_EOL;
	echo Form::checkbox('[genField.modelPropertyName()/]', '1', [if (genField.oclIsKindOf(GenDataTypeField))]
array_key_exists('[genField.modelPropertyName()/]', $[instanceVariable/]->unit_fields())[else]
(bool) $[instanceVariable/]->[genField.modelPropertyName()/][/if], array(
			'id' => '[genField.uniqueName()/]',
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => ''
[/if]
	)) . PHP_EOL;
?>
[elseif (genField.isObfuscated())]
<?php
	echo Form::password('[genField.modelPropertyName()/]', [if (genField.oclIsKindOf(GenDataTypeField))]
array_key_exists('[genField.modelPropertyName()/]', $unit_fields) ? $unit_fields['['/]'[genField.modelPropertyName()/]'[']'/] : NULL[else]
$[instanceVariable/]->[genField.modelPropertyName()/][/if],
		array(
			'id' => '[genField.uniqueName()/]',
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => ''
[/if]
	)) . PHP_EOL;
?>
[elseif (genDataType.ormDataType.name = 'TextBlock')]
[if (not genField.pageDisplayedOn().genPartOf.textEditorPath.oclIsUndefined())]
<div class="[genField.modelPropertyName()/] [genField.inputClass()/]">
[/if]
<?php
	echo Form::textarea('[genField.modelPropertyName()/]', [if (genField.oclIsKindOf(GenDataTypeField))]
array_key_exists('[genField.modelPropertyName()/]', $unit_fields) ? $unit_fields['['/]'[genField.modelPropertyName()/]'[']'/] : NULL[else]
$[instanceVariable/]->[genField.modelPropertyName()/][/if],
		array(
			'id' => '[genField.uniqueName()/]',
[if (genField.pageDisplayedOn().genPartOf.textEditorPath.oclIsUndefined())]
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[else]
			'class' => 'full_width',
[/if]
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => ''
[/if]
	)) . PHP_EOL;
?>
[if (not genField.pageDisplayedOn().genPartOf.textEditorPath.oclIsUndefined())]
<script>CKEDITOR.replace('[genField.uniqueName()/]');</script>
</div>
[/if]
[else]
<?php
	echo Form::input('[genField.modelPropertyName()/]', [if (genField.oclIsKindOf(GenDataTypeField))]
array_key_exists('[genField.modelPropertyName()/]', $unit_fields) ? $unit_fields['['/]'[genField.modelPropertyName()/]'[']'/] : NULL[else]
$[instanceVariable/]->[genField.modelPropertyName()/][/if],
		array(
			'id' => '[genField.uniqueName()/]',
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[if (genDataType.ormDataType.name <> 'String')]
			'type' => '[genDataType.ormDataType.name.toLower()/]',
[/if]
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => ''
[/if]
	)) . PHP_EOL;
?>
[/if]
[/let]
[/template]

[template protected generateInput(genField : GenUnitField, instanceVariable : String)
	? (genField.isEnumerationTypeSingleton()) post(trim())]
[let enumerationType : EnumerationType
	= genField.oclAsType(GenUnitElement).genServiceFeature.genFeature.oclAsType(GenSingletonElement).genDataType.ormDataType.oclAsType(EnumerationType)]
<?php
	echo Form::select(
		'[genField.columnName()/]',
		[enumerationType.modelClassName()/]::options([genField.isRequired()/]),
		$[instanceVariable/]->[genField.modelPropertyName()/],
		array(
			'id' => '[genField.uniqueName()/]',
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => '',
[/if]
	)) . PHP_EOL;
?>
[/let]
[/template]

[template protected generateInput(genField : GenUnitField, instanceVariable : String)
	? (genField.isDateSingleton() or genField.oclIsTypeOf(GenDateField)) post(trim())]
[let dateDetails : DateDetails
	= if genField.isDateSingleton() then
			genField.oclAsType(GenUnitElement).genServiceFeature.genFeature.oclAsType(GenSingletonDate).ormFeature.details
		else
			genField.oclAsType(GenDateField).jsfField.details
		endif]
<?php
	echo Form::input('[genField.modelPropertyName()/]', [if (genField.oclIsKindOf(GenUnitFeature))]
$[instanceVariable/]->[genField.modelPropertyName()/][else]
array_key_exists('[genField.modelPropertyName()/]', $unit_fields) ? $unit_fields['['/]'[genField.modelPropertyName()/]'[']'/] : NULL[/if],
		array(
			'id' => '[genField.uniqueName()/]',
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => '',
[/if]
			'type' => '[if (dateDetails = DateDetails::DateOnly)]date[elseif (dateDetails = DateDetails::TimeOnly)]time[else]datetime[/if]'
	)) . PHP_EOL;
?>
[/let]
[/template]

[template protected generateInput(genField : GenUnitField, instanceVariable : String)
	? (genField.isFileSingleton()) post(trim())]
[let genFile : GenSingletonFile = genField.oclAsType(GenUnitElement).genServiceFeature.genFeature.oclAsType(GenSingletonFile)]
<?php
	echo Form::file('[genField.modelPropertyName()/]',
		array(
			'id' => '[genField.uniqueName()/]',
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => '',
[/if]
[if (genFile.ormFeature.validUploadMimeTypes->notEmpty())]
			'accept' => '[genFile.ormFeature.validUploadMimeTypes->first()/]', // array([for (type : String | genFile.ormFeature.validUploadMimeTypes) separator(', ')]'[type/]'[/for]),
[/if]
	)) . PHP_EOL;
?>
[/let]
[/template]

[template protected generateInput(genField : GenUnitField, instanceVariable : String)
	? (genField.oclIsTypeOf(GenUnitElement) and not genField.isSingleton()) post(trim())]
echo form_input('[genField.modelPropertyName()/]');
[/template]

[template protected generateInput(genField : GenUnitField, instanceVariable : String)
	? (genField.oclIsKindOf(GenUnitAssociation)) post(trim())]
<?php
	echo Form::select('[genField.columnName()/][if (not genField.isSingleton())]['['/][']'/][/if]', $[genField.optionsName()/], $[instanceVariable/]->[genField.modelPropertyName()/][if (not genField.isSingleton())]_as_array()[/if],
		array(
			'id' => '[genField.uniqueName()/]',
			'class' => '[genField.styleClass()/] [genField.inputClass()/]',
[if (not genField.isSingleton())]
			'multiple' => 'multiple',
[/if]
[if (genField.isRequired() and not genField.genDisplayedOn.oclIsTypeOf(GenSearchUnit))]
			'required' => '',
[/if]
	)) . PHP_EOL;
?>
[/template]

[template protected generateInput(genField : GenUnitField, instanceVariable : String)
	? (genField.oclIsTypeOf(GenCaptchaField)) post(trim())]
<div class="g-recaptcha" data-sitekey="[genField.oclAsType(GenCaptchaField).jsfField.publicKey/]"></div>
<noscript>
<div style="width: 302px; height: 352px;">
 <div style="width: 302px; height: 352px; position: relative;">
  <div style="width: 302px; height: 352px; position: absolute;">
   <iframe src="https://www.google.com/recaptcha/api/fallback?k=[genField.oclAsType(GenCaptchaField).jsfField.publicKey/]"
                frameborder="0" scrolling="no"
                style="width: 302px; height:352px; border-style: none;">
   </iframe>
  </div>
  <div style="width: 250px; height: 80px; position: absolute; border-style: none;
                  bottom: 21px; left: 25px; margin: 0px; padding: 0px; right: 25px;">
   <textarea id="g-recaptcha-response" name="g-recaptcha-response"
                  class="g-recaptcha-response"
                  style="width: 250px; height: 80px; border: 1px solid #c1c1c1;
                         margin: 0px; padding: 0px; resize: none;" value="">
   </textarea>
  </div>
 </div>
</div>
</noscript>
[/template]


[template protected generateFormErrors(genDynamicUnit : GenDynamicUnit) post(trim())]
<?php
	if ( isset($field_errors)) {
		foreach ($field_errors AS $field => $message) {
?>
<p class="[genDynamicUnit.errorClass()/]"><?php echo __($message); ?></p>
<?php
		}
	} 
?>
[/template]