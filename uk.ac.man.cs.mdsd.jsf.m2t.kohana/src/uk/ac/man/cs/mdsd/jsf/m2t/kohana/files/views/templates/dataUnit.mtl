[comment encoding = UTF-8 /]
[module dataUnit(
	'http://www.cs.man.ac.uk/mdsd/2010/Jsf',
	'http://www.cs.man.ac.uk/mdsd/2010/ObjectRelationalMapping')]
[import uk::ac::man::cs::mdsd::web::m2t::core::common::featureProperties/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::common::fileInformation/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::common::names/]


[template public generateUnitView(unit : ContentUnit)
	? (unit.oclIsKindOf(DataUnit)) post(trim())]
[let dataUnit : DataUnit = unit.oclAsType(DataUnit)]
[file(dataUnit.viewFilename(), false)]
<section class="[dataUnit.styleClass/]<?php
	if (isset($[dataUnit.instanceName()/]_error)) {
		echo ' [dataUnit.errorClass/]';
	}
?>" id="[dataUnit.instanceName()/]">
 <h1 class="[dataUnit.captionClass/][if (dataUnit.omitCaption)] hidden[/if]">[dataUnit.generateUnitTitle(dataUnit.instanceName())/]</h1>
 <section class="[dataUnit.errorClass/]<?php if (empty($[dataUnit.instanceName()/]_error)) echo ' hidden'; ?>">
<?php if (!empty($[dataUnit.instanceName()/]_error)) { ?>
  <p class="[dataUnit.errorClass/]"><?php echo __($[dataUnit.instanceName()/]_error); ?></p>
<?php } ?>
 </section>
[if (not dataUnit.oclIsKindOf(IndexUnit))]
 [dataUnit.generateViewContent(dataUnit.instanceName())/]
	[if (dataUnit.supportActions->notEmpty())]
  [dataUnit.generateSupportActions()/]
	[/if]
[else]
[let indexUnit : IndexUnit = dataUnit.oclAsType(IndexUnit)]
 <div class="unit_padding">
  [dataUnit.generateViewContent(dataUnit.instanceName())/]
	[if (indexUnit.defaultPaginationSize) > 0]
<?php echo $pagination; ?>
	[/if]
	[if (dataUnit.supportActions->notEmpty())]
  [dataUnit.generateSupportActions()/]
	[/if]
 </div>
[/let]
[/if]
</section>
[/file]
[/let]
[/template]

[template private generateUnitTitle(unit : DataUnit, instanceVariable : String) post(trim())]
[if (unit.oclIsTypeOf(IndexGridUnit) or unit.dynamicTitle.oclIsUndefined())]
[unit.displayLabel/]
[elseif (unit.dynamicTitle.oclIsTypeOf(ServiceEntityElement))]
[let element : ServiceEntityElement = unit.dynamicTitle.oclAsType(ServiceEntityElement)]
	[if (not element.isEnumerationTypeSingleton())]
<?php echo HTML::chars($[instanceVariable/]->[element.modelPropertyName()/]); ?>
	[else]
[let enumerationType : EnumerationType
	= element.feature.oclAsType(SingletonElement).dataType.oclAsType(EnumerationType)]
<?php echo [enumerationType.modelClassName()/]::option($entry->[element.modelPropertyName()/]); ?>
[/let]
	[/if]
[/let]
[else]
<?php echo HTML::chars($[instanceVariable/]->[unit.dynamicTitle.oclAsType(ModelLabel).name/]()); ?>
[/if]
[/template]

[template private generateSupportActions(unit : DynamicUnit) post(trim())]
 <?php
	echo Form::open(
		Route::get('[unit.displayedOn.oclAsType(Page).controllerName()/]')->uri(array(
			'action' => 'support',
			'param' => 'submit'
			[if (unit.pageDisplayedOn().hasParameterisedUnits())]
		)) . URL::query($query_parameters, FALSE),
			[else]
		)),
			[/if]
		array(
			'id' => '[unit.instanceName()/]',
			'class' => '[unit.controlClass/]'
		)) . PHP_EOL;
?>
			[for (action : UnitSupportAction | unit.supportActions)]
  <?php
		echo Form::submit('[action.name/]', '[action.displayLabel/]') . PHP_EOL;
?>
			[/for]
  <?php
	echo Form::close() . PHP_EOL;
?>
[/template]

[template public generateViewContent(unit : ContentUnit, instanceVariable : String)
	? (unit.oclIsTypeOf(DetailsUnit)) post(trim())]
[let detailsUnit : DetailsUnit = unit.oclAsType(DetailsUnit)]
[detailsUnit.generateDetailsContent(instanceVariable)/]
[/let]
[/template]

[template public generateDetailsContent(unit : DataUnit, instanceVariable : String)
	post(trim())]
[if (unit.hasOmitFieldLabels())]
<ul class="[unit.layoutClass/]">
[else]
<dl class="[unit.layoutClass/]">
[/if]
[for (displayField : UnitField | unit.displayFields)]
	[if (displayField.conditionalDisplay())]
		[if (displayField.oclIsKindOf(UnitElement))]
 <?php if (!empty($[instanceVariable/]->[displayField.modelPropertyName()/])) { ?>
		[else]
 <?php if ($[instanceVariable/]->[displayField.modelPropertyName()/]->loaded()) { ?>
		[/if]
	[/if]
	[if (unit.hasOmitFieldLabels())]
<li class="[displayField.displayClass()/]">[displayField.generateDisplayField(instanceVariable)/]</li>
	[else]
 <dt class="[displayField.displayClass()/]">[displayField.displayLabel()/]</dt>
 <dd class="[displayField.displayClass()/]">[displayField.generateDisplayField(instanceVariable)/]</dd>
	[/if]
	[if (displayField.conditionalDisplay())]
  <?php } ?>
	[/if]
[/for]
[if (unit.hasOmitFieldLabels())]
</ul>
[else]
</dl>
[/if]
[/template]

[template protected generateViewContent(unit : DataUnit, instanceVariable : String)
	? (unit.oclIsTypeOf(IndexLineDirectionUnit)) post(trim())]
[let indexUnit : IndexLineDirectionUnit = unit.oclAsType(IndexLineDirectionUnit)]
<ul class="[indexUnit.layoutClass/]">
<?php foreach ($[instanceVariable/] as $entry): ?>
 <li>
[if (not indexUnit.omitCaption)]
  <section>
   <h1 class="[indexUnit.captionClass/]">[indexUnit.generateUnitTitle('entry')/]</h1>
[/if]
[for (displayField : UnitField | indexUnit.displayFields) ]
	[if (displayField.conditionalDisplay())]
		[if (displayField.oclIsKindOf(UnitElement))]
<?php if (!empty($entry->[displayField.modelPropertyName()/])) { ?>
		[else]
<?php if ($entry->[displayField.modelPropertyName()/]->loaded()) { ?>
		[/if]
	[/if]
<span class="[displayField.modelPropertyName()/]">[displayField.generateDisplayField('entry')/]</span>
	[if (displayField.conditionalDisplay())]
<?php } ?>
	[/if]
[/for]
[if (indexUnit.actions->notEmpty())]
<span class="actions">
	[for (action : InlineAction | indexUnit.actions)]
		[action.generateAction('entry')/]
	[/for]</span>
[else]

[/if]
[if (not indexUnit.omitCaption)]
  </section>
[/if]
 </li>
<?php endforeach ?>
</ul>
[/let]
[/template]

[template protected generateViewContent(unit : DataUnit, instanceVariable : String)
	? (unit.oclIsTypeOf(IndexPageDirectionUnit)) post(trim())]
[let indexUnit : IndexPageDirectionUnit = unit.oclAsType(IndexPageDirectionUnit)]
<ul class="[indexUnit.layoutClass/]">
<?php foreach ($[instanceVariable/] as $entry): ?>
 <li>
[if (not indexUnit.omitCaption)]
  <section>
   <h1 class="[indexUnit.captionClass/]">[indexUnit.generateUnitTitle('entry')/]</h1>
[/if]
  [unit.generateDetailsContent('entry')/]
[if (indexUnit.actions->notEmpty())]
  <td class="actions">
	[for (action : InlineAction | indexUnit.actions)]
		[action.generateAction('entry')/]
	[/for]</td>
[/if]
[if (not indexUnit.omitCaption)]
  </section>
[/if]
 </li>
<?php endforeach ?>
</ul>
[/let]
[/template]

[template public generateViewContent(unit : DataUnit, instanceVariable : String)
	? (unit.oclIsTypeOf(IndexGridUnit)) post(trim())]
[let indexUnit : IndexGridUnit = unit.oclAsType(IndexGridUnit)]
<table class="[indexUnit.layoutClass/]">
[if (not indexUnit.omitColumnLabels)]
 <thead class="[indexUnit.headerClass/]">
  <tr>
 	[for (displayField : UnitField | indexUnit.displayFields)]
   <th>[displayField.displayLabel()/]</th>
 	[/for]
	[if (indexUnit.actions->notEmpty())]
   <th>Actions</th>
	[/if]
  </tr>
 </thead>
[/if]
 <tbody>
<?php foreach ($[instanceVariable/] as $entry): ?>
  <tr class="<?php echo Text::alternate([for (class : String | indexUnit.rowClasses()) separator (', ')]'[class/]'[/for]); ?>">
 [for (displayField : UnitField | indexUnit.displayFields)]
   <td class="[displayField.styleClass()/]">[displayField.generateDisplayField('entry')/]</td>
[/for]
[if (indexUnit.actions->notEmpty())]
   <td class="actions">
	[for (action : InlineAction | indexUnit.actions)]
    [action.generateAction('entry')/]
	[/for]</td>
 [/if]
  </tr>
<?php endforeach ?>
 </tbody>
</table>
[/let]
[/template]


[template public generateDisplayField(field : UnitField, instanceVariable : String)
	? (field.isDataTypeSingleton()) post(trim())]
[let feature : UnitFeature = field.oclAsType(UnitFeature)]
[if (feature.actions->isEmpty())]
<?php
	[if (feature.maximumDisplaySize > 0)]
	[let maxSize : Integer = feature.maximumDisplaySize]
	if (strlen([feature.generateDisplayFieldAssess(instanceVariable)/]) > [maxSize/])
		$[feature.name/] = substr([feature.generateDisplayFieldAssess(instanceVariable)/], 0, [maxSize/] - 3) . '...';
	else
		$[feature.name/] = [feature.generateDisplayFieldAssess(instanceVariable)/];
	echo HTML::chars($[feature.name/]);
	[/let]
	[elseif (feature.isBooleanDataType())]
	echo [feature.generateDisplayFieldAssess(instanceVariable)/];
	[else]
	echo HTML::chars([feature.generateDisplayFieldAssess(instanceVariable)/]);
	[/if]
?>
[else]
[let action : InlineAction = feature.actions->first()]
[let targetController : Page = action.controller()]
[let targetUnit : DynamicUnit = action.oclAsType(SelectAction).target.oclAsType(DynamicUnit)]
<?php
	[if (feature.maximumDisplaySize > 0)]
	[let maxSize : Integer = feature.maximumDisplaySize]
	if (strlen([feature.generateDisplayFieldAssess(instanceVariable)/]) > [maxSize/])
		$[feature.name/] = substr([feature.generateDisplayFieldAssess(instanceVariable)/], 0, [maxSize/] - 3) . '...';
	else
		$[feature.name/] = [feature.generateDisplayFieldAssess(instanceVariable)/];
	[/let]
	[/if]
	echo HTML::anchor(
		Route::get('[targetController.controllerName()/]')->uri() . URL::query(array(
				'[targetUnit.parameterName()/]' => [if (field.displayedOn.oclIsTypeOf(DetailsUnit))]
$[instanceVariable/]->[field.modelPropertyName()/]->[targetUnit.service.keyName()/]
[else]
$[instanceVariable/]->[field.displayedOn.service.keyName()/]
[/if]
			), FALSE),
		HTML::chars([if (feature.maximumDisplaySize > 0)]
$[feature.name/][else]
[feature.generateDisplayFieldAssess(instanceVariable)/][/if]),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . [field.generateDisplayFieldAssess(instanceVariable)/]),
	));
?>
[/let]
[/let]
[/let]
[/if]
[/let]
[/template]

[template public generateDisplayField(field : UnitField, instanceVariable : String)
	? (field.isDateSingleton()) post(trim())]
[let dateFormat : String =
	if field.oclIsTypeOf(UnitElement) then
		field.oclAsType(UnitElement).dateFormat
	else if field.oclIsTypeOf(UnitAssociation) then
		field.oclAsType(UnitAssociation).dateFormat
	else if field.oclIsTypeOf(DateField) then
		field.oclAsType(DateField).dateFormat
	else
		''
	endif endif endif]
[if (dateFormat = '')]
<?php
	echo [field.generateDisplayFieldAssess(instanceVariable)/];
?>
[else]
<?php
	$date = new DateTime([field.generateDisplayFieldAssess(instanceVariable)/]);
	echo $date->format('[dateFormat/]');
?>
[/if]
[/let]
[/template]

[template public generateDisplayField(field : UnitField, instanceVariable : String)
	? (field.isEnumerationTypeSingleton()) post(trim())]
[let enumerationType : EnumerationType
	= field.oclAsType(UnitElement).serviceFeature.feature.oclAsType(SingletonElement).dataType.oclAsType(EnumerationType)]
<?php
	echo [enumerationType.modelClassName()/]::option($[instanceVariable/]->[field.oclAsType(UnitElement).modelPropertyName()/]);
?>
[/let]
[/template]

[template public generateDisplayField(field : UnitField, instanceVariable : String)
	? (field.isResourceSingleton()) post(trim())]
[let feature : UnitElement = field.oclAsType(UnitElement)]
<?php
	if (!empty($[instanceVariable/]->[feature.modelPropertyName()/]))
		echo HTML::anchor(
			$[instanceVariable/]->[feature.modelPropertyName()/],
			'[feature.displayLabel()/]',
			NULL, NULL, FALSE);
?>
[/let]
[/template]

[template public generateDisplayField(field : UnitField, instanceVariable : String)
	? (field.isAssociationSingleton()) post(trim())]
[let feature : UnitAssociation = field.oclAsType(UnitAssociation)]
[if (feature.units->isEmpty())]
	[if (feature.actions->isEmpty())]
<?php
		[if (feature.maximumDisplaySize > 0)]
		[let maxSize : Integer = feature.maximumDisplaySize]
	if (strlen([feature.generateDisplayFieldAssess(instanceVariable)/]) > [maxSize/])
		echo substr([feature.generateDisplayFieldAssess(instanceVariable)/], 0, [maxSize/] - 3) . '...';
	else
		echo [feature.generateDisplayFieldAssess(instanceVariable)/];
		[/let]
		[else]
	echo [feature.generateDisplayFieldAssess(instanceVariable)/];
		[/if]
?>
	[else]
	[let action : InlineAction = feature.actions->first()]
	[let targetController : Page = action.controller()]
	[let targetUnit : DynamicUnit = action.oclAsType(SelectAction).target.oclAsType(DynamicUnit)]
<?php
	echo HTML::anchor(
		Route::get('[targetController.controllerName()/]')->uri() . URL::query(array(
				'[targetUnit.parameterName()/]' => [if (field.displayedOn.oclIsTypeOf(DetailsUnit))]
$[instanceVariable/]->[field.modelPropertyName()/]->[targetUnit.service.keyName()/]
	[else]
$[instanceVariable/]->[field.displayedOn.service.keyName()/]
	[/if]
			), FALSE),
		HTML::chars([feature.generateDisplayFieldAssess(instanceVariable)/]),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . [feature.generateDisplayFieldAssess(instanceVariable)/]),
	));
?>
	[/let]
	[/let]
	[/let]
	[/if]
[else]
[let embeddedUnit : ContentUnit = feature.units->first()]
[feature.units.generateViewContent(instanceVariable.concat('->').concat(feature.modelPropertyName()))/]
[/let]
[/if]
[/let]
[/template]

[template public generateDisplayField(field : UnitField, instanceVariable : String)
	? (field.oclIsKindOf(UnitAssociation) and not field.isSingleton()) post(trim())]
[let feature : UnitAssociation = field.oclAsType(UnitAssociation)]
[if (feature.units->isEmpty())]
	[if (feature.displayOption = CollectionDisplayOptions::PageDirection)]
<?php foreach ($[instanceVariable/]->[feature.modelPropertyName()/]->find_all() as $value) {
	?><p><?php echo $value->[if (feature.dynamicLabel.oclIsUndefined())]displayLabel()[else][feature.dynamicLabel/]()[/if]; ?></p>
<?php } ?>
	[else]
<?php foreach ($[instanceVariable/]->[feature.modelPropertyName()/]->find_all() as $value) { ?><span><?php 
		[if (feature.actions->isEmpty())]
	echo $value->[if (feature.dynamicLabel.oclIsUndefined())]displayLabel()[else][feature.dynamicLabel/]()[/if];
		[else]
		[let action : InlineAction = feature.actions->first()]
		[let targetController : Page = action.controller()]
	echo HTML::anchor(
		Route::get('[targetController.controllerName()/]')->uri() . URL::query(array(
				'[action.oclAsType(SelectAction).target.oclAsType(DynamicUnit).parameterName()/]' => $value->[field.displayedOn.service.keyName()/]
			), FALSE),
		HTML::chars($value->[if (feature.dynamicLabel.oclIsUndefined())]displayLabel()[else][feature.dynamicLabel/]()[/if]),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . $value->[if (feature.dynamicLabel.oclIsUndefined())]displayLabel()[else][feature.dynamicLabel/]()[/if]),
	));
		[/let]
		[/let]
		[/if]
?></span><?php } ?>
	[/if]
[else]
[let embeddedUnit : ContentUnit = feature.units->first()]
<?php
	$[field.displayedOn.uniqueName()/] = $[instanceVariable/]->[feature.modelPropertyName()/]->[if (not embeddedUnit.oclIsKindOf(IndexUnit))]
find_all()[else][let embeddedIndexUnit : IndexUnit = embeddedUnit.oclAsType(IndexUnit)]
[if (embeddedIndexUnit.selection.oclIsUndefined())]
find_all()[else]
[embeddedIndexUnit.selection.instanceName()/](FALSE)[/if][/let][/if];
?>
[feature.units.generateViewContent(field.displayedOn.uniqueName())/]
[/let]
[/if]
[/let]
[/template]


[template public generateDisplayFieldAssess(field : UnitField, instanceVariable : String)
	? (field.oclIsTypeOf(UnitElement)) post(trim())]
[if (field.isBooleanDataType())]
Form::checkbox('[field.modelPropertyName()/]', '1', (bool) $[instanceVariable/]->[field.modelPropertyName()/], array(
		'class' => '[field.styleClass()/] [field.inputClass()/]',
		'disabled' => ''
))
[else]
$[instanceVariable/]->[field.modelPropertyName()/]
[/if]
[/template]

[template public generateDisplayFieldAssess(field : UnitField, instanceVariable : String)
	? (field.oclIsTypeOf(UnitAssociation)) post(trim())]
[let association : UnitAssociation = field.oclAsType(UnitAssociation)]
$[instanceVariable/]->[field.modelPropertyName()/]->[if (not association.dynamicLabel.oclIsUndefined())]
[association.dynamicLabel.name/]()[elseif (not association.childFeature.oclIsUndefined())]
[association.childFeature.generateDisplayChildAssess()/][else]
displayLabel()
[/if]
[/let]
[/template]

[template public generateDisplayChildAssess(child : UnitChildFeature)
	? (child.oclIsTypeOf(UnitChildElement)) post(trim())]
[let element : UnitChildElement = child.oclAsType(UnitChildElement)]
[element.serviceFeature.modelPropertyName()/]
[/let]
[/template]

[template public generateDisplayChildAssess(child : UnitChildFeature)
	? (child.oclIsTypeOf(UnitChildAssociation)) post(trim())]
[let association : UnitChildAssociation = child.oclAsType(UnitChildAssociation)]
[association.serviceFeature.modelPropertyName()/]->[if (association.childFeature.oclIsUndefined())]
displayLabel()[else]
[association.childFeature.generateDisplayChildAssess()/]
[/if]
[/let]
[/template]


[template public generateAction(action : InlineAction, instanceVariable : String) post(trim())]
[let targetController : Page = action.controller()]
<?php
	echo HTML::anchor(
		Route::get('[targetController.controllerName()/]')->uri([if (not action.oclIsTypeOf(SelectAction))]array(
			'action' => '[action.actionName()/]',
			'param' => $[instanceVariable/]->[action.usedBy.oclAsType(DynamicUnit).service.keyName()/]
		)[/if]
	[if (action.usedBy.oclAsType(DynamicUnit).pageDisplayedOn().hasParameterisedUnits())]
		[if (action.oclIsTypeOf(SelectAction))]
) . URL::query(array_merge($query_parameters, array(
			'[action.oclAsType(SelectAction).target.oclAsType(DynamicUnit).parameterName()/]' =>  $[instanceVariable/]->[action.usedBy.oclAsType(DynamicUnit).service.keyName()/]
		)), FALSE),
		[else]
) . URL::query($query_parameters, FALSE),
		[/if]
	[else]
		[if (action.oclIsTypeOf(SelectAction))]
) . URL::query(array(
			'[action.oclAsType(SelectAction).target.oclAsType(DynamicUnit).parameterName()/]' =>  $[instanceVariable/]->[action.usedBy.oclAsType(DynamicUnit).service.keyName()/]
		), FALSE),
		[else]
),
		[/if]
	[/if]
		HTML::chars(__('[action.displayLabel/]')),
		array(
			'title' => HTML::chars(__('[action.displayLabel/]') . ' ' . $[instanceVariable/]->displayLabel()),
	[if (action.oclIsTypeOf(DeleteAction))]
			'onclick' => 'return confirm(\'' . $[instanceVariable/]->displayLabel() . ' ' . __('[action.oclAsType(DeleteAction).oclAsType(DeleteAction).confirmMessage/]') . '\');'
	[/if]
	));
?>
[/let]
[/template]
