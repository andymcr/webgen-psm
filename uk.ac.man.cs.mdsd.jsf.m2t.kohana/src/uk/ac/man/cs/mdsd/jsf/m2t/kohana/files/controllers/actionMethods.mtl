[comment encoding = UTF-8 /]
[module actionMethods(
	'http://www.cs.man.ac.uk/mdsd/2010/GenJsf')]
[import uk::ac::man::cs::mdsd::jsf::m2t::core::common::featureProperties/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::common::names/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::files::controllers::commonMethods/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::files::controllers::controlMethods/]


[template public generateUnitMethods(genUnit : GenDynamicUnit)
	? (genUnit.oclIsTypeOf(GenActionUnit)) post(trim())]
[let genActionUnit : GenActionUnit = genUnit.oclAsType(GenActionUnit)]
public function action_[genActionUnit.actionName()/]()
{
	try
	{
		[genUnit.generateValuesFromFormToModel()/]
	[if (genUnit.hasForcedValueFeatures())]
		[genUnit.generateForcedFeatureValues()/]
	[/if]
	[if (genUnit.hasCaptchaFields())]
		[genUnit.generateCaptchaCheck()/]
	[/if]
	[if (genUnit.hasInterfaceFields())]
		[genUnit.generateRememberInterfaceFields()/]
		[genUnit.generateInterfaceFieldValidation()/]
		[genUnit.generateValidateOnlyControlFields()/]
	[/if]
		$this->[genUnit.instanceName()/]->check([if (genUnit.hasInterfaceFields())]$extra_validation[/if]);
	[for (genAction : GenUnitSupportAction | genActionUnit.genSupportActions)]
		if (array_key_exists('[genAction.name/]', $this->request->post()))
		{
			/* [protected (genActionUnit.instanceName().concat('.support.').concat(genAction.name))]
			 */
			/* [/protected]
			 */
		}
	[/for]
	}
[if (genUnit.hasCaptchaFields())]
		[genUnit.generateCatchCaptchaException()/]
[/if]
	catch (ORM_Validation_Exception $e)
	{
		$this->[genUnit.instanceName()/]_field_errors = $e->errors('');
	[if (genUnit.genDisplayedOn.oclAsType(GenPage).genPartOf.developmentVersion)]
		$unreported_field_errors = array_diff_key($this->[genUnit.instanceName()/]_field_errors, array([for
		(genField : GenUnitField | genUnit.inputFields())
			separator (', ')]'[genField.columnName()/]' => ''[/for][if (genUnit.hasInterfaceFields())], '_external' => ''[/if]));
		if (!empty($unreported_field_errors))
			$this->[genUnit.instanceName()/]_error = print_r($unreported_field_errors, TRUE);
	[/if]
	[if (genUnit.hasEncryptedFeatures())]
		[genUnit.generateClearEncryptedFeatures()/]
	[/if]
	}
}
[/let]
[/template]