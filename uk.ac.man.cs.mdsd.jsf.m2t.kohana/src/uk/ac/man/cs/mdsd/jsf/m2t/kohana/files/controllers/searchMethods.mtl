[comment encoding = UTF-8 /]
[module searchMethods(
	'http://www.cs.man.ac.uk/mdsd/2010/Jsf')]
[import uk::ac::man::cs::mdsd::web::m2t::core::common::featureProperties/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::common::names/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::files::controllers::commonMethods/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::files::controllers::controlMethods/]


[template public generateUnitMethods(unit : DynamicUnit)
	? (unit.oclIsTypeOf(SearchUnit)) post(trim())]
[let searchUnit : SearchUnit = unit.oclAsType(SearchUnit)]
public function action_[searchUnit.actionName()/]()
{
	try
		{
		[unit.generateValuesFromFormToModel()/]
	[if (unit.hasForcedValueFeatures())]
		[unit.generateForcedFeatureValues()/]
	[/if]
	[if (unit.hasCaptchaFields())]
		[unit.generateCaptchaCheck()/]
	[/if]
	[if (unit.hasInterfaceFields())]
		[unit.generateInterfaceFieldValidation()/]
	[/if]
//validate?		$this->[unit.instanceName()/]->save([if (unit.hasInterfaceFields())]$extra_validation[/if]);
		/* [protected ('action.'.concat(searchUnit.actionName()).concat('.x'))]
		 */
		/* [/protected]
		 */
	}
[if (unit.hasCaptchaFields())]
		[unit.generateCatchCaptchaException()/]
[/if]
	catch (ORM_Validation_Exception $e)
	{
		$this->[unit.instanceName()/]_field_errors = $e->errors('');
	[if (unit.displayedOn.oclAsType(Page).partOf.developmentVersion)]
		$unreported_field_errors = array_diff_key($this->[unit.instanceName()/]_field_errors, array([for
		(field : UnitField | unit.inputFields())
			separator (', ')]'[field.modelPropertyName()/]' => ''[/for][if (unit.hasInterfaceFields())], '_external' => ''[/if]));
		if (!empty($unreported_field_errors))
			$this->[unit.instanceName()/]_error = print_r($unreported_field_errors, TRUE);
	[/if]
	[if (unit.hasEncryptedFeatures())]
		[unit.generateClearEncryptedFeatures()/]
	[/if]
	}
[if (unit.hasInterfaceFields())]
		[unit.generateRememberInterfaceFields()/]
[/if]
[if (unit.isAuthenticated() or not unit.oclAsType(ControlUnit).cancelDestination.oclIsUndefined())]
	[searchUnit.generateHandleCancel()/]
[/if]
	[unit.generateValuesFromFormToModel()/]
[for (field : UnitField | searchUnit.displayFields)]
//	if (!empty($this->[unit.instanceName()/]->[field.modelPropertyName()/]))
//		$this->session->set('[searchUnit.resultsDestination.uniqueName()/]_[field.modelPropertyName()/]', $this->[unit.instanceName()/]->[field.modelPropertyName()/]);
//	else
//		$this->session->delete('[searchUnit.resultsDestination.uniqueName()/]_[field.modelPropertyName()/]');
[/for]
[if (searchUnit.displayedOn <> searchUnit.resultsDestination.displayedOn)]
//	$this->redirect(Route::get('[searchUnit.displayedOn.oclAsType(Page).controllerName()/]')->uri());
[/if]
}
[/let]
[/template]