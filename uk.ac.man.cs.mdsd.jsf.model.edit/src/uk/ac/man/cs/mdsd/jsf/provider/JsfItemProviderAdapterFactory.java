/**
 * <copyright>
 * </copyright>
 *
 * $Id: JsfItemProviderAdapterFactory.java,v 1.53 2014/08/22 14:32:42 andy Exp $
 */
package uk.ac.man.cs.mdsd.jsf.provider;

import java.util.ArrayList;
import java.util.Collection;

import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import uk.ac.man.cs.mdsd.criteria.CriteriaPackage;
import uk.ac.man.cs.mdsd.criteria.Order;
import uk.ac.man.cs.mdsd.criteria.PredicateComparisonOperator;
import uk.ac.man.cs.mdsd.criteria.PredicateEqualityOperator;
import uk.ac.man.cs.mdsd.criteria.PredicateIsOperator;
import uk.ac.man.cs.mdsd.criteria.PredicateLikeOperator;
import uk.ac.man.cs.mdsd.criteria.util.CriteriaSwitch;
import uk.ac.man.cs.mdsd.jsf.JsfFactory;
import uk.ac.man.cs.mdsd.jsf.util.JsfAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class JsfItemProviderAdapterFactory extends JsfAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public JsfItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.JsfModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JsfModelItemProvider jsfModelItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.JsfModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJsfModelAdapter() {
		if (jsfModelItemProvider == null) {
			jsfModelItemProvider = new JsfModelItemProvider(this);
		}

		return jsfModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.LocalAuthenticationSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocalAuthenticationSystemItemProvider localAuthenticationSystemItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.LocalAuthenticationSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocalAuthenticationSystemAdapter() {
		if (localAuthenticationSystemItemProvider == null) {
			localAuthenticationSystemItemProvider = new LocalAuthenticationSystemItemProvider(this);
		}

		return localAuthenticationSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.CasAuthentication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CasAuthenticationItemProvider casAuthenticationItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.CasAuthentication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCasAuthenticationAdapter() {
		if (casAuthenticationItemProvider == null) {
			casAuthenticationItemProvider = new CasAuthenticationItemProvider(this);
		}

		return casAuthenticationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.Service} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceItemProvider serviceItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.Service}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceAdapter() {
		if (serviceItemProvider == null) {
			serviceItemProvider = new ServiceItemProvider(this);
		}

		return serviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.ModelLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelLabelItemProvider modelLabelItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.ModelLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelLabelAdapter() {
		if (modelLabelItemProvider == null) {
			modelLabelItemProvider = new ModelLabelItemProvider(this);
		}

		return modelLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.Selection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectionItemProvider selectionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.Selection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectionAdapter() {
		if (selectionItemProvider == null) {
			selectionItemProvider = new SelectionItemProvider(this);
		}

		return selectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.ServiceEntityElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceEntityElementItemProvider serviceEntityElementItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.ServiceEntityElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceEntityElementAdapter() {
		if (serviceEntityElementItemProvider == null) {
			serviceEntityElementItemProvider = new ServiceEntityElementItemProvider(this);
		}

		return serviceEntityElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.ServiceEntityAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceEntityAssociationItemProvider serviceEntityAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.ServiceEntityAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceEntityAssociationAdapter() {
		if (serviceEntityAssociationItemProvider == null) {
			serviceEntityAssociationItemProvider = new ServiceEntityAssociationItemProvider(this);
		}

		return serviceEntityAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.ServiceViewAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceViewAssociationItemProvider serviceViewAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.ServiceViewAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceViewAssociationAdapter() {
		if (serviceViewAssociationItemProvider == null) {
			serviceViewAssociationItemProvider = new ServiceViewAssociationItemProvider(this);
		}

		return serviceViewAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.Page} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PageItemProvider pageItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.Page}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPageAdapter() {
		if (pageItemProvider == null) {
			pageItemProvider = new PageItemProvider(this);
		}

		return pageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.StaticMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticMenuItemProvider staticMenuItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.StaticMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticMenuAdapter() {
		if (staticMenuItemProvider == null) {
			staticMenuItemProvider = new StaticMenuItemProvider(this);
		}

		return staticMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.FixedPageMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedPageMenuEntryItemProvider fixedPageMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.FixedPageMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedPageMenuEntryAdapter() {
		if (fixedPageMenuEntryItemProvider == null) {
			fixedPageMenuEntryItemProvider = new FixedPageMenuEntryItemProvider(this);
		}

		return fixedPageMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.FixedActionMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedActionMenuEntryItemProvider fixedActionMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.FixedActionMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedActionMenuEntryAdapter() {
		if (fixedActionMenuEntryItemProvider == null) {
			fixedActionMenuEntryItemProvider = new FixedActionMenuEntryItemProvider(this);
		}

		return fixedActionMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.FixedCommandMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedCommandMenuEntryItemProvider fixedCommandMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.FixedCommandMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedCommandMenuEntryAdapter() {
		if (fixedCommandMenuEntryItemProvider == null) {
			fixedCommandMenuEntryItemProvider = new FixedCommandMenuEntryItemProvider(this);
		}

		return fixedCommandMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.EditStaticTextMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EditStaticTextMenuEntryItemProvider editStaticTextMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.EditStaticTextMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEditStaticTextMenuEntryAdapter() {
		if (editStaticTextMenuEntryItemProvider == null) {
			editStaticTextMenuEntryItemProvider = new EditStaticTextMenuEntryItemProvider(this);
		}

		return editStaticTextMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.DynamicMenu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicMenuItemProvider dynamicMenuItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.DynamicMenu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicMenuAdapter() {
		if (dynamicMenuItemProvider == null) {
			dynamicMenuItemProvider = new DynamicMenuItemProvider(this);
		}

		return dynamicMenuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.MenuIncludedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuIncludedElementItemProvider menuIncludedElementItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.MenuIncludedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuIncludedElementAdapter() {
		if (menuIncludedElementItemProvider == null) {
			menuIncludedElementItemProvider = new MenuIncludedElementItemProvider(this);
		}

		return menuIncludedElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.CaptchaField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CaptchaFieldItemProvider captchaFieldItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.CaptchaField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCaptchaFieldAdapter() {
		if (captchaFieldItemProvider == null) {
			captchaFieldItemProvider = new CaptchaFieldItemProvider(this);
		}

		return captchaFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.UnitSupportAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitSupportActionItemProvider unitSupportActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.UnitSupportAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitSupportActionAdapter() {
		if (unitSupportActionItemProvider == null) {
			unitSupportActionItemProvider = new UnitSupportActionItemProvider(this);
		}

		return unitSupportActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.CreateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateUnitItemProvider createUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.CreateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateUnitAdapter() {
		if (createUnitItemProvider == null) {
			createUnitItemProvider = new CreateUnitItemProvider(this);
		}

		return createUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.CreateUpdateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateUpdateUnitItemProvider createUpdateUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.CreateUpdateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateUpdateUnitAdapter() {
		if (createUpdateUnitItemProvider == null) {
			createUpdateUnitItemProvider = new CreateUpdateUnitItemProvider(this);
		}

		return createUpdateUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.MapUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapUnitItemProvider mapUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.MapUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapUnitAdapter() {
		if (mapUnitItemProvider == null) {
			mapUnitItemProvider = new MapUnitItemProvider(this);
		}

		return mapUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.UpdateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateUnitItemProvider updateUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.UpdateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateUnitAdapter() {
		if (updateUnitItemProvider == null) {
			updateUnitItemProvider = new UpdateUnitItemProvider(this);
		}

		return updateUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.StaticUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticUnitItemProvider staticUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.StaticUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticUnitAdapter() {
		if (staticUnitItemProvider == null) {
			staticUnitItemProvider = new StaticUnitItemProvider(this);
		}

		return staticUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.CommandUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandUnitItemProvider commandUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.CommandUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandUnitAdapter() {
		if (commandUnitItemProvider == null) {
			commandUnitItemProvider = new CommandUnitItemProvider(this);
		}

		return commandUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.UserCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserCommandItemProvider userCommandItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.UserCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserCommandAdapter() {
		if (userCommandItemProvider == null) {
			userCommandItemProvider = new UserCommandItemProvider(this);
		}

		return userCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.CreateSitemapUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateSitemapUnitItemProvider createSitemapUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.CreateSitemapUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateSitemapUnitAdapter() {
		if (createSitemapUnitItemProvider == null) {
			createSitemapUnitItemProvider = new CreateSitemapUnitItemProvider(this);
		}

		return createSitemapUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.UnitElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitElementItemProvider unitElementItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.UnitElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitElementAdapter() {
		if (unitElementItemProvider == null) {
			unitElementItemProvider = new UnitElementItemProvider(this);
		}

		return unitElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.UnitAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitAssociationItemProvider unitAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.UnitAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitAssociationAdapter() {
		if (unitAssociationItemProvider == null) {
			unitAssociationItemProvider = new UnitAssociationItemProvider(this);
		}

		return unitAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.UnitChildElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitChildElementItemProvider unitChildElementItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.UnitChildElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitChildElementAdapter() {
		if (unitChildElementItemProvider == null) {
			unitChildElementItemProvider = new UnitChildElementItemProvider(this);
		}

		return unitChildElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.UnitChildAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitChildAssociationItemProvider unitChildAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.UnitChildAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitChildAssociationAdapter() {
		if (unitChildAssociationItemProvider == null) {
			unitChildAssociationItemProvider = new UnitChildAssociationItemProvider(this);
		}

		return unitChildAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.DataTypeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeFieldItemProvider dataTypeFieldItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.DataTypeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeFieldAdapter() {
		if (dataTypeFieldItemProvider == null) {
			dataTypeFieldItemProvider = new DataTypeFieldItemProvider(this);
		}

		return dataTypeFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.DateField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateFieldItemProvider dateFieldItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.DateField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateFieldAdapter() {
		if (dateFieldItemProvider == null) {
			dateFieldItemProvider = new DateFieldItemProvider(this);
		}

		return dateFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.DetailsUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DetailsUnitItemProvider detailsUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.DetailsUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDetailsUnitAdapter() {
		if (detailsUnitItemProvider == null) {
			detailsUnitItemProvider = new DetailsUnitItemProvider(this);
		}

		return detailsUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.IndexGridUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndexGridUnitItemProvider indexGridUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.IndexGridUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndexGridUnitAdapter() {
		if (indexGridUnitItemProvider == null) {
			indexGridUnitItemProvider = new IndexGridUnitItemProvider(this);
		}

		return indexGridUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.IndexPageDirectionUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndexPageDirectionUnitItemProvider indexPageDirectionUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.IndexPageDirectionUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndexPageDirectionUnitAdapter() {
		if (indexPageDirectionUnitItemProvider == null) {
			indexPageDirectionUnitItemProvider = new IndexPageDirectionUnitItemProvider(this);
		}

		return indexPageDirectionUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.IndexLineDirectionUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndexLineDirectionUnitItemProvider indexLineDirectionUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.IndexLineDirectionUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndexLineDirectionUnitAdapter() {
		if (indexLineDirectionUnitItemProvider == null) {
			indexLineDirectionUnitItemProvider = new IndexLineDirectionUnitItemProvider(this);
		}

		return indexLineDirectionUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.SearchUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SearchUnitItemProvider searchUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.SearchUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSearchUnitAdapter() {
		if (searchUnitItemProvider == null) {
			searchUnitItemProvider = new SearchUnitItemProvider(this);
		}

		return searchUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.ActionUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionUnitItemProvider actionUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.ActionUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionUnitAdapter() {
		if (actionUnitItemProvider == null) {
			actionUnitItemProvider = new ActionUnitItemProvider(this);
		}

		return actionUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.RegistrationUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegistrationUnitItemProvider registrationUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.RegistrationUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRegistrationUnitAdapter() {
		if (registrationUnitItemProvider == null) {
			registrationUnitItemProvider = new RegistrationUnitItemProvider(this);
		}

		return registrationUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.LoginUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoginUnitItemProvider loginUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.LoginUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoginUnitAdapter() {
		if (loginUnitItemProvider == null) {
			loginUnitItemProvider = new LoginUnitItemProvider(this);
		}

		return loginUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.ForgottenPasswordUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForgottenPasswordUnitItemProvider forgottenPasswordUnitItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.ForgottenPasswordUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForgottenPasswordUnitAdapter() {
		if (forgottenPasswordUnitItemProvider == null) {
			forgottenPasswordUnitItemProvider = new ForgottenPasswordUnitItemProvider(this);
		}

		return forgottenPasswordUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.SelectAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectActionItemProvider selectActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.SelectAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectActionAdapter() {
		if (selectActionItemProvider == null) {
			selectActionItemProvider = new SelectActionItemProvider(this);
		}

		return selectActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.DeleteAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteActionItemProvider deleteActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.DeleteAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteActionAdapter() {
		if (deleteActionItemProvider == null) {
			deleteActionItemProvider = new DeleteActionItemProvider(this);
		}

		return deleteActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.FeatureSupportAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureSupportActionItemProvider featureSupportActionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.FeatureSupportAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureSupportActionAdapter() {
		if (featureSupportActionItemProvider == null) {
			featureSupportActionItemProvider = new FeatureSupportActionItemProvider(this);
		}

		return featureSupportActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.ModelReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelReferenceItemProvider modelReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.ModelReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelReferenceAdapter() {
		if (modelReferenceItemProvider == null) {
			modelReferenceItemProvider = new ModelReferenceItemProvider(this);
		}

		return modelReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.FeatureReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureReferenceItemProvider featureReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.FeatureReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureReferenceAdapter() {
		if (featureReferenceItemProvider == null) {
			featureReferenceItemProvider = new FeatureReferenceItemProvider(this);
		}

		return featureReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.jsf.CurrentUserReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CurrentUserReferenceItemProvider currentUserReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.jsf.CurrentUserReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCurrentUserReferenceAdapter() {
		if (currentUserReferenceItemProvider == null) {
			currentUserReferenceItemProvider = new CurrentUserReferenceItemProvider(this);
		}

		return currentUserReferenceItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (jsfModelItemProvider != null) jsfModelItemProvider.dispose();
		if (localAuthenticationSystemItemProvider != null) localAuthenticationSystemItemProvider.dispose();
		if (casAuthenticationItemProvider != null) casAuthenticationItemProvider.dispose();
		if (serviceItemProvider != null) serviceItemProvider.dispose();
		if (modelLabelItemProvider != null) modelLabelItemProvider.dispose();
		if (selectionItemProvider != null) selectionItemProvider.dispose();
		if (serviceEntityElementItemProvider != null) serviceEntityElementItemProvider.dispose();
		if (serviceEntityAssociationItemProvider != null) serviceEntityAssociationItemProvider.dispose();
		if (serviceViewAssociationItemProvider != null) serviceViewAssociationItemProvider.dispose();
		if (pageItemProvider != null) pageItemProvider.dispose();
		if (staticMenuItemProvider != null) staticMenuItemProvider.dispose();
		if (fixedPageMenuEntryItemProvider != null) fixedPageMenuEntryItemProvider.dispose();
		if (fixedActionMenuEntryItemProvider != null) fixedActionMenuEntryItemProvider.dispose();
		if (fixedCommandMenuEntryItemProvider != null) fixedCommandMenuEntryItemProvider.dispose();
		if (editStaticTextMenuEntryItemProvider != null) editStaticTextMenuEntryItemProvider.dispose();
		if (dynamicMenuItemProvider != null) dynamicMenuItemProvider.dispose();
		if (menuIncludedElementItemProvider != null) menuIncludedElementItemProvider.dispose();
		if (staticUnitItemProvider != null) staticUnitItemProvider.dispose();
		if (commandUnitItemProvider != null) commandUnitItemProvider.dispose();
		if (userCommandItemProvider != null) userCommandItemProvider.dispose();
		if (createSitemapUnitItemProvider != null) createSitemapUnitItemProvider.dispose();
		if (unitElementItemProvider != null) unitElementItemProvider.dispose();
		if (unitAssociationItemProvider != null) unitAssociationItemProvider.dispose();
		if (unitChildElementItemProvider != null) unitChildElementItemProvider.dispose();
		if (unitChildAssociationItemProvider != null) unitChildAssociationItemProvider.dispose();
		if (dataTypeFieldItemProvider != null) dataTypeFieldItemProvider.dispose();
		if (dateFieldItemProvider != null) dateFieldItemProvider.dispose();
		if (captchaFieldItemProvider != null) captchaFieldItemProvider.dispose();
		if (unitSupportActionItemProvider != null) unitSupportActionItemProvider.dispose();
		if (createUnitItemProvider != null) createUnitItemProvider.dispose();
		if (createUpdateUnitItemProvider != null) createUpdateUnitItemProvider.dispose();
		if (mapUnitItemProvider != null) mapUnitItemProvider.dispose();
		if (updateUnitItemProvider != null) updateUnitItemProvider.dispose();
		if (detailsUnitItemProvider != null) detailsUnitItemProvider.dispose();
		if (indexGridUnitItemProvider != null) indexGridUnitItemProvider.dispose();
		if (indexPageDirectionUnitItemProvider != null) indexPageDirectionUnitItemProvider.dispose();
		if (indexLineDirectionUnitItemProvider != null) indexLineDirectionUnitItemProvider.dispose();
		if (searchUnitItemProvider != null) searchUnitItemProvider.dispose();
		if (actionUnitItemProvider != null) actionUnitItemProvider.dispose();
		if (registrationUnitItemProvider != null) registrationUnitItemProvider.dispose();
		if (loginUnitItemProvider != null) loginUnitItemProvider.dispose();
		if (forgottenPasswordUnitItemProvider != null) forgottenPasswordUnitItemProvider.dispose();
		if (selectActionItemProvider != null) selectActionItemProvider.dispose();
		if (deleteActionItemProvider != null) deleteActionItemProvider.dispose();
		if (featureSupportActionItemProvider != null) featureSupportActionItemProvider.dispose();
		if (modelReferenceItemProvider != null) modelReferenceItemProvider.dispose();
		if (featureReferenceItemProvider != null) featureReferenceItemProvider.dispose();
		if (currentUserReferenceItemProvider != null) currentUserReferenceItemProvider.dispose();
	}

	/**
	 * A child creation extender for the {@link CriteriaPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class CriteriaChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends CriteriaSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateEqualityOperator(PredicateEqualityOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateComparisonOperator(PredicateComparisonOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateIsOperator(PredicateIsOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_IS_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_IS_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_IS_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_IS_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_IS_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_IS_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				return null;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateLikeOperator(PredicateLikeOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				return null;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseOrder(Order object) {
				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.ORDER__PATH,
						 JsfFactory.eINSTANCE.createModelReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.ORDER__PATH,
						 JsfFactory.eINSTANCE.createFeatureReference()));

				newChildDescriptors.add
					(createChildParameter
						(CriteriaPackage.Literals.ORDER__PATH,
						 JsfFactory.eINSTANCE.createCurrentUserReference()));

				return null;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return JsfEditPlugin.INSTANCE;
		}
	}

}
