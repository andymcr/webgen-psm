@Ecore(
	nsURI="http://andycarpenter.work/metamodel/security",
	nsPrefix="security"
)
@Ecore(
	validationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL",
	settingDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL",
	invocationDelegates="http://www.eclipse.org/emf/2002/Ecore/OCL"
)
@GenModel(
	editDirectory="/work.andycarpenter.metamodel.security.edit/src",
	editPluginID="work.andycarpenter.metamodel.security.edit",
	childCreationExtenders="true")
package work.andycarpenter.metamodel.security

import work.andycarpenter.metamodel.base.NamedDisplayElement
import work.andycarpenter.metamodel.orm.Attribute
import work.andycarpenter.metamodel.orm.Entity

annotation "http://www.eclipse.org/emf/2002/Ecore/OCL" as OCL


class SecurityModel {
	contains Authentication[1] authentication

	@OCL(derivation="not authentication.oclIsUndefined()")
	derived readonly unsettable transient volatile boolean isAuthenticated
}

abstract class Authentication {
	refers Entity[1] userModel
	refers Attribute[1] userKey
}

enum AuthenticationKeyTypes {
	Any = 0
	Email = 1
	Username = 2
}

class LocalAuthenticationSystem extends Authentication {
	refers Entity[1] authenticationModel
	refers Attribute[1] identifierFeture
	refers Attribute[1] passwordFeature

	AuthenticationKeyTypes[1] authenticationKey

	refers Entity[1] resetPasswordRequestModel

	contains RegistrationElement registrationElement opposite authentication
	@OCL(derivation="not registrationElement.oclIsUndefined()")
	derived readonly transient volatile boolean hasRegistrationElement

	contains LoginElement[1] loginElement opposite authentication

	contains LogoutElement[1] logoutElement opposite authentication

	contains ForgottenPasswordElement[1] forgottenPasswordElement opposite authentication

	contains ResetPasswordElement[1] resetPasswordElement opposite authentication

	boolean captcha

	boolean allowRememberMe

	boolean allowSelfRegistration

	boolean useEmailActivation = "true"

	boolean sendWelcomeEmail = "true"

	String sectionClass = ''
	String captionClass = ''
	String contentClass = ''
}

abstract class AuthenticationElement extends NamedDisplayElement {
	String[1] confirmLabel = ''

	String uriElement = ''

	String sectionClassOverride = ''
	@OCL(derivation="if sectionClassOverride.trim() <> '' then
			sectionClassOverride.trim()
		else if self.oclAsType(ecore::EObject).eContainer().sectionClass.trim() <> '' then
			self.eContainer().sectionClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String sectionClass
	@OCL(derivation="sectionClass <> ''")
	derived readonly transient volatile boolean hasSectionClass

	String captionClassOverride = ''
	@OCL(derivation="if captionClassOverride.trim() <> '' then
			captionClassOverride.trim()
		else if self.oclAsType(ecore::EObject).eContainer().captionClass.trim() <> '' then
			self.eContainer().captionClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String captionClass
	@OCL(derivation="captionClass <> ''")
	derived readonly transient volatile boolean hasCaptionClass

	String contentClassOverride = ''
	@OCL(derivation="if contentClassOverride.trim() <> '' then
			contentClassOverride.trim()
		else if self.oclAsType(ecore::EObject).eContainer().contentClass.trim() <> '' then
			self.eContainer().contentClass.trim()
		else
			''
		endif endif")
	derived readonly transient volatile String contentClass
	@OCL(derivation="contentClass <> ''")
	derived readonly transient volatile boolean hasContentClass
}

class RegistrationElement extends AuthenticationElement {
	refers LocalAuthenticationSystem[1] authentication opposite registrationElement
}

class LoginElement extends AuthenticationElement {
	refers LocalAuthenticationSystem[1] authentication opposite loginElement
}

class LogoutElement extends AuthenticationElement {
	refers LocalAuthenticationSystem[1] authentication opposite logoutElement
}

class ForgottenPasswordElement extends AuthenticationElement {
	refers LocalAuthenticationSystem[1] authentication opposite forgottenPasswordElement
	String[1] uriEmailSent
	String[1] emailSubject
	String[1] emailMessage
	String[1] emailSentCaption
	String[1] emailSentMessage
}

class ResetPasswordElement extends AuthenticationElement {
	refers LocalAuthenticationSystem[1] authentication opposite resetPasswordElement
}


class CasAuthentication extends Authentication {
	String[1] loginLabel
	String logoutLabel
}
