/**
 */
package uk.ac.man.cs.mdsd.gencriteria.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.edit.domain.EditingDomain;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import uk.ac.man.cs.mdsd.gencriteria.GencriteriaPackage;

import uk.ac.man.cs.mdsd.gencriteria.util.GencriteriaAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class GencriteriaItemProviderAdapterFactory extends GencriteriaAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(GenCriteriaEditPlugin.INSTANCE, GencriteriaPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public GencriteriaItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenNullLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenNullLiteralItemProvider genNullLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenNullLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenNullLiteralAdapter() {
		if (genNullLiteralItemProvider == null) {
			genNullLiteralItemProvider = new GenNullLiteralItemProvider(this);
		}

		return genNullLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateBooleanOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenPredicateBooleanOperatorItemProvider genPredicateBooleanOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateBooleanOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenPredicateBooleanOperatorAdapter() {
		if (genPredicateBooleanOperatorItemProvider == null) {
			genPredicateBooleanOperatorItemProvider = new GenPredicateBooleanOperatorItemProvider(this);
		}

		return genPredicateBooleanOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateEqualityOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenPredicateEqualityOperatorItemProvider genPredicateEqualityOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateEqualityOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenPredicateEqualityOperatorAdapter() {
		if (genPredicateEqualityOperatorItemProvider == null) {
			genPredicateEqualityOperatorItemProvider = new GenPredicateEqualityOperatorItemProvider(this);
		}

		return genPredicateEqualityOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateComparisonOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenPredicateComparisonOperatorItemProvider genPredicateComparisonOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateComparisonOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenPredicateComparisonOperatorAdapter() {
		if (genPredicateComparisonOperatorItemProvider == null) {
			genPredicateComparisonOperatorItemProvider = new GenPredicateComparisonOperatorItemProvider(this);
		}

		return genPredicateComparisonOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenOrder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenOrderItemProvider genOrderItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenOrder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenOrderAdapter() {
		if (genOrderItemProvider == null) {
			genOrderItemProvider = new GenOrderItemProvider(this);
		}

		return genOrderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateIsOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenPredicateIsOperatorItemProvider genPredicateIsOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateIsOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenPredicateIsOperatorAdapter() {
		if (genPredicateIsOperatorItemProvider == null) {
			genPredicateIsOperatorItemProvider = new GenPredicateIsOperatorItemProvider(this);
		}

		return genPredicateIsOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateLikeOperator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenPredicateLikeOperatorItemProvider genPredicateLikeOperatorItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenPredicateLikeOperator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenPredicateLikeOperatorAdapter() {
		if (genPredicateLikeOperatorItemProvider == null) {
			genPredicateLikeOperatorItemProvider = new GenPredicateLikeOperatorItemProvider(this);
		}

		return genPredicateLikeOperatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenIntegerLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenIntegerLiteralItemProvider genIntegerLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenIntegerLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenIntegerLiteralAdapter() {
		if (genIntegerLiteralItemProvider == null) {
			genIntegerLiteralItemProvider = new GenIntegerLiteralItemProvider(this);
		}

		return genIntegerLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenStringLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenStringLiteralItemProvider genStringLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenStringLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenStringLiteralAdapter() {
		if (genStringLiteralItemProvider == null) {
			genStringLiteralItemProvider = new GenStringLiteralItemProvider(this);
		}

		return genStringLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenCurrentTime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenCurrentTimeItemProvider genCurrentTimeItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenCurrentTime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenCurrentTimeAdapter() {
		if (genCurrentTimeItemProvider == null) {
			genCurrentTimeItemProvider = new GenCurrentTimeItemProvider(this);
		}

		return genCurrentTimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link uk.ac.man.cs.mdsd.gencriteria.GenFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenFunctionItemProvider genFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link uk.ac.man.cs.mdsd.gencriteria.GenFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenFunctionAdapter() {
		if (genFunctionItemProvider == null) {
			genFunctionItemProvider = new GenFunctionItemProvider(this);
		}

		return genFunctionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (genNullLiteralItemProvider != null) genNullLiteralItemProvider.dispose();
		if (genIntegerLiteralItemProvider != null) genIntegerLiteralItemProvider.dispose();
		if (genStringLiteralItemProvider != null) genStringLiteralItemProvider.dispose();
		if (genCurrentTimeItemProvider != null) genCurrentTimeItemProvider.dispose();
		if (genFunctionItemProvider != null) genFunctionItemProvider.dispose();
		if (genPredicateBooleanOperatorItemProvider != null) genPredicateBooleanOperatorItemProvider.dispose();
		if (genPredicateEqualityOperatorItemProvider != null) genPredicateEqualityOperatorItemProvider.dispose();
		if (genPredicateComparisonOperatorItemProvider != null) genPredicateComparisonOperatorItemProvider.dispose();
		if (genOrderItemProvider != null) genOrderItemProvider.dispose();
		if (genPredicateIsOperatorItemProvider != null) genPredicateIsOperatorItemProvider.dispose();
		if (genPredicateLikeOperatorItemProvider != null) genPredicateLikeOperatorItemProvider.dispose();
	}

}
