[comment encoding = UTF-8 /]
[module commonMethods(
	'http://www.cs.man.ac.uk/mdsd/2010/GenJsf',
	'http://www.cs.man.ac.uk/mdsd/2010/GenOrm')]
[import uk::ac::man::cs::mdsd::jsf::m2t::codeigniter::common::criteria/]
[import uk::ac::man::cs::mdsd::jsf::m2t::codeigniter::common::featureProperties/]
[import uk::ac::man::cs::mdsd::jsf::m2t::codeigniter::common::names/]


[template public generateLoggedInCheck(genPage : GenPage)
	? (not genPage.genPartOf.genAuthentication.oclIsUndefined())
	post(trim())]
log_message('debug', 'XXXX [genPage.name/] setting use of ssl ');
//use_ssl();
[if (genPage.genPartOf.genAuthentication.oclIsTypeOf(GenLocalAuthenticationSystem))]
[let genLocalAuthentication : GenLocalAuthenticationSystem
	= genPage.genPartOf.genAuthentication.oclAsType(GenLocalAuthenticationSystem)]
if (!$this->authentication_lib->isLoggedIn()) {
log_message('debug', 'XXXX [genPage.name/] redirecting to login ');
log_message('debug', 'XXXX [genPage.name/] current page '.$this->uri->uri_string);
	$this->session->set_userdata('login_referrer', $this->uri->uri_string);
	redirect('[if (genPage.genPartOf.genAuthentication.oclIsTypeOf(GenCasAuthentication))]
TBC[elseif (genPage.genPartOf.genAuthentication.oclIsTypeOf(GenLocalAuthenticationSystem))]
[genPage.genPartOf.genAuthentication.oclAsType(GenLocalAuthenticationSystem).genLoginUnit.asTargetUri()/][else]
TBC[/if]');
	return;
}
[/let]
[elseif (genPage.genPartOf.genAuthentication.oclIsTypeOf(GenCasAuthentication))]
[let genCasAuthentication : GenCasAuthentication
	= genPage.genPartOf.genAuthentication.oclAsType(GenCasAuthentication)]
[/let]
[/if]
[/template]

[template public generateDefaultUnitValues(genUnit : GenDynamicUnit) post(trim())]
[for (genField : GenUnitField | genUnit.defaultValueFields())]
[if (genField.oclIsKindOf(GenIncludedSingletonElement))]
$this->[genUnit.instanceName()/]->[genField.formFieldName()/] = [genField.oclAsType(GenIncludedSingletonElement).genDefaultValue.generateCriteria()/];
[else]
$this->[genUnit.instanceName()/]->[genField.formFieldName()/] = [genField.oclAsType(GenInterfaceField).genDefaultValue.generateCriteria()/];
[/if]
[/for]
[/template]

[template public generateValuesFromFormToModel(genUnit : GenDynamicUnit) post(trim())]
$related = $this->[genUnit.instanceName()/]->values($_POST, array([for
	(genField : GenUnitField | genUnit.inputFields())
		separator (', ')]'[genField.formFieldName()/]'[/for]));
[/template]

