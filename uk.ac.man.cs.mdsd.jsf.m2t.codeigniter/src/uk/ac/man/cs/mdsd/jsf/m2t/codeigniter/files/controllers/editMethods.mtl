[comment encoding = UTF-8 /]
[module editMethods(
	'http://www.cs.man.ac.uk/mdsd/2010/GenJsf')]
[import uk::ac::man::cs::mdsd::jsf::m2t::codeigniter::common::criteria/]
[import uk::ac::man::cs::mdsd::jsf::m2t::codeigniter::common::featureProperties/]
[import uk::ac::man::cs::mdsd::jsf::m2t::codeigniter::common::names/]
[import uk::ac::man::cs::mdsd::jsf::m2t::codeigniter::files::controllers::commonMethods/]


[template public generateUnitVariables(genUnit : GenDynamicUnit)
	? (genUnit.oclIsKindOf(GenEditUnit)) post(trim())]
$this->[genUnit.instanceName()/] = new [genUnit.modelName()/]();
[if (genUnit.genService.hasDefaultValueFeatures() or genUnit.genService.hasForcedValueFeatures() or genUnit.hasDefaultValueFields())]
	[if (genUnit.isAuthenticated())]
$this->[genUnit.instanceName()/]->loggedInUser = $this->getLoggedInUser();
	[/if]
[/if]
[if (genUnit.hasDefaultValueFields())]
[genUnit.generateDefaultUnitValues()/]
[/if]
[if (genUnit.oclIsTypeOf(GenCreateUpdateUnit) or genUnit.oclIsTypeOf(GenUpdateUnit))]
if ($this->session->userdata('[genUnit.sessionKey()/]')) {
	$this->[genUnit.instanceName()/]->get_by_id($this->session->userdata('[genUnit.sessionKey()/]'));
}
	[if (genUnit.oclIsTypeOf(GenUpdateUnit))]
if (!$this->[genUnit.instanceName()/]->exists()) {
	$this->[genUnit.instanceName()/]_error = 'Invalid [genUnit.modelName()/] identifier';
}
	[/if]
[/if]
[/template]

[template public generateUnitDisplay(genUnit : GenDynamicUnit)
	? (genUnit.oclIsKindOf(GenEditUnit)) post(trim())]
$data['['/]'[genUnit.instanceName()/]'[']'/] = $this->[genUnit.instanceName()/];
[/template]

[template public generateUnitMethods(genUnit : GenDynamicUnit)
	? (genUnit.oclIsTypeOf(GenCreateUnit)) post(trim())]
public function [genUnit.methodName()/]() {
[if (genUnit.isAuthenticated())]
	[genUnit.genDisplayedOn.oclAsType(GenPage).generateLoggedInCheck()/]

[/if]
[if (not genUnit.oclAsType(GenEditUnit).genCancelDestination.oclIsUndefined())]
	if ($this->input->post('cancel')) {
		$this->session->unset_userdata('[genUnit.sessionKey()/]');
		redirect('[genUnit.oclAsType(GenEditUnit).genCancelDestination.controllerName()/]');
		return;
	}

[/if]
[if (genUnit.hasInterfaceFields())]
	[genUnit.generateInterfaceFieldValidation()/]
[/if]
	[genUnit.generateSaveCode()/]
[if (genUnit.oclAsType(GenEditUnit).genConfirmDestination.oclIsUndefined())]
	$this->displayPage();
[/if]
}

[/template]

[template public generateUnitMethods(genUnit : GenDynamicUnit)
	? (genUnit.oclIsKindOf(GenCreateUpdateUnit) or genUnit.oclIsKindOf(GenUpdateUnit)) post(trim())]
public function [genUnit.methodName()/]($idSave = NULL) {
[if (genUnit.isAuthenticated())]
	[genUnit.genDisplayedOn.oclAsType(GenPage).generateLoggedInCheck()/]

[/if]
[if (not genUnit.oclAsType(GenEditUnit).genCancelDestination.oclIsUndefined())]
	if ($this->input->post('cancel')) {
		$this->session->unset_userdata('[genUnit.sessionKey()/]');
		redirect('[genUnit.oclAsType(GenEditUnit).genCancelDestination.controllerName()/]');
		return;
	}

[/if]
[if (genUnit.oclIsTypeOf(GenCreateUpdateUnit))]
[let genCreateUpdateUnit : GenCreateUpdateUnit = genUnit.oclAsType(GenCreateUpdateUnit)]
	[if (not genCreateUpdateUnit.jsfUnit.clearLabel.oclIsUndefined())]
	if ($this->input->post('clear')) {
		$this->[genUnit.instanceName()/]->clear();
		$this->session->unset_userdata('[genUnit.sessionKey()/]');
		$this->displayPage();
		return;
	}

	[/if]
[/let]
[/if]
	if (is_numeric($idSave)) {
		$this->session->set_userdata('[genUnit.sessionKey()/]', $idSave);
		$this->[genUnit.instanceName()/]->get_by_id($idSave);
	}
	if ([if (genUnit.oclIsKindOf(GenCreateUpdateUnit))]is_numeric($idSave) && [/if]!$this->[genUnit.instanceName()/]->exists()) {
		$this->[genUnit.instanceName()/]_error = 'Invalid [genUnit.modelName()/] identifier';
[if (not genUnit.oclAsType(GenEditUnit).genConfirmDestination.oclIsUndefined())]
		$this->displayPage();
[/if]
	} else {
		unset($this->[genUnit.instanceName()/]_error);
		if (!is_numeric($idSave)) {
[if (genUnit.hasInterfaceFields())]
			[genUnit.generateInterfaceFieldValidation()/]
[/if]
			[genUnit.generateSaveCode()/]
[if (not genUnit.oclAsType(GenEditUnit).genConfirmDestination.oclIsUndefined())]
		} else {
			$this->[genUnit.instanceName()/]->validate();
			$this->displayPage();
[/if]
		}
	}
[if (genUnit.oclAsType(GenEditUnit).genConfirmDestination.oclIsUndefined())]
	$this->displayPage();
[/if]
}

[for (genAction : GenDeleteAction | genUnit.deleteActions())]
public function [genAction.methodName()/]($id = NULL) {
[if (genUnit.isAuthenticated())]
	[genUnit.genDisplayedOn.oclAsType(GenPage).generateLoggedInCheck()/]

[/if]
	$[genAction.instanceName()/] = new [genAction.modelName()/]();
	$[genAction.instanceName()/]->get_by_id($id);
	if (!$[genAction.instanceName()/]->exists()) {
		$this->[genUnit.instanceName()/]_error = 'Invalid [genAction.modelName()/] identifier';
[if (not genAction.genDestination.oclIsUndefined())]
		$this->displayPage();
[/if]
	} else {
		$[genAction.instanceName()/]->delete();
[if (not genAction.genDestination.oclIsUndefined())]
		redirect('[genAction.genDestination.controllerName()/]');
[/if]
	}
[if (genAction.genDestination.oclIsUndefined())]
	$this->displayPage();
[/if]
}

[/for]
[/template]

[template public generateInterfaceFieldValidation(genUnit : GenDynamicUnit) post(trim())]
[for (genField : GenInterfaceField | genUnit.interfaceFields())]
$this->[genUnit.instanceName()/]->validation['['/]'[genField.formFieldName()/]'[']'/] = array(
		'label' => '[genField.displayLabel()/]',
		'rules' => array([if (genField.isRequired())]
'required', [/if]'trim'[if (genField.isCaseInsensitive())]
, 'strtolower'[/if][if (genField.isEncrypted())]
, 'encrypt'[/if][if (not genField.genMustMatch.oclIsUndefined())]
, 'matches' => '[genField.genMustMatch.formFieldName()/]'[/if])
	);
[/for]
[/template]

[template private generateSaveCode(genUnit : GenDynamicUnit) post(trim())]
$this->[genUnit.instanceName()/]->trans_start();
[genUnit.generateValuesFromFormToModel()/]
[if (genUnit.hasForcedValueFeatures())]
[genUnit.generateForcedFeatureValues()/]
[/if]
[if (genUnit.hasEncryptedFields())]
[genUnit.generateRememberEncryptedFields()/]
[/if]
if ($this->[genUnit.instanceName()/]->save($related)) {
	$this->[genUnit.instanceName()/]->trans_commit();
	$this->session->unset_userdata('[genUnit.sessionKey()/]');
[if (not genUnit.oclAsType(GenEditUnit).genConfirmDestination.oclIsUndefined())]
	redirect('[genUnit.oclAsType(GenEditUnit).genConfirmDestination.controllerName()/]');
[else]
	$this->[genUnit.instanceName()/]->clear();
	[if (genUnit.hasInterfaceFields())]
	[genUnit.generateClearInterfaceFields()/]
	[/if]
[/if]
} else {
	$this->[genUnit.instanceName()/]->trans_rollback();
[if (genUnit.genDisplayedOn.oclAsType(GenPage).genPartOf.developmentVersion)]
	$unreportedFieldErrors = array_diff_key($this->[genUnit.instanceName()/]->error->all, array([for
	(genField : GenUnitField | genUnit.inputFields())
		separator (', ')]'[genField.formFieldName()/]' => ''[/for]));
	if (!empty($unreportedFieldErrors)) {
		$this->[genUnit.instanceName()/]_error = $this->[genUnit.instanceName()/]->error->string;
	}
[/if]
[if (genUnit.hasEncryptedFields())]
	[genUnit.generateRestoreEncryptedFields()/]
[/if]
[if (not genUnit.oclAsType(GenEditUnit).genConfirmDestination.oclIsUndefined())]
	$this->displayPage();
[/if]
}
[/template]

[template public generateForcedFeatureValues(genUnit : GenDynamicUnit) post(trim())]
[for (genFeature : GenUnitField | genUnit.forcedValueFeatures())]
	[if (genFeature.oclIsTypeOf(GenIncludedSingletonElement))]
		$this->[genUnit.instanceName()/]->[genFeature.formFieldName()/] = [genFeature.oclAsType(GenIncludedSingletonElement).genForcedValue.generateCriteria()/];
	[else]
		$related['['/]'[genFeature.formFieldName()/]'[']'/] = [genFeature.oclAsType(GenIncludedSingletonAssociation).genForcedValue.generateCriteria()/];
	[/if]
[/for]
[/template]

[template public generateClearInterfaceFields(genUnit : GenDynamicUnit) post(trim())]
[for (genField : GenInterfaceField | genUnit.interfaceFields())]
unset($this->[genUnit.instanceName()/]->[genField.formFieldName()/]);
[/for]
[/template]