@Ecore(
	nsURI="http://andycarpenter.work/metamodel/service",
	nsPrefix="service"
)
@GenModel(
	editDirectory="/work.andycarpenter.metamodel.service.edit/src",
	editPluginID="work.andycarpenter.metamodel.service.edit",
	childCreationExtenders="true")
package work.andycarpenter.metamodel.service

import work.andycarpenter.metamodel.base.ConstantContainer
import work.andycarpenter.metamodel.base.FormalParameterList
import work.andycarpenter.metamodel.base.NamedElement
import work.andycarpenter.metamodel.orm.OrmModel
import work.andycarpenter.metamodel.orm.Repository


class ServiceModel {
	refers OrmModel[1] persistence
	contains Service[] services opposite partOf
}

class Service extends NamedElement, ConstantContainer {
	refers ServiceModel[1] partOf opposite services
	contains BusinessOperation[] operations opposite partOf
	refers Repository[] requires
	refers Service[] uses
	refers derived readonly unsettable transient volatile BusinessOperation[] fileOperations get {
		operations.filter[it.resultType.literal == "File"].toEList()
	}
	derived readonly transient unsettable volatile boolean hasFileOperations get {
		!fileOperations.isEmpty()
	}
}

class BusinessOperation extends NamedElement, FormalParameterList {
	container Service[1] partOf opposite operations
	refers Service[] uses
	OperationResultTypes[1] resultType
	String resultMimeType
}

enum OperationResultTypes {
	None
	File = 1
}

