@Ecore(
	nsURI="http://andycarpenter.work/metamodel/base",
	nsPrefix="base"
)
@GenModel(
	editDirectory="/work.andycarpenter.metamodel.base.edit/src",
	editPluginID="work.andycarpenter.metamodel.base.edit",
	childCreationExtenders="true")
package work.andycarpenter.metamodel.base

import work.andycarpenter.metamodel.expression.Expression
import work.andycarpenter.metamodel.expression.Literal
import work.andycarpenter.metamodel.expression.Variable


class NullLiteral extends Literal {
}

class BooleanLiteral extends Literal {
	Boolean[1] value
}

class IntegerLiteral extends Literal {
	int[1] value
}

class StringLiteral extends Literal {
	String[1] value
}

class TimeLiteral extends Literal {
	String[1] value
}


class CurrentTime extends Variable {
}

class CurrentUser extends Variable {
}


abstract class NamedElement {
	String[1] name
}

abstract class NamedDisplayElement extends NamedElement {
	String[1] displayLabel
}


interface ConstantContainer {
	contains Constant[] constants opposite definedBy
}

class Constant extends NamedElement {
	refers ConstantContainer definedBy opposite constants
	contains Expression value
}

class ConstantReference extends Variable { 
	refers Constant[1] value 
} 
 

abstract class Classifier extends NamedDisplayElement {
	derived readonly transient volatile boolean isBooleanClassifier get {
		if (this instanceof DataType)
			(this as DataType).isBooleanDataType
		else
			false
	}
	derived readonly transient volatile boolean isEmailClassifier get {
		if (this instanceof DataType)
			(this as DataType).isEmailDataType
		else
			false
	}
	derived readonly transient volatile boolean isEnumerationClassifier get {
		this instanceof EnumerationType
	}
	derived readonly transient volatile boolean isIntegerClassifier get {
		if (this instanceof DataType)
			(this as DataType).isIntegerDataType
		else
			false
	}
	derived readonly transient volatile boolean isStringClassifier get {
		if (this instanceof DataType)
			(this as DataType).isStringDataType
		else
			false
	}
	derived readonly transient volatile boolean isTextareaClassifier get {
		if (this instanceof DataType)
			(this as DataType).isTextareaDataType
		else
			false
	}
	derived readonly transient volatile boolean isUrlClassifier get {
		if (this instanceof DataType)
			(this as DataType).isUrlDataType
		else
			false
	}
}

class DataType extends Classifier {
	String[1] persistentType
	String[1] ormType
	String[1] wafType
	String[1] interfaceType
	String validationPattern = ''
	derived readonly transient volatile boolean isBooleanDataType get {
		name == 'Boolean'
	}
	derived readonly transient volatile boolean isEmailDataType get {
		name == 'Email'
	}
	derived readonly transient volatile boolean isEnumerationType get {
		this instanceof EnumerationType
	}
	derived readonly transient volatile boolean isIntegerDataType get {
		name == 'Integer'
	}
	derived readonly transient volatile boolean isStringDataType get {
		name == 'String'
	}
	derived readonly transient volatile boolean isTextareaDataType get {
		name == 'Textarea'
	}
	derived readonly transient volatile boolean isUrlDataType get {
		name == 'URL'
	}
}

class EnumerationType extends DataType {
	contains EnumerationLiteral[] enumerations
}

class EnumerationLiteral extends NamedDisplayElement {
}


interface FormalParameterList {
	contains FormalParameter[] parameters
}

class FormalParameter extends NamedElement {
	refers Classifier[1] dataType
	String defaultValue
	String placeholder = ''
	String description = ''
}

class ParameterReference extends Variable { 
	refers FormalParameter[1] parameter 
} 