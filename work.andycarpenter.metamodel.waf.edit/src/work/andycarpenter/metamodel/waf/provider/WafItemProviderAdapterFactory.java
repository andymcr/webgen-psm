/**
 */
package work.andycarpenter.metamodel.waf.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import work.andycarpenter.metamodel.base.BasePackage;
import work.andycarpenter.metamodel.base.Constant;
import work.andycarpenter.metamodel.base.util.BaseSwitch;
import work.andycarpenter.metamodel.expression.ExpressionPackage;
import work.andycarpenter.metamodel.expression.FunctionCall;
import work.andycarpenter.metamodel.expression.PredicateBooleanVariable;
import work.andycarpenter.metamodel.expression.PredicateComparisonOperator;
import work.andycarpenter.metamodel.expression.PredicateEqualityOperator;
import work.andycarpenter.metamodel.expression.PredicateInOperator;
import work.andycarpenter.metamodel.expression.PredicateIsEmpty;
import work.andycarpenter.metamodel.expression.PredicateIsNull;
import work.andycarpenter.metamodel.expression.PredicateLikeOperator;
import work.andycarpenter.metamodel.expression.util.ExpressionSwitch;
import work.andycarpenter.metamodel.orm.Attribute;
import work.andycarpenter.metamodel.orm.Order;
import work.andycarpenter.metamodel.orm.OrmPackage;
import work.andycarpenter.metamodel.orm.util.OrmSwitch;
import work.andycarpenter.metamodel.waf.WafFactory;
import work.andycarpenter.metamodel.waf.util.WafAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class WafItemProviderAdapterFactory extends WafAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WafItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.WafModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WafModelItemProvider wafModelItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.WafModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWafModelAdapter() {
		if (wafModelItemProvider == null) {
			wafModelItemProvider = new WafModelItemProvider(this);
		}

		return wafModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.SiteProperties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SitePropertiesItemProvider sitePropertiesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.SiteProperties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSitePropertiesAdapter() {
		if (sitePropertiesItemProvider == null) {
			sitePropertiesItemProvider = new SitePropertiesItemProvider(this);
		}

		return sitePropertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.Navigation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NavigationItemProvider navigationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.Navigation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNavigationAdapter() {
		if (navigationItemProvider == null) {
			navigationItemProvider = new NavigationItemProvider(this);
		}

		return navigationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.Menu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MenuItemProvider menuItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.Menu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMenuAdapter() {
		if (menuItemProvider == null) {
			menuItemProvider = new MenuItemProvider(this);
		}

		return menuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.SubmenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubmenuEntryItemProvider submenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.SubmenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubmenuEntryAdapter() {
		if (submenuEntryItemProvider == null) {
			submenuEntryItemProvider = new SubmenuEntryItemProvider(this);
		}

		return submenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ActionMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionMenuEntryItemProvider actionMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ActionMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionMenuEntryAdapter() {
		if (actionMenuEntryItemProvider == null) {
			actionMenuEntryItemProvider = new ActionMenuEntryItemProvider(this);
		}

		return actionMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.EditStaticTextMenuEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EditStaticTextMenuEntryItemProvider editStaticTextMenuEntryItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.EditStaticTextMenuEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEditStaticTextMenuEntryAdapter() {
		if (editStaticTextMenuEntryItemProvider == null) {
			editStaticTextMenuEntryItemProvider = new EditStaticTextMenuEntryItemProvider(this);
		}

		return editStaticTextMenuEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.CollectionUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionUnitStylesItemProvider collectionUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.CollectionUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionUnitStylesAdapter() {
		if (collectionUnitStylesItemProvider == null) {
			collectionUnitStylesItemProvider = new CollectionUnitStylesItemProvider(this);
		}

		return collectionUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.DefaultUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultUnitStylesItemProvider defaultUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.DefaultUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultUnitStylesAdapter() {
		if (defaultUnitStylesItemProvider == null) {
			defaultUnitStylesItemProvider = new DefaultUnitStylesItemProvider(this);
		}

		return defaultUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.CardsUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CardsUnitStylesItemProvider cardsUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.CardsUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCardsUnitStylesAdapter() {
		if (cardsUnitStylesItemProvider == null) {
			cardsUnitStylesItemProvider = new CardsUnitStylesItemProvider(this);
		}

		return cardsUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ControlUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ControlUnitStylesItemProvider controlUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ControlUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createControlUnitStylesAdapter() {
		if (controlUnitStylesItemProvider == null) {
			controlUnitStylesItemProvider = new ControlUnitStylesItemProvider(this);
		}

		return controlUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.DetailsUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DetailsUnitStylesItemProvider detailsUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.DetailsUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDetailsUnitStylesAdapter() {
		if (detailsUnitStylesItemProvider == null) {
			detailsUnitStylesItemProvider = new DetailsUnitStylesItemProvider(this);
		}

		return detailsUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.FormUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormUnitStylesItemProvider formUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.FormUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormUnitStylesAdapter() {
		if (formUnitStylesItemProvider == null) {
			formUnitStylesItemProvider = new FormUnitStylesItemProvider(this);
		}

		return formUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.GalleryUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GalleryUnitStylesItemProvider galleryUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.GalleryUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGalleryUnitStylesAdapter() {
		if (galleryUnitStylesItemProvider == null) {
			galleryUnitStylesItemProvider = new GalleryUnitStylesItemProvider(this);
		}

		return galleryUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.SliderUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SliderUnitStylesItemProvider sliderUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.SliderUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSliderUnitStylesAdapter() {
		if (sliderUnitStylesItemProvider == null) {
			sliderUnitStylesItemProvider = new SliderUnitStylesItemProvider(this);
		}

		return sliderUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.StaticUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticUnitStylesItemProvider staticUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.StaticUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticUnitStylesAdapter() {
		if (staticUnitStylesItemProvider == null) {
			staticUnitStylesItemProvider = new StaticUnitStylesItemProvider(this);
		}

		return staticUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.TabularUnitStyles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TabularUnitStylesItemProvider tabularUnitStylesItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.TabularUnitStyles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabularUnitStylesAdapter() {
		if (tabularUnitStylesItemProvider == null) {
			tabularUnitStylesItemProvider = new TabularUnitStylesItemProvider(this);
		}

		return tabularUnitStylesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ImageManipulation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageManipulationItemProvider imageManipulationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ImageManipulation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageManipulationAdapter() {
		if (imageManipulationItemProvider == null) {
			imageManipulationItemProvider = new ImageManipulationItemProvider(this);
		}

		return imageManipulationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.BackgroundFilter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BackgroundFilterItemProvider backgroundFilterItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.BackgroundFilter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBackgroundFilterAdapter() {
		if (backgroundFilterItemProvider == null) {
			backgroundFilterItemProvider = new BackgroundFilterItemProvider(this);
		}

		return backgroundFilterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ThumbnailFilter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThumbnailFilterItemProvider thumbnailFilterItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ThumbnailFilter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThumbnailFilterAdapter() {
		if (thumbnailFilterItemProvider == null) {
			thumbnailFilterItemProvider = new ThumbnailFilterItemProvider(this);
		}

		return thumbnailFilterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.SinglePageController} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SinglePageControllerItemProvider singlePageControllerItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.SinglePageController}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSinglePageControllerAdapter() {
		if (singlePageControllerItemProvider == null) {
			singlePageControllerItemProvider = new SinglePageControllerItemProvider(this);
		}

		return singlePageControllerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.MultiPageController} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiPageControllerItemProvider multiPageControllerItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.MultiPageController}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiPageControllerAdapter() {
		if (multiPageControllerItemProvider == null) {
			multiPageControllerItemProvider = new MultiPageControllerItemProvider(this);
		}

		return multiPageControllerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.StaticUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticUnitItemProvider staticUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.StaticUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticUnitAdapter() {
		if (staticUnitItemProvider == null) {
			staticUnitItemProvider = new StaticUnitItemProvider(this);
		}

		return staticUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.RouteActual} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouteActualItemProvider routeActualItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.RouteActual}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouteActualAdapter() {
		if (routeActualItemProvider == null) {
			routeActualItemProvider = new RouteActualItemProvider(this);
		}

		return routeActualItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.UnitAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitAttributeItemProvider unitAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.UnitAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitAttributeAdapter() {
		if (unitAttributeItemProvider == null) {
			unitAttributeItemProvider = new UnitAttributeItemProvider(this);
		}

		return unitAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.UnitAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitAssociationItemProvider unitAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.UnitAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitAssociationAdapter() {
		if (unitAssociationItemProvider == null) {
			unitAssociationItemProvider = new UnitAssociationItemProvider(this);
		}

		return unitAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.UnitLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitLabelItemProvider unitLabelItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.UnitLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitLabelAdapter() {
		if (unitLabelItemProvider == null) {
			unitLabelItemProvider = new UnitLabelItemProvider(this);
		}

		return unitLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.DataTypeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeFieldItemProvider dataTypeFieldItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.DataTypeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeFieldAdapter() {
		if (dataTypeFieldItemProvider == null) {
			dataTypeFieldItemProvider = new DataTypeFieldItemProvider(this);
		}

		return dataTypeFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.DateField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateFieldItemProvider dateFieldItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.DateField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateFieldAdapter() {
		if (dateFieldItemProvider == null) {
			dateFieldItemProvider = new DateFieldItemProvider(this);
		}

		return dateFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.SingletonUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingletonUnitItemProvider singletonUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.SingletonUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingletonUnitAdapter() {
		if (singletonUnitItemProvider == null) {
			singletonUnitItemProvider = new SingletonUnitItemProvider(this);
		}

		return singletonUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.CreateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateUnitItemProvider createUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.CreateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateUnitAdapter() {
		if (createUnitItemProvider == null) {
			createUnitItemProvider = new CreateUnitItemProvider(this);
		}

		return createUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.UpdateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UpdateUnitItemProvider updateUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.UpdateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUpdateUnitAdapter() {
		if (updateUnitItemProvider == null) {
			updateUnitItemProvider = new UpdateUnitItemProvider(this);
		}

		return updateUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.CreateUpdateUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CreateUpdateUnitItemProvider createUpdateUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.CreateUpdateUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCreateUpdateUnitAdapter() {
		if (createUpdateUnitItemProvider == null) {
			createUpdateUnitItemProvider = new CreateUpdateUnitItemProvider(this);
		}

		return createUpdateUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.MapUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapUnitItemProvider mapUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.MapUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapUnitAdapter() {
		if (mapUnitItemProvider == null) {
			mapUnitItemProvider = new MapUnitItemProvider(this);
		}

		return mapUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.DetailsUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DetailsUnitItemProvider detailsUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.DetailsUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDetailsUnitAdapter() {
		if (detailsUnitItemProvider == null) {
			detailsUnitItemProvider = new DetailsUnitItemProvider(this);
		}

		return detailsUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.TabularUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TabularUnitItemProvider tabularUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.TabularUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTabularUnitAdapter() {
		if (tabularUnitItemProvider == null) {
			tabularUnitItemProvider = new TabularUnitItemProvider(this);
		}

		return tabularUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.Badge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BadgeItemProvider badgeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.Badge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBadgeAdapter() {
		if (badgeItemProvider == null) {
			badgeItemProvider = new BadgeItemProvider(this);
		}

		return badgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.TextCardsUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextCardsUnitItemProvider textCardsUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.TextCardsUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextCardsUnitAdapter() {
		if (textCardsUnitItemProvider == null) {
			textCardsUnitItemProvider = new TextCardsUnitItemProvider(this);
		}

		return textCardsUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.DateCardsUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateCardsUnitItemProvider dateCardsUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.DateCardsUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateCardsUnitAdapter() {
		if (dateCardsUnitItemProvider == null) {
			dateCardsUnitItemProvider = new DateCardsUnitItemProvider(this);
		}

		return dateCardsUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ImageCardsUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImageCardsUnitItemProvider imageCardsUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ImageCardsUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImageCardsUnitAdapter() {
		if (imageCardsUnitItemProvider == null) {
			imageCardsUnitItemProvider = new ImageCardsUnitItemProvider(this);
		}

		return imageCardsUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.SliderUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SliderUnitItemProvider sliderUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.SliderUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSliderUnitAdapter() {
		if (sliderUnitItemProvider == null) {
			sliderUnitItemProvider = new SliderUnitItemProvider(this);
		}

		return sliderUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.GalleryUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GalleryUnitItemProvider galleryUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.GalleryUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGalleryUnitAdapter() {
		if (galleryUnitItemProvider == null) {
			galleryUnitItemProvider = new GalleryUnitItemProvider(this);
		}

		return galleryUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.SearchUnit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SearchUnitItemProvider searchUnitItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.SearchUnit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSearchUnitAdapter() {
		if (searchUnitItemProvider == null) {
			searchUnitItemProvider = new SearchUnitItemProvider(this);
		}

		return searchUnitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ChildPathAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildPathAssociationItemProvider childPathAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ChildPathAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChildPathAssociationAdapter() {
		if (childPathAssociationItemProvider == null) {
			childPathAssociationItemProvider = new ChildPathAssociationItemProvider(this);
		}

		return childPathAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ChildPathAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildPathAttributeItemProvider childPathAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ChildPathAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChildPathAttributeAdapter() {
		if (childPathAttributeItemProvider == null) {
			childPathAttributeItemProvider = new ChildPathAttributeItemProvider(this);
		}

		return childPathAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.FeaturePathAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePathAssociationItemProvider featurePathAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.FeaturePathAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePathAssociationAdapter() {
		if (featurePathAssociationItemProvider == null) {
			featurePathAssociationItemProvider = new FeaturePathAssociationItemProvider(this);
		}

		return featurePathAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.FeaturePathAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePathAttributeItemProvider featurePathAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.FeaturePathAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePathAttributeAdapter() {
		if (featurePathAttributeItemProvider == null) {
			featurePathAttributeItemProvider = new FeaturePathAttributeItemProvider(this);
		}

		return featurePathAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.FeaturePathLabel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeaturePathLabelItemProvider featurePathLabelItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.FeaturePathLabel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeaturePathLabelAdapter() {
		if (featurePathLabelItemProvider == null) {
			featurePathLabelItemProvider = new FeaturePathLabelItemProvider(this);
		}

		return featurePathLabelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.PathVariableAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathVariableAssociationItemProvider pathVariableAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.PathVariableAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathVariableAssociationAdapter() {
		if (pathVariableAssociationItemProvider == null) {
			pathVariableAssociationItemProvider = new PathVariableAssociationItemProvider(this);
		}

		return pathVariableAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.PathVariableAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathVariableAttributeItemProvider pathVariableAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.PathVariableAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathVariableAttributeAdapter() {
		if (pathVariableAttributeItemProvider == null) {
			pathVariableAttributeItemProvider = new PathVariableAttributeItemProvider(this);
		}

		return pathVariableAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.DeleteAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeleteActionItemProvider deleteActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.DeleteAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeleteActionAdapter() {
		if (deleteActionItemProvider == null) {
			deleteActionItemProvider = new DeleteActionItemProvider(this);
		}

		return deleteActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ContainerSelectAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerSelectActionItemProvider containerSelectActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ContainerSelectAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerSelectActionAdapter() {
		if (containerSelectActionItemProvider == null) {
			containerSelectActionItemProvider = new ContainerSelectActionItemProvider(this);
		}

		return containerSelectActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.InstanceSelectAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceSelectActionItemProvider instanceSelectActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.InstanceSelectAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceSelectActionAdapter() {
		if (instanceSelectActionItemProvider == null) {
			instanceSelectActionItemProvider = new InstanceSelectActionItemProvider(this);
		}

		return instanceSelectActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.TargetAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetActionItemProvider targetActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.TargetAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetActionAdapter() {
		if (targetActionItemProvider == null) {
			targetActionItemProvider = new TargetActionItemProvider(this);
		}

		return targetActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.InstanceOperationAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceOperationActionItemProvider instanceOperationActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.InstanceOperationAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceOperationActionAdapter() {
		if (instanceOperationActionItemProvider == null) {
			instanceOperationActionItemProvider = new InstanceOperationActionItemProvider(this);
		}

		return instanceOperationActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.ContainerOperationAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerOperationActionItemProvider containerOperationActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.ContainerOperationAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerOperationActionAdapter() {
		if (containerOperationActionItemProvider == null) {
			containerOperationActionItemProvider = new ContainerOperationActionItemProvider(this);
		}

		return containerOperationActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.GeneralOperationAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneralOperationActionItemProvider generalOperationActionItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.GeneralOperationAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGeneralOperationActionAdapter() {
		if (generalOperationActionItemProvider == null) {
			generalOperationActionItemProvider = new GeneralOperationActionItemProvider(this);
		}

		return generalOperationActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link work.andycarpenter.metamodel.waf.Message} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageItemProvider messageItemProvider;

	/**
	 * This creates an adapter for a {@link work.andycarpenter.metamodel.waf.Message}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageAdapter() {
		if (messageItemProvider == null) {
			messageItemProvider = new MessageItemProvider(this);
		}

		return messageItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (wafModelItemProvider != null) wafModelItemProvider.dispose();
		if (sitePropertiesItemProvider != null) sitePropertiesItemProvider.dispose();
		if (navigationItemProvider != null) navigationItemProvider.dispose();
		if (menuItemProvider != null) menuItemProvider.dispose();
		if (submenuEntryItemProvider != null) submenuEntryItemProvider.dispose();
		if (actionMenuEntryItemProvider != null) actionMenuEntryItemProvider.dispose();
		if (editStaticTextMenuEntryItemProvider != null) editStaticTextMenuEntryItemProvider.dispose();
		if (collectionUnitStylesItemProvider != null) collectionUnitStylesItemProvider.dispose();
		if (defaultUnitStylesItemProvider != null) defaultUnitStylesItemProvider.dispose();
		if (cardsUnitStylesItemProvider != null) cardsUnitStylesItemProvider.dispose();
		if (controlUnitStylesItemProvider != null) controlUnitStylesItemProvider.dispose();
		if (detailsUnitStylesItemProvider != null) detailsUnitStylesItemProvider.dispose();
		if (formUnitStylesItemProvider != null) formUnitStylesItemProvider.dispose();
		if (galleryUnitStylesItemProvider != null) galleryUnitStylesItemProvider.dispose();
		if (sliderUnitStylesItemProvider != null) sliderUnitStylesItemProvider.dispose();
		if (staticUnitStylesItemProvider != null) staticUnitStylesItemProvider.dispose();
		if (tabularUnitStylesItemProvider != null) tabularUnitStylesItemProvider.dispose();
		if (imageManipulationItemProvider != null) imageManipulationItemProvider.dispose();
		if (backgroundFilterItemProvider != null) backgroundFilterItemProvider.dispose();
		if (thumbnailFilterItemProvider != null) thumbnailFilterItemProvider.dispose();
		if (singlePageControllerItemProvider != null) singlePageControllerItemProvider.dispose();
		if (multiPageControllerItemProvider != null) multiPageControllerItemProvider.dispose();
		if (staticUnitItemProvider != null) staticUnitItemProvider.dispose();
		if (routeActualItemProvider != null) routeActualItemProvider.dispose();
		if (unitAttributeItemProvider != null) unitAttributeItemProvider.dispose();
		if (unitAssociationItemProvider != null) unitAssociationItemProvider.dispose();
		if (unitLabelItemProvider != null) unitLabelItemProvider.dispose();
		if (dataTypeFieldItemProvider != null) dataTypeFieldItemProvider.dispose();
		if (dateFieldItemProvider != null) dateFieldItemProvider.dispose();
		if (singletonUnitItemProvider != null) singletonUnitItemProvider.dispose();
		if (createUnitItemProvider != null) createUnitItemProvider.dispose();
		if (updateUnitItemProvider != null) updateUnitItemProvider.dispose();
		if (createUpdateUnitItemProvider != null) createUpdateUnitItemProvider.dispose();
		if (mapUnitItemProvider != null) mapUnitItemProvider.dispose();
		if (detailsUnitItemProvider != null) detailsUnitItemProvider.dispose();
		if (tabularUnitItemProvider != null) tabularUnitItemProvider.dispose();
		if (badgeItemProvider != null) badgeItemProvider.dispose();
		if (textCardsUnitItemProvider != null) textCardsUnitItemProvider.dispose();
		if (dateCardsUnitItemProvider != null) dateCardsUnitItemProvider.dispose();
		if (imageCardsUnitItemProvider != null) imageCardsUnitItemProvider.dispose();
		if (sliderUnitItemProvider != null) sliderUnitItemProvider.dispose();
		if (galleryUnitItemProvider != null) galleryUnitItemProvider.dispose();
		if (searchUnitItemProvider != null) searchUnitItemProvider.dispose();
		if (childPathAssociationItemProvider != null) childPathAssociationItemProvider.dispose();
		if (childPathAttributeItemProvider != null) childPathAttributeItemProvider.dispose();
		if (featurePathAssociationItemProvider != null) featurePathAssociationItemProvider.dispose();
		if (featurePathAttributeItemProvider != null) featurePathAttributeItemProvider.dispose();
		if (featurePathLabelItemProvider != null) featurePathLabelItemProvider.dispose();
		if (pathVariableAssociationItemProvider != null) pathVariableAssociationItemProvider.dispose();
		if (pathVariableAttributeItemProvider != null) pathVariableAttributeItemProvider.dispose();
		if (deleteActionItemProvider != null) deleteActionItemProvider.dispose();
		if (containerSelectActionItemProvider != null) containerSelectActionItemProvider.dispose();
		if (instanceSelectActionItemProvider != null) instanceSelectActionItemProvider.dispose();
		if (targetActionItemProvider != null) targetActionItemProvider.dispose();
		if (instanceOperationActionItemProvider != null) instanceOperationActionItemProvider.dispose();
		if (containerOperationActionItemProvider != null) containerOperationActionItemProvider.dispose();
		if (generalOperationActionItemProvider != null) generalOperationActionItemProvider.dispose();
		if (messageItemProvider != null) messageItemProvider.dispose();
	}

	/**
	 * A child creation extender for the {@link OrmPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class OrmChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends OrmSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseAttribute(Attribute object) {
				newChildDescriptors.add
					(createChildParameter
						(OrmPackage.Literals.ATTRIBUTE__ATTRIBUTE_DEFAULT_VALUE,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(OrmPackage.Literals.ATTRIBUTE__ATTRIBUTE_DEFAULT_VALUE,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseOrder(Order object) {
				newChildDescriptors.add
					(createChildParameter
						(OrmPackage.Literals.ORDER__PATH,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(OrmPackage.Literals.ORDER__PATH,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return WafEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link BasePackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class BaseChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends BaseSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseConstant(Constant object) {
				newChildDescriptors.add
					(createChildParameter
						(BasePackage.Literals.CONSTANT__VALUE,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(BasePackage.Literals.CONSTANT__VALUE,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return WafEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link ExpressionPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class ExpressionChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends ExpressionSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseFunctionCall(FunctionCall object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.FUNCTION_CALL__ACTUALS,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.FUNCTION_CALL__ACTUALS,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateBooleanVariable(PredicateBooleanVariable object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_BOOLEAN_VARIABLE__FEATURE,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_BOOLEAN_VARIABLE__FEATURE,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateEqualityOperator(PredicateEqualityOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_EQUALITY_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateComparisonOperator(PredicateComparisonOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_COMPARISON_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateInOperator(PredicateInOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IN_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateLikeOperator(PredicateLikeOperator object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__LEFT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_LIKE_OPERATOR__RIGHT,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateIsEmpty(PredicateIsEmpty object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_EMPTY__FEATURE,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_EMPTY__FEATURE,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePredicateIsNull(PredicateIsNull object) {
				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_NULL__FEATURE,
						 WafFactory.eINSTANCE.createPathVariableAssociation()));

				newChildDescriptors.add
					(createChildParameter
						(ExpressionPackage.Literals.PREDICATE_IS_NULL__FEATURE,
						 WafFactory.eINSTANCE.createPathVariableAttribute()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return WafEditPlugin.INSTANCE;
		}
	}

}
