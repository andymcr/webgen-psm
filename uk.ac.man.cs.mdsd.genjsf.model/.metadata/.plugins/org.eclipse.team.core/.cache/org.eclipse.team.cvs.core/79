[comment encoding = UTF-8 /]
[module detailsMethods(
	'http://www.cs.man.ac.uk/mdsd/2010/GenJsf')]
[import uk::ac::man::cs::mdsd::jsf::m2t::core::common::featureProperties/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::common::names/]
[import uk::ac::man::cs::mdsd::jsf::m2t::kohana::files::controllers::commonMethods/]


[template public generateUnitVariables(genUnit : GenContentUnit)
	? (genUnit.oclIsTypeOf(GenDetailsUnit)) post(trim())]
[let genDetailsUnit : GenDetailsUnit = genUnit.oclAsType(GenDetailsUnit)]
[if (genDetailsUnit.hasDefaultValueFields())]
[genDetailsUnit.generateDefaultUnitValues()/]
[/if]
[if (genDetailsUnit.genSelection.oclIsUndefined())]
$[genDetailsUnit.instanceName()/] = $this->request->query('[genUnit.parameterName()/]');
if (!empty($[genDetailsUnit.instanceName()/]))
{
	$this->[genDetailsUnit.instanceName()/] = ORM::factory('[genDetailsUnit.modelName()/]', $[genDetailsUnit.instanceName()/]);
	if (!$this->[genDetailsUnit.instanceName()/]->loaded())
	{
		$this->[genDetailsUnit.instanceName()/]_error = 'Invalid [genDetailsUnit.modelName()/] identifier';
	}
}
else
	$this->[genDetailsUnit.instanceName()/] = ORM::factory('[genDetailsUnit.modelName()/]');
[else]
$this->[genDetailsUnit.instanceName()/] = ORM::factory('[genDetailsUnit.modelName()/]')->[genDetailsUnit.genSelection.instanceName()/]();
[/if]
[/let]
[/template]

[template public generateUnitDisplay(genUnit : GenContentUnit)
	? (genUnit.oclIsKindOf(GenDetailsUnit)) post(trim())]
$this->[genUnit.templateInstanceName()/]->bind('[genUnit.instanceName()/]', $this->[genUnit.instanceName()/]);
[/template]



[template public generateUnitMethods(genUnit : GenContentUnit)
	? (genUnit.oclIsTypeOf(GenDetailsUnit)) post(trim())]
[let genDetailsUnit : GenDetailsUnit = genUnit.oclAsType(GenDetailsUnit)]
[for (genAction : GenDeleteAction | genDetailsUnit.deleteActions())]
[genAction.generateActionMethod('$this->'.concat(genDetailsUnit.instanceName()).concat('_error'))/]
[/for]
[/let]
[/template]